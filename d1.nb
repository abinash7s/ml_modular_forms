(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    592858,      11843]
NotebookOptionsPosition[    579505,      11637]
NotebookOutlinePosition[    579927,      11654]
CellTagsIndexPosition[    579884,      11651]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.946958509630892*^9, 3.9469585102243977`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8d81fb64-086a-c644-8f24-58b9cb674e7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9469585138458176`*^9, 3.9469585292877464`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2bc32d49-b277-4849-83e4-0d8dd66c602f"],

Cell[CellGroupData[{

Cell["Common functions", "Section",
 CellChangeTimes->{{3.948968196759503*^9, 3.948968198941534*^9}, {
  3.9512453806448402`*^9, 3.95124538256056*^9}, {3.951469410867176*^9, 
  3.951469412249916*^9}},ExpressionUUID->"13b0e49d-5a8b-3841-8ab4-\
460a47d57674"],

Cell[CellGroupData[{

Cell["Modular", "Subsection",
 CellChangeTimes->{{3.9500881158509274`*^9, 
  3.950088116717132*^9}},ExpressionUUID->"884784d7-3154-6649-a998-\
52e06430da1f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]1", "[", "q_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"DedekindEta", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], 
     RowBox[{"Log", "[", "q", "]"}]}], "]"}], "24"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]2", "[", "q_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"DedekindEta", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]], 
     RowBox[{"Log", "[", "q", "]"}]}], "]"}], "24"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polar", "[", "w_", "]"}], " ", ":=", " ", 
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["q", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "w"}], "24"]}]], " ", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", 
          RowBox[{"Series", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[CapitalDelta]1", "[", "q", "]"}], 
             FractionBox[
              RowBox[{"2", " ", "w"}], "24"]], ",", 
            RowBox[{"{", 
             RowBox[{"q", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "//",
         "Normal"}], ",", " ", "_Integer"}], "]"}]}], ",", " ", "q"}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.9428193921366444`*^9, 3.9428194279173813`*^9}, 
   3.942819463533392*^9, {3.942827608727745*^9, 3.9428276365669727`*^9}, {
   3.9428278095924606`*^9, 3.942827831374176*^9}, {3.942847488625532*^9, 
   3.942847494332615*^9}, 3.942849983420912*^9, {3.9429334435645046`*^9, 
   3.942933443803404*^9}, {3.9431751815752506`*^9, 3.9431751823442364`*^9}, 
   3.9454950765415287`*^9, 3.946237606149973*^9, 3.9469539634624844`*^9, {
   3.9469760589294662`*^9, 3.9469760594371777`*^9}, {3.9488697625246973`*^9, 
   3.948869767078784*^9}, 3.948970896997695*^9, {3.949740726245791*^9, 
   3.949740753390066*^9}, {3.949741306409108*^9, 3.9497413096859407`*^9}, {
   3.9497428958088703`*^9, 3.949742900442354*^9}, {3.949743102061263*^9, 
   3.949743105705591*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"56bc5f35-822a-1443-bdf7-08b1db7be599"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mock modular", "Subsection",
 CellChangeTimes->{{3.950088119607936*^9, 
  3.9500881227802687`*^9}},ExpressionUUID->"a188418c-4586-5048-ac7f-\
416fa1e61463"],

Cell[BoxData[
 RowBox[{
  RowBox[{"E2", "[", "q_", "]"}], " ", ":=", " ", 
  RowBox[{"1", "-", 
   RowBox[{"24", 
    RowBox[{"Sum", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"n", " ", 
        SuperscriptBox["q", "n"]}], 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "n"]}]], " ", ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "500"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"162e3268-8616-1842-a684-4c1b606b023f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kfnc", "[", 
   RowBox[{"w_", ",", "x_", ",", "y_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ImaginaryI]", 
    RowBox[{"-", "w"}]], 
   RowBox[{"Total", "[", " ", 
    RowBox[{"Flatten", "[", " ", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"GCD", "[", 
            RowBox[{"c", ",", "d"}], "]"}], "==", "1"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a", "*", "d"}], "-", "1"}], ")"}], ",", "c"}], "]"}], 
           "==", "0"}]}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["a", "c"], "y"}], "+", 
             RowBox[{
              FractionBox["d", "c"], "x"}]}], ")"}]}], "]"}], ",", "0"}], 
        "]"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"-", "c"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0", ",", 
         RowBox[{"c", "-", "1"}]}], "}"}]}], " ", "]"}], " ", "]"}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.93066834028309*^9, 3.9306683406972113`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"cab97af6-e388-b044-833c-cd2c90839f4a"],

Cell[BoxData[
 RowBox[{"mp1", " ", "is", " ", "the", " ", "analog", " ", 
  SubscriptBox["I", "11"], " ", "in", " ", "C", ".8", " ", "of", " ", 
  RowBox[{"2112.10023", ".", " ", "mp2"}], " ", "is", " ", "the", " ", 
  "analog", " ", "of", " ", 
  RowBox[{
   SubscriptBox["I", "12"], "."}]}]], "Text",
 CellChangeTimes->{
  3.950086780175931*^9, {3.950088189127421*^9, 
   3.9500881908263397`*^9}},ExpressionUUID->"fe6c242a-5deb-c54c-bc81-\
7f7efe5055e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m0", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["24", "w"], " ", "n", " ", 
   RowBox[{"Abs", " ", "@", " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Pi]"}], "c"], " ", 
       RowBox[{"N", "[", 
        RowBox[{"kfnc", "[", 
         RowBox[{"w", ",", "n", ",", 
          RowBox[{"n1", "-", 
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", "w"}], "24"]}], ")"}]}], ",", "c"}], "]"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Abs", "[", 
           RowBox[{"n1", "-", 
            RowBox[{"(", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", "w"}], "24"]}], ")"}]}], "]"}], "n"], ")"}], 
        FractionBox[
         RowBox[{
          RowBox[{"-", "w"}], "+", "1"}], "2"]], 
       RowBox[{"N", "[", 
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{"1", "-", "w"}], ",", " ", 
          RowBox[{"N", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"4", "\[Pi]"}], "c"], 
            SqrtBox[
             RowBox[{"n", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"n1", "-", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}], "]"}]}], 
         "]"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.932850162285973*^9, 3.932850188087037*^9}, {
  3.9328502351375914`*^9, 3.9328502791151237`*^9}, {3.9328503926864605`*^9, 
  3.9328503956885986`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"bb185398-59f3-904b-9ac3-9fed69d0cb71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m0l", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["24", "w"], " ", "n", " ", 
   RowBox[{"Abs", " ", "@", " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Pi]"}], "c"], " ", 
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"kfnc", "[", 
            RowBox[{"w", ",", "n", ",", 
             RowBox[{"n1", "-", 
              RowBox[{"(", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", "w"}], "24"]}], ")"}]}], ",", "c"}], "]"}], 
           "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"Abs", "[", 
              RowBox[{"n1", "-", 
               RowBox[{"(", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"2", " ", "w"}], "24"]}], ")"}]}], "]"}], "n"], 
            ")"}], 
           FractionBox[
            RowBox[{
             RowBox[{"-", "w"}], "+", "1"}], "2"]], 
          RowBox[{"N", "[", 
           RowBox[{"BesselI", "[", 
            RowBox[{
             RowBox[{"1", "-", "w"}], ",", " ", 
             RowBox[{"N", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"4", "\[Pi]"}], "c"], 
               SqrtBox[
                RowBox[{"n", " ", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"n1", "-", 
                   RowBox[{"(", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}], "]"}]}],
             "]"}], "]"}]}], ",", " ", 
         RowBox[{"n", "->", "0"}]}], " ", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9329103697741356`*^9, 3.932910403434654*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"54a3c9df-6296-aa4e-9df1-c989331a2393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mp1", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["24", "w"], " ", "n", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", "\[Pi]"}], "c"], " ", 
      RowBox[{"N", "[", 
       RowBox[{"kfnc", "[", 
        RowBox[{"w", ",", "n", ",", 
         RowBox[{"n1", "-", 
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", "w"}], "24"]}], ")"}]}], ",", "c"}], "]"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"n1", "-", 
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "w"}], "24"]}], ")"}]}], "]"}], "n"], ")"}], 
       FractionBox[
        RowBox[{
         RowBox[{"-", "w"}], "+", "1"}], "2"]], 
      RowBox[{"(", 
       RowBox[{"N", "[", 
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "-", "w"}], ",", " ", 
          RowBox[{"N", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"4", "\[Pi]"}], "c"], 
            SqrtBox[
             RowBox[{"n", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"n1", "-", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}], "]"}]}], 
         "]"}], "]"}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.932850746462783*^9, 3.932850840380574*^9}, {
   3.9328509398335905`*^9, 3.9328509875706697`*^9}, 3.934601182254797*^9, {
   3.934601414980242*^9, 3.934601431169422*^9}, 3.934601481758871*^9, {
   3.9346101671443005`*^9, 3.9346101687157154`*^9}, {3.9347768074100246`*^9, 
   3.934776810583006*^9}, {3.9500866723135242`*^9, 3.95008667716096*^9}, {
   3.950086727951161*^9, 3.950086773049753*^9}, 3.950087247668537*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"0a8f230b-a46c-a24a-bdee-ef955f27d921"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mp2", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["24", "w"], " ", "n", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", "\[Pi]"}], "c"], " ", 
      RowBox[{"N", "[", 
       RowBox[{"kfnc", "[", 
        RowBox[{"w", ",", "n", ",", 
         RowBox[{"n1", "-", 
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", "w"}], "24"]}], ")"}]}], ",", "c"}], "]"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"n1", "-", 
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "w"}], "24"]}], ")"}]}], "]"}], "n"], ")"}], 
       FractionBox[
        RowBox[{
         RowBox[{"-", "w"}], "+", "1"}], "2"]], 
      RowBox[{"(", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "w", " ", "c", " "}], 
         RowBox[{"4", " ", "\[Pi]", " ", 
          SqrtBox[
           RowBox[{"n", "  ", 
            RowBox[{"Abs", "[", 
             RowBox[{"n1", "-", 
              RowBox[{"(", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}]], 
        RowBox[{"N", "[", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{"-", "w"}], ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"4", "\[Pi]"}], "c"], 
             SqrtBox[
              RowBox[{"n", " ", 
               RowBox[{"Abs", "[", 
                RowBox[{"n1", "-", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}], "]"}]}],
           "]"}], "]"}]}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.932850746462783*^9, 3.932850840380574*^9}, {
   3.9328509398335905`*^9, 3.9328509875706697`*^9}, 3.934601182254797*^9, {
   3.934601414980242*^9, 3.934601431169422*^9}, {3.934601462653244*^9, 
   3.934601490415722*^9}, {3.934610174254383*^9, 3.9346101744503937`*^9}, 
   3.9500872582863083`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"0083c6a8-f8d8-e64e-9761-8efde37d7487"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mp1l", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["24", "w"], " ", "n", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", "\[Pi]"}], "c"], " ", 
      RowBox[{"Limit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"kfnc", "[", 
           RowBox[{"w", ",", "n", ",", 
            RowBox[{"n1", "-", 
             RowBox[{"(", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", "w"}], "24"]}], ")"}]}], ",", "c"}], "]"}], 
          "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"Abs", "[", 
             RowBox[{"n1", "-", 
              RowBox[{"(", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", "w"}], "24"]}], ")"}]}], "]"}], "n"], 
           ")"}], 
          FractionBox[
           RowBox[{
            RowBox[{"-", "w"}], "+", "1"}], "2"]], 
         RowBox[{"(", 
          RowBox[{"N", "[", 
           RowBox[{"BesselI", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "-", "w"}], ",", " ", 
             RowBox[{"N", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"4", "\[Pi]"}], "c"], 
               SqrtBox[
                RowBox[{"n", " ", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"n1", "-", 
                   RowBox[{"(", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}], "]"}]}],
             "]"}], "]"}], ")"}]}], ",", " ", 
        RowBox[{"n", "->", "0"}]}], " ", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.932850746462783*^9, 3.932850840380574*^9}, {
   3.9328509398335905`*^9, 3.9328509875706697`*^9}, {3.9346011387102585`*^9, 
   3.934601191130293*^9}, {3.9346015068693066`*^9, 3.934601507169838*^9}, {
   3.9346015375413246`*^9, 3.9346015397654495`*^9}, {3.9346101798157864`*^9, 
   3.934610181210802*^9}, 3.95008726219027*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"76872e97-ff8b-b941-8d00-3049d2f49b2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mp2l", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["24", "w"], " ", "n", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", "\[Pi]"}], "c"], " ", 
      RowBox[{"Limit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"kfnc", "[", 
           RowBox[{"w", ",", "n", ",", 
            RowBox[{"n1", "-", 
             RowBox[{"(", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", "w"}], "24"]}], ")"}]}], ",", "c"}], "]"}], 
          "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"Abs", "[", 
             RowBox[{"n1", "-", 
              RowBox[{"(", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", "w"}], "24"]}], ")"}]}], "]"}], "n"], 
           ")"}], 
          FractionBox[
           RowBox[{
            RowBox[{"-", "w"}], "+", "1"}], "2"]], 
         RowBox[{"(", " ", 
          RowBox[{
           FractionBox[
            RowBox[{"2", "w", " ", "c", " "}], 
            RowBox[{"4", " ", "\[Pi]", " ", 
             SqrtBox[
              RowBox[{"n", "  ", 
               RowBox[{"Abs", "[", 
                RowBox[{"n1", "-", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}]], 
           RowBox[{"N", "[", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{"-", "w"}], ",", " ", 
              RowBox[{"N", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{"4", "\[Pi]"}], "c"], 
                SqrtBox[
                 RowBox[{"n", " ", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"n1", "-", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", "w"}], "24"]}], ")"}]}], "]"}]}]]}], "]"}]}],
              "]"}], "]"}]}], ")"}]}], ",", " ", 
        RowBox[{"n", "->", "0"}]}], " ", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.932850746462783*^9, 3.932850840380574*^9}, {
   3.9328509398335905`*^9, 3.9328509875706697`*^9}, {3.9346011387102585`*^9, 
   3.934601191130293*^9}, {3.9346015068693066`*^9, 3.9346015464029884`*^9}, {
   3.9346101842689533`*^9, 3.9346101857308197`*^9}, 3.950087265351391*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"1bb7ae88-0bd5-dd47-8749-f9619f91b344"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mp1re", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Re", "[", 
   RowBox[{"mp1", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mp1abs", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"mp1", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mp2re", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Re", "[", 
   RowBox[{"mp2", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mp2abs", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"mp2", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.950087266689996*^9, 3.950087310392421*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"404f1e80-a3be-914a-8ae9-445ac0a110f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mp1lre", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Re", "[", 
   RowBox[{"mp1l", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mp1labs", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"mp1l", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mp2lre", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Re", "[", 
   RowBox[{"mp2l", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mp2labs", "[", 
   RowBox[{"n_", ",", "n1_", " ", ",", " ", "w_"}], "]"}], " ", ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"mp2l", "[", 
    RowBox[{"n", ",", "n1", ",", "w"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.95008733764992*^9, 3.950087349529128*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"206b7d21-914f-b644-954c-d2bca2aa787b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cn0", "[", 
   RowBox[{"n_", ",", " ", "n1_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "  ", 
    RowBox[{"m0l", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}], ",", 
    RowBox[{"m0", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}]}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Or", " ", "you", " ", "can", " ", "directly", " ", "put", " ", "0", " ", 
     "for", " ", "n"}], "=", "0"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.93291035682102*^9, 3.9329103584802647`*^9}, {
   3.932910419787715*^9, 3.9329104841360564`*^9}, {3.9329105962236376`*^9, 
   3.932910608061474*^9}, {3.932910678891204*^9, 3.932910691091337*^9}, 
   3.9500890428258667`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"8ac8c9ea-decf-c347-9ad4-d92fcd56f0ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cn1", "[", 
   RowBox[{"n_", ",", " ", "n1_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "  ", 
    RowBox[{"mp1l", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}], ",", 
    RowBox[{"mp1", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cn1re", "[", 
   RowBox[{"n_", ",", " ", "n1_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "  ", 
    RowBox[{"mp1lre", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}], ",", 
    RowBox[{"mp1re", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cn1abs", "[", 
   RowBox[{"n_", ",", " ", "n1_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "  ", 
    RowBox[{"mp1labs", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}], ",", 
    RowBox[{"mp1abs", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9500873634444447`*^9, 3.95008737948746*^9}, {
  3.950088428510788*^9, 3.950088432537562*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c47562ac-776c-7241-baf0-e570b7dbc41e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cn2", "[", 
   RowBox[{"n_", ",", " ", "n1_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "  ", 
    RowBox[{"mp2l", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}], ",", 
    RowBox[{"mp2", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cn2re", "[", 
   RowBox[{"n_", ",", " ", "n1_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "  ", 
    RowBox[{"mp2lre", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}], ",", 
    RowBox[{"mp2re", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cn2abs", "[", 
   RowBox[{"n_", ",", " ", "n1_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "  ", 
    RowBox[{"mp2labs", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}], ",", 
    RowBox[{"mp2abs", "[", 
     RowBox[{"n", ",", "n1", ",", "w"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9500873634444447`*^9, 3.95008737948746*^9}, {
  3.950088428510788*^9, 3.950088432537562*^9}, {3.950088481247768*^9, 
  3.950088508583003*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"17f9b2e0-a5a7-a04f-85ac-19f2954ffa64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]0", "[", 
   RowBox[{"n_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"polar", "[", "w", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"cn0", "[", 
       RowBox[{"n", ",", " ", 
        RowBox[{"i", "-", "1"}], ",", "w"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"polar", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9329114565588274`*^9, 3.9329114835052257`*^9}, {
   3.9329115775644445`*^9, 3.9329115790936975`*^9}, 3.932911625530455*^9, {
   3.932911722576579*^9, 3.932911724098849*^9}, {3.93291191345138*^9, 
   3.932911926951315*^9}, {3.9329119813311243`*^9, 3.9329120256128793`*^9}, {
   3.9329121395743937`*^9, 3.932912145670452*^9}, {3.950089084437673*^9, 
   3.9500890978915873`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"0aa0a0d9-2ea9-234f-81b1-ea6aee23b693"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]1", "[", 
   RowBox[{"n_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"polar", "[", "w", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"cn1", "[", 
       RowBox[{"n", ",", " ", 
        RowBox[{"i", "-", "1"}], ",", "w"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"polar", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]1re", "[", 
   RowBox[{"n_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"polar", "[", "w", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"cn1re", "[", 
       RowBox[{"n", ",", " ", 
        RowBox[{"i", "-", "1"}], ",", "w"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"polar", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]1abs", "[", 
   RowBox[{"n_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"polar", "[", "w", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"cn1abs", "[", 
       RowBox[{"n", ",", " ", 
        RowBox[{"i", "-", "1"}], ",", "w"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"polar", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9500868519516087`*^9, 3.950086858625928*^9}, {
  3.9500874044483833`*^9, 3.950087415551339*^9}, {3.9500884353054333`*^9, 
  3.950088444337879*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"96b2106e-8100-3642-b2b5-7178d4fbff97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]2", "[", 
   RowBox[{"n_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"polar", "[", "w", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"cn2", "[", 
       RowBox[{"n", ",", " ", 
        RowBox[{"i", "-", "1"}], ",", "w"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"polar", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]2re", "[", 
   RowBox[{"n_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"polar", "[", "w", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"cn2re", "[", 
       RowBox[{"n", ",", " ", 
        RowBox[{"i", "-", "1"}], ",", "w"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"polar", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]2abs", "[", 
   RowBox[{"n_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"polar", "[", "w", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"cn2abs", "[", 
       RowBox[{"n", ",", " ", 
        RowBox[{"i", "-", "1"}], ",", "w"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"polar", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9500868519516087`*^9, 3.950086858625928*^9}, {
  3.9500874044483833`*^9, 3.950087415551339*^9}, {3.9500884353054333`*^9, 
  3.950088444337879*^9}, {3.950088512228533*^9, 3.950088523477771*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"b5bddd77-b10a-4d49-9321-247107e14b52"]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobi", "Subsection",
 CellChangeTimes->{{3.9500881326568727`*^9, 
  3.95008813356808*^9}},ExpressionUUID->"fcd5c7ca-14ba-f741-bd0d-\
c6a13a2d7390"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datadefn", "[", 
   RowBox[{"rawData_", ",", "minLen_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newkeysTemp", ",", "newKeys", ",", "newVals", ",", "data"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newkeysTemp", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">=", " ", "minLen"}], ",", " ",
           "#", ",", " ", 
          RowBox[{
           RowBox[{"##", "&"}], "[", "]"}]}], " ", "]"}], " ", "&"}], " ", "/@",
        " ", 
       RowBox[{"Keys", "[", "rawData", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newKeys", " ", "=", 
      RowBox[{"newkeysTemp", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{";;", "minLen"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newVals", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Keys", "[", "#", "]"}], "]"}], ">=", " ", "minLen"}], 
          ",", " ", 
          RowBox[{"Values", "[", "#", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"##", "&"}], "[", "]"}]}], " ", "]"}], " ", "&"}], " ", "/@",
        " ", "rawData"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"newKeys", " ", "->", "newVals"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "data", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9493989363061037`*^9, 3.949399081488296*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"05e2f716-18ae-384d-b97d-fa20e298e612"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprod\[Theta]", "[", 
   RowBox[{
   "t1_", ",", "k_", ",", " ", "t2_", ",", " ", "l_", ",", " ", "t3_", ",", 
    " ", "m_", ",", " ", "t4_", ",", " ", "n_", ",", " ", "nq_", ",", " ", 
    "nu_"}], "]"}], ":=", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", " ", "u", ",", "th1", ",", "th2", ",", "q1", ",", " ", "q2", 
      ",", "  ", "eq", ",", " ", "cq", ",", " ", "in", ",", " ", "wt", ",", 
      " ", "o1", ",", " ", "o2", ",", " ", "o", ",", " ", "dt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"th1", "  ", "=", " ", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t1", ",", "u", ",", "q"}], "]"}], "k"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t2", ",", "u", ",", "q"}], "]"}], "l"], 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t3", ",", "u", ",", "q"}], "]"}], "m"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t4", ",", "u", ",", "q"}], "]"}], "n"]}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "0", ",", "nq"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "nu"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"th2", "  ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "<", "0"}], ",", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["u", 
            RowBox[{"-", "k"}]], " ", 
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}], ",", " ", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cq", " ", "=", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"th2", ",", "u"}], "]"}], ",", "0"}], "]"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"wt", " ", "=", " ", 
      RowBox[{
       RowBox[{"Exponent", "[", 
        RowBox[{"th1", ",", " ", "u", ",", " ", "List"}], "]"}], " ", "+", 
       " ", 
       FractionBox["k", "2"], " ", "+", " ", 
       FractionBox["l", "2"], "+", " ", 
       FractionBox["m", "2"], " ", "+", " ", 
       FractionBox["n", "2"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dt", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"cq", " ", "->", " ", "wt"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "!=", "0"}], " ", "||", " ", 
        RowBox[{"l", "!=", "0"}]}], ",", " ", 
       RowBox[{"dt", " ", "=", "  ", "dt"}], ",", " ", 
       RowBox[{"dt", " ", "=", " ", 
        RowBox[{"dt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dt", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947501068942152*^9, 3.947501090833145*^9}, {
  3.948968596164744*^9, 3.948968675570468*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"1aeb3000-cbc0-254e-a02b-0aaee11b6a5a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theta1", "[", 
   RowBox[{"k_", ",", "nq_", ",", "nu_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]", "[", 
   RowBox[{
   "1", ",", "k", ",", "2", ",", " ", "0", ",", " ", "3", ",", " ", "0", ",", 
    " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "nu"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta2", "[", 
   RowBox[{"l_", ",", "nq_", ",", "nu_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]", "[", 
   RowBox[{
   "1", ",", "0", ",", "2", ",", " ", "l", ",", " ", "3", ",", " ", "0", ",", 
    " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "nu"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta3", "[", 
   RowBox[{"m_", ",", "nq_", ",", "nu_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]", "[", 
   RowBox[{
   "1", ",", "0", ",", "2", ",", " ", "0", ",", " ", "3", ",", " ", "m", ",", 
    " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "nu"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta4", "[", 
   RowBox[{"n_", ",", "nq_", ",", "nu_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]", "[", 
   RowBox[{
   "1", ",", "0", ",", "2", ",", " ", "0", ",", " ", "3", ",", " ", "0", ",", 
    " ", "4", ",", " ", "n", ",", " ", "nq", ",", " ", "nu"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.948971284180387*^9, 3.9489713422506933`*^9}, {
  3.948971406006749*^9, 3.948971483107559*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"a6134fa5-0d59-bf4d-8487-cbbae0b2711b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "t1_", ",", "k_", ",", " ", "t2_", ",", " ", "l_", ",", " ", "t3_", ",", 
    " ", "m_", ",", " ", "t4_", ",", " ", "n_", ",", " ", "nq_", ",", " ", 
    "nu_", ",", "qInPower_"}], "]"}], ":=", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", " ", "u", ",", "th1", ",", "th2", ",", "q1", ",", " ", "q2", 
      ",", "  ", "cq", ",", " ", "cq2", ",", " ", "in", ",", " ", "wt", ",", 
      " ", "o1", ",", " ", "o2", ",", " ", "o", ",", " ", "dt", ",", 
      "mnnonzero"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"th1", "  ", "=", 
      RowBox[{"Assuming", "[", 
       RowBox[{
        RowBox[{"q", ">", "0"}], ",", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"EllipticTheta", "[", 
             RowBox[{"t1", ",", "u", ",", "q"}], "]"}], "k"], " ", 
           SuperscriptBox[
            RowBox[{"EllipticTheta", "[", 
             RowBox[{"t2", ",", "u", ",", "q"}], "]"}], "l"], 
           SuperscriptBox[
            RowBox[{"EllipticTheta", "[", 
             RowBox[{"t3", ",", "u", ",", "q"}], "]"}], "m"], " ", 
           SuperscriptBox[
            RowBox[{"EllipticTheta", "[", 
             RowBox[{"t4", ",", "u", ",", "q"}], "]"}], "n"]}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "0", ",", "nq"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", "nu"}], "}"}]}], "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"th2", "  ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "<", "0"}], ",", " ", 
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "k"}]], "th1"}], " ", ",", "th1"}], " ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mnnonzero", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "!=", "0"}], "||", 
         RowBox[{"n", "!=", "0"}]}], ",", "1", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cq", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", 
          RowBox[{"Series", "[", 
           RowBox[{
            FractionBox["#", 
             SuperscriptBox[
              RowBox[{"\[CapitalDelta]2", "[", "q", "]"}], 
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"k", "+", "l"}], "4"], "+", "mnnonzero", "-", 
                 "qInPower"}], ")"}]}]]], ",", 
            RowBox[{"{", 
             RowBox[{"q", ",", "0", ",", "nq"}], "}"}]}], "]"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"th2", ",", "u"}], "]"}], ",", "0"}], "]"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cq2", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@",
        "cq"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wt", " ", "=", " ", 
      RowBox[{
       RowBox[{"Exponent", "[", 
        RowBox[{"th1", ",", " ", "u", ",", " ", "List"}], "]"}], " ", "+", 
       " ", 
       FractionBox["k", "2"], " ", "+", " ", 
       FractionBox["l", "2"], "+", " ", 
       FractionBox["m", "2"], " ", "+", " ", 
       FractionBox["n", "2"], "-", 
       RowBox[{"6", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"k", "+", "l"}], "4"], "+", "mnnonzero", "-", "qInPower"}],
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dt", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"cq2", "->", "wt"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "!=", "0"}], " ", "||", " ", 
        RowBox[{"l", "!=", "0"}]}], ",", " ", 
       RowBox[{"dt", " ", "=", " ", "dt"}], ",", " ", 
       RowBox[{"dt", "=", 
        RowBox[{"dt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dt", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947501068942152*^9, 3.947501090833145*^9}, {
   3.948968596164744*^9, 3.948968675570468*^9}, {3.9493998449589243`*^9, 
   3.949399934202351*^9}, {3.9494000545512877`*^9, 3.949400079580152*^9}, {
   3.949400185781535*^9, 3.949400249689679*^9}, {3.949400284958132*^9, 
   3.94940028639823*^9}, {3.949400317247666*^9, 3.949400327272287*^9}, {
   3.949400508602454*^9, 3.949400587726514*^9}, {3.949400714229438*^9, 
   3.949400734017685*^9}, {3.949400938096589*^9, 3.9494009628752747`*^9}, 
   3.949401100400311*^9, {3.949401297062928*^9, 3.949401333195211*^9}, {
   3.949401448606473*^9, 3.949401573419796*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"da0e2599-8c32-dc48-b466-895a3be6aa6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprod\[Theta]by\[CapitalDelta]u0", "[", 
   RowBox[{
   "t1_", ",", "k_", ",", " ", "t2_", ",", " ", "l_", ",", " ", "t3_", ",", 
    " ", "m_", ",", " ", "t4_", ",", " ", "n_", ",", " ", "nq_", ",", 
    "qInPower_"}], "]"}], ":=", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", " ", "u", ",", "th1", ",", "th2", ",", "q1", ",", " ", "q2", 
      ",", "  ", "cq", ",", " ", "cq2", ",", " ", "in", ",", " ", "wt", ",", 
      " ", "o1", ",", " ", "o2", ",", " ", "o", ",", " ", "dt", ",", 
      "mnnonzero"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"th1", "  ", "=", 
      RowBox[{"Assuming", "[", 
       RowBox[{
        RowBox[{"q", ">", "0"}], ",", 
        RowBox[{"Series", "[", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"EllipticTheta", "[", 
             RowBox[{"t2", ",", "0", ",", "q"}], "]"}], "l"], 
           SuperscriptBox[
            RowBox[{"EllipticTheta", "[", 
             RowBox[{"t3", ",", "0", ",", "q"}], "]"}], "m"], " ", 
           SuperscriptBox[
            RowBox[{"EllipticTheta", "[", 
             RowBox[{"t4", ",", "0", ",", "q"}], "]"}], "n"]}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "0", ",", "nq"}], "}"}]}], "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"th2", "  ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"k", "<", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["u", 
            RowBox[{"-", "k"}]], "th1"}], " ", ",", "th1"}], " ", "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mnnonzero", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "!=", "0"}], "||", 
         RowBox[{"n", "!=", "0"}]}], ",", "1", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cq", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", 
          RowBox[{"Series", "[", 
           RowBox[{
            FractionBox["#", 
             SuperscriptBox[
              RowBox[{"\[CapitalDelta]2", "[", "q", "]"}], 
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"k", "+", "l"}], "4"], "+", "mnnonzero", "-", 
                 "qInPower"}], ")"}]}]]], ",", 
            RowBox[{"{", 
             RowBox[{"q", ",", "0", ",", "nq"}], "}"}]}], "]"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"th1", ",", "u"}], "]"}], ",", "0"}], "]"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cq2", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@",
        "cq"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wt", " ", "=", " ", 
      RowBox[{
       RowBox[{"Exponent", "[", 
        RowBox[{"th1", ",", " ", "u", ",", " ", "List"}], "]"}], " ", "+", 
       " ", 
       FractionBox["k", "2"], " ", "+", " ", 
       FractionBox["l", "2"], "+", " ", 
       FractionBox["m", "2"], " ", "+", " ", 
       FractionBox["n", "2"], "-", 
       RowBox[{"6", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"k", "+", "l"}], "4"], "+", "mnnonzero", "-", "qInPower"}],
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dt", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"cq2", "->", "wt"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "!=", "0"}], " ", "||", " ", 
        RowBox[{"l", "!=", "0"}]}], ",", " ", 
       RowBox[{"dt", " ", "=", " ", "dt"}], ",", " ", 
       RowBox[{"dt", "=", 
        RowBox[{"dt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dt", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.95308534319458*^9, 3.953085377023531*^9}, {
   3.9530854372303486`*^9, 3.953085444309496*^9}, {3.953085480595896*^9, 
   3.953085481987318*^9}, 3.95308591035042*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"f56be949-4ab6-e940-be1a-021e6fd7c034"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theta1by\[CapitalDelta]", "[", 
   RowBox[{"k_", ",", "nq_", ",", "nu_", ",", "qInPower_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "k", ",", "2", ",", " ", "0", ",", " ", "3", ",", " ", "0", ",", 
    " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "nu", ",", 
    "qInPower"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta2by\[CapitalDelta]", "[", 
   RowBox[{"l_", ",", "nq_", ",", "nu_", ",", "qInPower_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "0", ",", "2", ",", " ", "l", ",", " ", "3", ",", " ", "0", ",", 
    " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "nu", ",", 
    "qInPower"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta3by\[CapitalDelta]", "[", 
   RowBox[{"m_", ",", "nq_", ",", "nu_", ",", "qInPower_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "0", ",", "2", ",", " ", "0", ",", " ", "3", ",", " ", "m", ",", 
    " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "nu", ",", 
    "qInPower"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta4by\[CapitalDelta]", "[", 
   RowBox[{"n_", ",", "nq_", ",", "nu_", ",", "qInPower_"}], "]"}], ":=", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "0", ",", "2", ",", " ", "0", ",", " ", "3", ",", " ", "0", ",", 
    " ", "4", ",", " ", "n", ",", " ", "nq", ",", " ", "nu", ",", 
    "qInPower"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.948971284180387*^9, 3.9489713422506933`*^9}, {
  3.948971406006749*^9, 3.948971483107559*^9}, {3.949402352194604*^9, 
  3.9494023837044353`*^9}, {3.9530331127646503`*^9, 3.9530331158632565`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"3b2a6535-13b1-7b4f-b627-221f91a6d89b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theta1by\[CapitalDelta]u0", "[", 
   RowBox[{"k_", ",", " ", "nq_", ",", " ", "qInPower_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "k", ",", " ", "2", ",", " ", "0", ",", " ", "3", ",", " ", "0", 
    ",", " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "0", ",", 
    "qInPower"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta2by\[CapitalDelta]u0", "[", 
   RowBox[{"l_", ",", " ", "nq_", ",", " ", "qInPower_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "0", ",", " ", "2", ",", " ", "l", ",", " ", "3", ",", " ", "0", 
    ",", " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "0", ",", 
    "qInPower"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta3by\[CapitalDelta]u0", "[", 
   RowBox[{"m_", ",", " ", "nq_", ",", " ", "qInPower_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "0", ",", " ", "2", ",", " ", "0", ",", " ", "3", ",", " ", "m", 
    ",", " ", "4", ",", " ", "0", ",", " ", "nq", ",", " ", "0", ",", 
    "qInPower"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta4by\[CapitalDelta]u0", "[", 
   RowBox[{"n_", ",", " ", "nq_", ",", " ", "qInPower_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"allprod\[Theta]by\[CapitalDelta]", "[", 
   RowBox[{
   "1", ",", "0", ",", " ", "2", ",", " ", "0", ",", " ", "3", ",", " ", "0", 
    ",", " ", "4", ",", " ", "n", ",", " ", "nq", ",", " ", "0", ",", 
    "qInPower"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9530331298905087`*^9, 3.953033170640604*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"3f27a38f-8145-9f43-bc7b-f5fbc6b9918c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprod\[Theta]write", "[", 
   RowBox[{
   "t1_", ",", "k_", ",", " ", "t2_", ",", " ", "l_", ",", " ", "t3_", ",", 
    " ", "m_", ",", " ", "t4_", ",", " ", "n_", ",", " ", "nq_", ",", " ", 
    "nu_"}], "]"}], ":=", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", " ", "u", ",", "th1", ",", "th2", ",", "q1", ",", " ", "q2", 
      ",", "  ", "eq", ",", " ", "cq", ",", " ", "in", ",", " ", "wt", ",", 
      " ", "o1", ",", " ", "o2", ",", " ", "o", ",", " ", "dt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"th1", "  ", "=", " ", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t1", ",", "u", ",", "q"}], "]"}], "k"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t2", ",", "u", ",", "q"}], "]"}], "l"], 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t3", ",", "u", ",", "q"}], "]"}], "m"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t4", ",", "u", ",", "q"}], "]"}], "n"]}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "0", ",", "nq"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "nu"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"th2", "  ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "<", "0"}], ",", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["u", 
            RowBox[{"-", "k"}]], " ", 
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}], ",", " ", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cq", " ", "=", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"th2", ",", "u"}], "]"}], ",", "0"}], "]"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"wt", " ", "=", " ", 
      RowBox[{
       RowBox[{"Exponent", "[", 
        RowBox[{"th1", ",", " ", "u", ",", " ", "List"}], "]"}], " ", "+", 
       " ", 
       FractionBox["k", "2"], " ", "+", " ", 
       FractionBox["l", "2"], "+", " ", 
       FractionBox["m", "2"], " ", "+", " ", 
       FractionBox["n", "2"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dt", " ", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"cq", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"wt", ",", "1"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "cq", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "!=", "0"}], " ", "||", " ", 
        RowBox[{"l", "!=", "0"}]}], ",", " ", 
       RowBox[{"dt", " ", "=", "  ", "dt"}], ",", " ", 
       RowBox[{"dt", " ", "=", " ", 
        RowBox[{"dt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dt", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947501068942152*^9, 3.947501090833145*^9}, {
   3.948968596164744*^9, 3.948968675570468*^9}, {3.950261185151373*^9, 
   3.950261185838216*^9}, 3.950261615642456*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"d8ae0cec-8afd-3346-8196-98b42694e70f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprod\[Theta]by\[CapitalDelta]write", "[", 
   RowBox[{
   "t1_", ",", "k_", ",", " ", "t2_", ",", " ", "l_", ",", " ", "t3_", ",", 
    " ", "m_", ",", " ", "t4_", ",", " ", "n_", ",", " ", "nq_", ",", " ", 
    "nu_", ",", " ", "qInPower_"}], "]"}], ":=", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", " ", "u", ",", "th1", ",", "th2", ",", "q1", ",", " ", "q2", 
      ",", "  ", "eq", ",", " ", "cq", ",", "cq2", ",", " ", "in", ",", " ", 
      "wt", ",", " ", "o1", ",", " ", "o2", ",", " ", "o", ",", " ", "dt", 
      ",", "mnnonzero"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"th1", "  ", "=", " ", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t1", ",", "u", ",", "q"}], "]"}], "k"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t2", ",", "u", ",", "q"}], "]"}], "l"], 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t3", ",", "u", ",", "q"}], "]"}], "m"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t4", ",", "u", ",", "q"}], "]"}], "n"]}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "0", ",", "nq"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "nu"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"th2", "  ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "<", "0"}], ",", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["u", 
            RowBox[{"-", "k"}]], " ", 
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}], ",", " ", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"th2", "  ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"k", "<", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["u", 
            RowBox[{"-", "k"}]], "th1"}], " ", ",", "th1"}], " ", "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"cq", " ", "=", "  ", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"CoefficientList", "[", 
             RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"CoefficientList", "[", 
             RowBox[{"th2", ",", "u"}], "]"}], ",", "0"}], "]"}], ")"}]}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mnnonzero", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "!=", "0"}], "||", 
         RowBox[{"n", "!=", "0"}]}], ",", "1", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cq", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", 
          RowBox[{"Series", "[", 
           RowBox[{
            FractionBox["#", 
             SuperscriptBox[
              RowBox[{"\[CapitalDelta]2", "[", "q", "]"}], 
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"k", "+", "l"}], "4"], "+", "mnnonzero", "-", 
                 "qInPower"}], ")"}]}]]], ",", 
            RowBox[{"{", 
             RowBox[{"q", ",", "0", ",", "nq"}], "}"}]}], "]"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"th2", ",", "u"}], "]"}], ",", "0"}], "]"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cq2", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@",
        "cq"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wt", " ", "=", " ", 
      RowBox[{
       RowBox[{"Exponent", "[", 
        RowBox[{"th1", ",", " ", "u", ",", " ", "List"}], "]"}], " ", "+", 
       " ", 
       FractionBox["k", "2"], " ", "+", " ", 
       FractionBox["l", "2"], "+", " ", 
       FractionBox["m", "2"], " ", "+", " ", 
       FractionBox["n", "2"], "-", 
       RowBox[{"6", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"k", "+", "l"}], "4"], "+", "mnnonzero", "-", "qInPower"}],
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"dt", " ", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"cq", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{"wt", ",", "1"}], "]"}], "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "cq", "]"}], "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"dt", " ", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"cq2", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"wt", ",", "1"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "cq2", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "!=", "0"}], " ", "||", " ", 
        RowBox[{"l", "!=", "0"}]}], ",", " ", 
       RowBox[{"dt", " ", "=", "  ", "dt"}], ",", " ", 
       RowBox[{"dt", " ", "=", " ", 
        RowBox[{"dt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dt", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9530301757897224`*^9, 3.9530304324227486`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"701c6982-da5e-3f4a-9868-671deb3692f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"klmnpos", "[", 
    RowBox[{"rng_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"Values", "[", 
    RowBox[{"FindInstance", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "rng"}], "<", "a", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "b", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "c", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "d", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"a", "+", "b", "+", "c", "+", "d"}], ">", "0"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "Integers", 
      ",", " ", "n"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"klmnposonly", "[", 
    RowBox[{"rng_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"Values", "[", 
    RowBox[{"FindInstance", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "<", "a", "<", "rng"}], ",", " ", 
        RowBox[{"0", "<", "b", "<", "rng"}], ",", " ", 
        RowBox[{"0", "<", "c", "<", "rng"}], ",", 
        RowBox[{"0", "<", "d", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"a", "+", "b", "+", "c", "+", "d"}], ">", "0"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "Integers", 
      ",", " ", "n"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"klmnneg", "[", 
    RowBox[{"rng_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"Values", "[", 
    RowBox[{"FindInstance", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "rng"}], "<", "a", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "b", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "c", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "d", "<", "rng"}], ",", " ", 
        RowBox[{
         RowBox[{"a", "+", "b", "+", "c", "+", "d"}], "<", "0"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "Integers", 
      ",", " ", "n"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"klmnnegonly", "[", 
    RowBox[{"rng_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"Values", "[", 
    RowBox[{"FindInstance", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "rng"}], "<", "a", "<", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "b", "<", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "c", "<", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "rng"}], "<", "d", "<", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"a", "+", "b", "+", "c", "+", "d"}], "<", "0"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "Integers", 
      ",", " ", "n"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.950091372969121*^9, 3.9500913867508907`*^9}, {
  3.951470659707899*^9, 3.9514706769073505`*^9}, {3.9537061404590664`*^9, 
  3.953706236201149*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"5aeddf89-d703-d74e-a0c2-8a6d75eb1904"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"powerspos", "[", "range_", "]"}], ":=", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"k", ",", "l", ",", "m", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "]"}], ",", "3"}], 
     "]"}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"Total", "[", "x", "]"}], ">", "0"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"powersneg", "[", "range_", "]"}], ":=", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"k", ",", "l", ",", "m", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "]"}], ",", "3"}], 
     "]"}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"Total", "[", "x", "]"}], "<", "0"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9488721563882437`*^9, 3.948872251213398*^9}, {
  3.948872302794909*^9, 3.948872303176454*^9}, {3.948872333428393*^9, 
  3.948872399904249*^9}, {3.951469008579708*^9, 3.9514690226489334`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"c8ea1bf9-40d9-ec4d-b288-88568851e367"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprodgen", "[", 
   RowBox[{"nq_", ",", "nu_", ",", "pwrlistref_", ",", "pwrlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tempser", ",", "i", ",", "filename", ",", "filename2", ",", "str", ",", 
      "str2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"filename", "=", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
        "\"\<jacobi-klmn.txt\>\""}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"filename2", "=", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
        "\"\<monitor.txt\>\""}]}], ";"}], "*)"}], "   ", 
    RowBox[{"(*", 
     RowBox[{"For", " ", "positive", " ", "powers"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filename", "=", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<jacobi-klmn-neg-only.txt\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"filename2", "=", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<monitor-neg-only.txt\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "filename", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str", "=", 
        RowBox[{"OpenAppend", "[", "filename", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str", "=", 
        RowBox[{"OpenWrite", "[", "filename", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "filename2", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str2", "=", 
        RowBox[{"OpenAppend", "[", "filename2", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str2", "=", 
        RowBox[{"OpenWrite", "[", "filename2", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tempser", "=", 
         RowBox[{"allprod\[Theta]write", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
              RowBox[{"pwrlist", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"nq", ",", "nu"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Write", "[", 
         RowBox[{"str", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "tempser"}], "}"}]}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Write", "[", 
         RowBox[{"str2", ",", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"pwrlistref", ",", 
             RowBox[{"pwrlist", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "pwrlist", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename2", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.950089616707177*^9, 3.950089644404359*^9}, {
   3.9500897514882107`*^9, 3.950089756708558*^9}, {3.950089833914133*^9, 
   3.950089883795376*^9}, {3.950089933878984*^9, 3.95008994912224*^9}, {
   3.950090029265264*^9, 3.950090108293435*^9}, {3.9500902784295883`*^9, 
   3.950090378129191*^9}, {3.950090408164386*^9, 3.950090482678314*^9}, {
   3.950090604809116*^9, 3.9500906390749474`*^9}, {3.950090772733976*^9, 
   3.950090784208221*^9}, 3.9500909422001266`*^9, {3.950091069066915*^9, 
   3.950091082948279*^9}, 3.9500911390258904`*^9, {3.950091545432105*^9, 
   3.95009156591739*^9}, {3.950260633340043*^9, 3.9502606335175943`*^9}, {
   3.950261070849811*^9, 3.9502610709871798`*^9}, 3.950261655660184*^9, {
   3.950263956926138*^9, 3.950264057707439*^9}, {3.950264118050248*^9, 
   3.9502641224961357`*^9}, {3.9502646225359097`*^9, 3.950264624998745*^9}, {
   3.950265356375946*^9, 3.950265363849804*^9}, {3.95026542576071*^9, 
   3.950265454152954*^9}, {3.9537063101803036`*^9, 3.9537063601071663`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"31931e85-8e07-454e-9aa3-e2b94d96c524"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprodgenneg", "[", 
   RowBox[{"nq_", ",", "nu_", ",", "pwrlistref_", ",", "pwrlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tempser", ",", "i", ",", "filename", ",", "filename2", ",", "str", ",", 
      "str2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filename", "=", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<jacobi-klmn-neg.txt\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"filename2", "=", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<monitor-neg.txt\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "filename", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str", "=", 
        RowBox[{"OpenAppend", "[", "filename", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str", "=", 
        RowBox[{"OpenWrite", "[", "filename", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "filename2", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str2", "=", 
        RowBox[{"OpenAppend", "[", "filename2", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str2", "=", 
        RowBox[{"OpenWrite", "[", "filename2", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tempser", "=", 
         RowBox[{"allprod\[Theta]write", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
              RowBox[{"pwrlist", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"nq", ",", "nu"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Write", "[", 
         RowBox[{"str", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "tempser"}], "}"}]}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Write", "[", 
         RowBox[{"str2", ",", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"pwrlistref", ",", 
             RowBox[{"pwrlist", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "pwrlist", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename2", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.9514686607347794`*^9, 3.9514686835591717`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"9faf1b2c-ba4d-7044-9f30-4164af86b047"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprodgenby\[CapitalDelta]neg", "[", 
   RowBox[{
   "nq_", ",", "nu_", ",", "pwrlistref_", ",", "pwrlist_", ",", "qInPower_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tempser", ",", "i", ",", "filename", ",", "filename2", ",", "str", ",", 
      "str2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filename", "=", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<jacobiby\[CapitalDelta]-klmn-neg2.txt\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"filename2", "=", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<monitorby\[CapitalDelta]-neg2.txt\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "filename", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str", "=", 
        RowBox[{"OpenAppend", "[", "filename", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str", "=", 
        RowBox[{"OpenWrite", "[", "filename", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "filename2", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str2", "=", 
        RowBox[{"OpenAppend", "[", "filename2", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"str2", "=", 
        RowBox[{"OpenWrite", "[", "filename2", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tempser", "=", 
         RowBox[{"allprod\[Theta]by\[CapitalDelta]write", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
              RowBox[{"pwrlist", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"nq", ",", "nu", ",", "qInPower"}], "}"}]}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Write", "[", 
         RowBox[{"str", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "tempser"}], "}"}]}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Write", "[", 
         RowBox[{"str2", ",", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"pwrlistref", ",", 
             RowBox[{"pwrlist", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "pwrlist", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename2", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.9514686607347794`*^9, 3.9514686835591717`*^9}, {
  3.953030055932516*^9, 3.9530300802716465`*^9}, {3.9530304622105675`*^9, 
  3.9530304639924107`*^9}, {3.9530310397817383`*^9, 3.95303106239764*^9}, {
  3.9552679657423954`*^9, 3.9552679679559937`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"0704c786-c2f8-cf4c-95ab-5e0c5adece8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listtorule", "[", "list_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"list", "[", 
    RowBox[{"[", 
     RowBox[{";;", 
      RowBox[{"-", "2"}]}], "]"}], "]"}], " ", "->", " ", 
   RowBox[{"list", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.950264760294533*^9, 3.9502647882972813`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"795f8357-ed07-ae44-9532-3467a5e4c6dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractMF", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data2", ",", "data3", ",", "data4", ",", "data5", ",", "mfdata", ",", 
      "indices", ",", "indlens", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data2", "=", 
      RowBox[{"StringDelete", "[", 
       RowBox[{
        RowBox[{"StringDelete", "[", 
         RowBox[{"data", ",", "\"\< \>\""}], "]"}], ",", "\"\<\\n\>\""}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"indices", "=", 
      RowBox[{
       RowBox[{"Union", "/@", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"data2", ",", "\"\<{\>\""}], "]"}]}], "//", "Flatten"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"indlens", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"indices", "[", 
          RowBox[{"[", 
           RowBox[{"#", "+", "1"}], "]"}], "]"}], "-", 
         RowBox[{"indices", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"Length", "[", "indices", "]"}], "-", "1"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data3", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"data2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"indices", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"indices", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "2"}], "]"}], "]"}], "-", "2"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"Length", "[", "indlens", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data4", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "/@", "data3"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"$Failed", "->", "Nothing"}], ",", 
          RowBox[{"Null", "->", "Nothing"}]}], "}"}]}], "//", "Quiet"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"data5", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"data4", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{"Length", "[", "x", "]"}], ">", "4"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mfdata", "=", 
      RowBox[{"listtorule", "/@", "data5"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "mfdata", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950262360212851*^9, 3.95026248946455*^9}, {
   3.95026263144628*^9, 3.9502626410167627`*^9}, {3.950262682584579*^9, 
   3.9502627407642107`*^9}, {3.9502635505253563`*^9, 
   3.9502635771650143`*^9}, {3.950263642752112*^9, 3.950263682146645*^9}, {
   3.9502637261241837`*^9, 3.9502637293110857`*^9}, {3.950263798303754*^9, 
   3.950263809800747*^9}, {3.9502638633482523`*^9, 3.9502638642673283`*^9}, 
   3.950264188006814*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"957a677c-b5ca-894d-aa15-862dbe916d6b"]
}, Closed]],

Cell[CellGroupData[{

Cell["ML", "Subsection",
 CellChangeTimes->{{3.9500881383156033`*^9, 
  3.950088138393808*^9}},ExpressionUUID->"0140148b-e15d-274e-a1eb-\
58f36519772f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"leakyRelu", "[", "\[Alpha]_", "]"}], ":=", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", ">", "0"}], ",", "#", ",", 
      RowBox[{"\[Alpha]", " ", "#"}]}], "]"}], "&"}], "]"}]}]], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"515750f8-5bd4-8541-a333-ac16a2804f83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"enc", "[", "data_", "]"}], ":=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Function\>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"N", "[", 
         RowBox[{"Abs", "[", "#", "]"}], "]"}], "]"}], "/.", 
       RowBox[{"Indeterminate", " ", "->", "0"}]}], " ", "&"}], " ", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"Keys", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.94939928986905*^9, 3.9493993058544683`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"20d6567b-bd67-9947-b710-f5e5f53eb97e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datapartition", "[", "data_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"datasize", "=", 
      RowBox[{"Length", "[", "data", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainpos", "=", 
         RowBox[{"RandomSample", "[", 
          RowBox[{
           RowBox[{"Range", "[", "datasize", "]"}], ",", 
           RowBox[{"Floor", "[", 
            RowBox[{
             FractionBox["3", "4"], "datasize"}], "]"}]}], "]"}]}], ",", 
        "valpos", ",", "testpos", ",", "traindata", ",", "valdata", ",", 
        "testdata"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"valpos", "=", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Range", "[", "datasize", "]"}], ",", "trainpos"}], "]"}],
           ",", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             FractionBox["90", "100"], "datasize"}], "]"}], "-", 
           RowBox[{"Floor", "[", 
            RowBox[{
             FractionBox["3", "4"], "datasize"}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"testpos", "=", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Range", "[", "datasize", "]"}], ",", "trainpos", ",", 
          "valpos"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"traindata", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", "trainpos", "]"}], "]"}]}], ";", 
       RowBox[{"valdata", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", "valpos", "]"}], "]"}]}], ";", 
       RowBox[{"testdata", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", "testpos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"traindata", ",", "valdata", ",", "testdata"}], "}"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.948967920240967*^9, 3.948968117669992*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"cda74111-6e07-1241-97f8-5b57d2824122"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "cl", ",", "cq", ",", "dt", ",", "en", ",", "en1", ",", "eq", ",", "in", 
   ",", "k", ",", "o", ",", "o1", ",", "o2", ",", "p1", ",", "p2", ",", "q", 
   ",", "q1", ",", "q2", ",", "t1", ",", "t2", ",", "th1", ",", "th2", ",", 
   "u", ",", "wt", ",", "zp"}], "]"}]], "Input",
 CellChangeTimes->{{3.948869924183735*^9, 3.948869929340307*^9}, {
  3.948869971281506*^9, 3.94886997563465*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"690e6e21-28cf-af49-bd72-04d259612fa1"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Individual ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],ExpressionUUID->
  "deecc35c-cc74-b343-b5fe-4589c077151b"],
 " without dividing by \[CapitalDelta]"
}], "Chapter",
 CellChangeTimes->{{3.948971526730455*^9, 3.948971577283806*^9}, {
  3.949402308376051*^9, 
  3.9494023151146727`*^9}},ExpressionUUID->"16300796-8a22-9841-b313-\
7dc667339d7d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Positive powers of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],ExpressionUUID->
  "c76bcd42-7bee-bf4f-aab7-867bf8f7b7f2"],
 " (",
 StyleBox["only contains positive weight modular forms", "Subsection"],
 ")"
}], "Section",
 CellChangeTimes->{{3.949396898208602*^9, 3.9493969024573402`*^9}, {
  3.94939777942268*^9, 
  3.949397833780551*^9}},ExpressionUUID->"ca2ae413-5b58-2441-95ed-\
18a9f3e31203"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["\[Theta]", "1"], 
  TraditionalForm]],ExpressionUUID->"b4988dee-9c92-1b43-a8a0-e9fb4506be2d"]], \
"Subsection",
 CellChangeTimes->{{3.949396944646504*^9, 
  3.949396946538228*^9}},ExpressionUUID->"6d9a8874-77b5-0e4b-8524-\
377969c6758e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprod\[Theta]", "[", 
   RowBox[{
   "t1_", ",", "k_", ",", " ", "t2_", ",", " ", "l_", ",", " ", "t3_", ",", 
    " ", "m_", ",", " ", "t4_", ",", " ", "n_", ",", " ", "nq_", ",", " ", 
    "nu_"}], "]"}], ":=", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", " ", "u", ",", "th1", ",", "th2", ",", "q1", ",", " ", "q2", 
      ",", "  ", "eq", ",", " ", "cq", ",", " ", "in", ",", " ", "wt", ",", 
      " ", "o1", ",", " ", "o2", ",", " ", "o", ",", " ", "dt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"th1", "  ", "=", " ", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t1", ",", "u", ",", "q"}], "]"}], "k"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t2", ",", "u", ",", "q"}], "]"}], "l"], 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t3", ",", "u", ",", "q"}], "]"}], "m"], " ", 
         SuperscriptBox[
          RowBox[{"EllipticTheta", "[", 
           RowBox[{"t4", ",", "u", ",", "q"}], "]"}], "n"]}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "0", ",", "nq"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "nu"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"th2", "  ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "<", "0"}], ",", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["u", 
            RowBox[{"-", "k"}]], " ", 
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}], ",", " ", 
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"q", ">", "0"}], ",", " ", 
          RowBox[{
           SuperscriptBox["q", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"k", "+", "l"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], 
         " ", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cq", " ", "=", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"th2", ",", "u"}], "]"}], ",", "0"}], "]"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"wt", " ", "=", " ", 
      RowBox[{
       RowBox[{"Exponent", "[", 
        RowBox[{"th1", ",", " ", "u", ",", " ", "List"}], "]"}], " ", "+", 
       " ", 
       FractionBox["k", "2"], " ", "+", " ", 
       FractionBox["l", "2"], "+", " ", 
       FractionBox["m", "2"], " ", "+", " ", 
       FractionBox["n", "2"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dt", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"cq", " ", "->", " ", "wt"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "!=", "0"}], " ", "||", " ", 
        RowBox[{"l", "!=", "0"}]}], ",", " ", 
       RowBox[{"dt", " ", "=", "  ", "dt"}], ",", " ", 
       RowBox[{"dt", " ", "=", " ", 
        RowBox[{"dt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dt", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947501068942152*^9, 3.947501090833145*^9}, {
  3.948968596164744*^9, 3.948968675570468*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"79257af3-070e-8542-8fbf-1712f2d41251"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"th1", "  ", "=", " ", 
   RowBox[{"Series", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"EllipticTheta", "[", 
       RowBox[{"1", ",", "u", ",", "q"}], "]"}], "3"], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0", ",", "7"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "13"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"th2", "  ", "=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"3", "<", "0"}], ",", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"q", ">", "0"}], ",", " ", 
      RowBox[{
       SuperscriptBox["u", 
        RowBox[{"-", "3"}]], " ", 
       SuperscriptBox["q", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"3", "+", "0"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], " ",
      "]"}], ",", " ", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"q", ">", "0"}], ",", " ", 
      RowBox[{
       SuperscriptBox["q", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"3", "+", "0"}], ")"}]}], "/", "4"}]], " ", "th1"}]}], " ",
      "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9538855186953354`*^9, 3.9538855344748154`*^9}, {
  3.953885568275818*^9, 3.953885670238716*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"1bb56200-ccfa-8d44-a715-1ae0f876b84a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      RowBox[{"8", " ", 
       SuperscriptBox["u", "3"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["u", "5"]}], "+", 
      FractionBox[
       RowBox[{"13", " ", 
        SuperscriptBox["u", "7"]}], "15"], "-", 
      FractionBox[
       RowBox[{"41", " ", 
        SuperscriptBox["u", "9"]}], "378"], "+", 
      FractionBox[
       RowBox[{"671", " ", 
        SuperscriptBox["u", "11"]}], "75600"], "-", 
      FractionBox[
       RowBox[{"73", " ", 
        SuperscriptBox["u", "13"]}], "142560"], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", "u", "]"}], "14"],
       SeriesData[$CellContext`u, 0, {}, 3, 14, 1],
       Editable->False]}],
     SeriesData[$CellContext`u, 0, {8, 0, -4, 0, 
       Rational[13, 15], 0, 
       Rational[-41, 378], 0, 
       Rational[671, 75600], 0, 
       Rational[-73, 142560]}, 3, 14, 1],
     Editable->False], ")"}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"72", " ", 
         SuperscriptBox["u", "3"]}]}], "+", 
       RowBox[{"132", " ", 
        SuperscriptBox["u", "5"]}], "-", 
       FractionBox[
        RowBox[{"439", " ", 
         SuperscriptBox["u", "7"]}], "5"], "+", 
       FractionBox[
        RowBox[{"443", " ", 
         SuperscriptBox["u", "9"]}], "14"], "-", 
       FractionBox[
        RowBox[{"183613", " ", 
         SuperscriptBox["u", "11"]}], "25200"], "+", 
       FractionBox[
        RowBox[{"55747", " ", 
         SuperscriptBox["u", "13"]}], "47520"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "u", "]"}], "14"],
        SeriesData[$CellContext`u, 0, {}, 3, 14, 1],
        Editable->False]}],
      SeriesData[$CellContext`u, 0, {-72, 0, 132, 0, 
        Rational[-439, 5], 0, 
        Rational[443, 14], 0, 
        Rational[-183613, 25200], 0, 
        Rational[55747, 47520]}, 3, 14, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["q", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{"216", " ", 
        SuperscriptBox["u", "3"]}], "-", 
       RowBox[{"684", " ", 
        SuperscriptBox["u", "5"]}], "+", 
       FractionBox[
        RowBox[{"4437", " ", 
         SuperscriptBox["u", "7"]}], "5"], "-", 
       FractionBox[
        RowBox[{"8889", " ", 
         SuperscriptBox["u", "9"]}], "14"], "+", 
       FractionBox[
        RowBox[{"2434973", " ", 
         SuperscriptBox["u", "11"]}], "8400"], "-", 
       FractionBox[
        RowBox[{"486713", " ", 
         SuperscriptBox["u", "13"]}], "5280"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "u", "]"}], "14"],
        SeriesData[$CellContext`u, 0, {}, 3, 14, 1],
        Editable->False]}],
      SeriesData[$CellContext`u, 0, {216, 0, -684, 0, 
        Rational[4437, 5], 0, 
        Rational[-8889, 14], 0, 
        Rational[2434973, 8400], 0, 
        Rational[-486713, 5280]}, 3, 14, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["q", "4"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"96", " ", 
         SuperscriptBox["u", "3"]}]}], "+", 
       RowBox[{"432", " ", 
        SuperscriptBox["u", "5"]}], "-", 
       FractionBox[
        RowBox[{"5492", " ", 
         SuperscriptBox["u", "7"]}], "5"], "+", 
       FractionBox[
        RowBox[{"96514", " ", 
         SuperscriptBox["u", "9"]}], "63"], "-", 
       FractionBox[
        RowBox[{"2708437", " ", 
         SuperscriptBox["u", "11"]}], "2100"], "+", 
       FractionBox[
        RowBox[{"8617649", " ", 
         SuperscriptBox["u", "13"]}], "11880"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "u", "]"}], "14"],
        SeriesData[$CellContext`u, 0, {}, 3, 14, 1],
        Editable->False]}],
      SeriesData[$CellContext`u, 0, {-96, 0, 432, 0, 
        Rational[-5492, 5], 0, 
        Rational[96514, 63], 0, 
        Rational[-2708437, 2100], 0, 
        Rational[8617649, 11880]}, 3, 14, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["q", "6"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "q", "]"}], "7"],
    SeriesData[$CellContext`q, 0, {}, 0, 28, 4],
    Editable->False]}],
  SeriesData[$CellContext`q, 0, {
    SeriesData[$CellContext`u, 0, {8, 0, -4, 0, 
      Rational[13, 15], 0, 
      Rational[-41, 378], 0, 
      Rational[671, 75600], 0, 
      Rational[-73, 142560]}, 3, 14, 1], 0, 0, 0, 0, 0, 0, 0, 
    SeriesData[$CellContext`u, 0, {-72, 0, 132, 0, 
      Rational[-439, 5], 0, 
      Rational[443, 14], 0, 
      Rational[-183613, 25200], 0, 
      Rational[55747, 47520]}, 3, 14, 1], 0, 0, 0, 0, 0, 0, 0, 
    SeriesData[$CellContext`u, 0, {216, 0, -684, 0, 
      Rational[4437, 5], 0, 
      Rational[-8889, 14], 0, 
      Rational[2434973, 8400], 0, 
      Rational[-486713, 5280]}, 3, 14, 1], 0, 0, 0, 0, 0, 0, 0, 
    SeriesData[$CellContext`u, 0, {-96, 0, 432, 0, 
      Rational[-5492, 5], 0, 
      Rational[96514, 63], 0, 
      Rational[-2708437, 2100], 0, 
      Rational[8617649, 11880]}, 3, 14, 1]}, 0, 28, 4],
  Editable->False]], "Output",
 CellChangeTimes->{{3.9538856241231327`*^9, 3.9538856727599144`*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"feba88c6-d2f2-404c-8540-8d6e69c441b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cq", " ", "=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"CoefficientList", "[", 
       RowBox[{"#", ",", " ", "q"}], "]"}], ",", "0"}], "]"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"CoefficientList", "[", 
       RowBox[{"th2", ",", "u"}], "]"}], ",", "0"}], "]"}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{3.953885684677908*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"c044921a-0219-d14c-a62d-27677cf072ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "72"}], ",", "216", ",", 
     RowBox[{"-", "96"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "132", ",", 
     RowBox[{"-", "684"}], ",", "432"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["13", "15"], ",", 
     RowBox[{"-", 
      FractionBox["439", "5"]}], ",", 
     FractionBox["4437", "5"], ",", 
     RowBox[{"-", 
      FractionBox["5492", "5"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["41", "378"]}], ",", 
     FractionBox["443", "14"], ",", 
     RowBox[{"-", 
      FractionBox["8889", "14"]}], ",", 
     FractionBox["96514", "63"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["671", "75600"], ",", 
     RowBox[{"-", 
      FractionBox["183613", "25200"]}], ",", 
     FractionBox["2434973", "8400"], ",", 
     RowBox[{"-", 
      FractionBox["2708437", "2100"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["73", "142560"]}], ",", 
     FractionBox["55747", "47520"], ",", 
     RowBox[{"-", 
      FractionBox["486713", "5280"]}], ",", 
     FractionBox["8617649", "11880"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9538856853088264`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c8d1b90c-c1a9-be4c-83b6-5714beae948b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cq2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"N", "[", 
       RowBox[{"Abs", "[", "#", "]"}], "]"}], "]"}], "/.", 
     RowBox[{"Indeterminate", " ", "->", "0"}]}], " ", "&"}], "/@", "  ", 
   "cq"}]}]], "Input",
 CellChangeTimes->{{3.953885692619156*^9, 3.953885809513916*^9}, {
  3.9538858573778896`*^9, 3.953885949723112*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"9597e02a-adb8-454f-a6ad-e2a90fa24bc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2.0794415416798357`", ",", "4.276666119016055`", ",", 
     "5.375278407684165`", ",", "4.564348191467836`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.3862943611198906`", ",", "4.882801922586371`", ",", 
     "6.52795791762255`", ",", "6.068425588244111`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1431008436406733`"}], ",", "4.475061500641071`", ",", 
     "6.788295838944809`", ",", "7.001609854453761`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.22132212891528`"}], ",", "3.454512440429877`", ",", 
     "6.453512506626416`", ",", "7.334308628132997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.724442425195942`"}], ",", "1.9859862872625966`", ",", 
     "5.669459241310259`", ",", "7.162189649990985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.5770588015562454`"}], ",", "0.1596729221787465`", ",", 
     "4.5237485292638`", ",", "6.586711274704491`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.953885714851349*^9, 3.953885812332617*^9}, 
   3.9538858827232475`*^9, {3.953885914225052*^9, 3.953885950073225*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"2a59677e-339d-d045-912c-429468420e10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wt", " ", "=", " ", 
  RowBox[{
   RowBox[{"Exponent", "[", 
    RowBox[{"th1", ",", " ", "u", ",", " ", "List"}], "]"}], " ", "+", " ", 
   FractionBox["3", "2"], " "}]}]], "Input",
 CellChangeTimes->{{3.9538859749957924`*^9, 3.9538859824736137`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"c0cdca5f-ce6e-e647-a1f0-2f2f17fa0c7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["9", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["17", "2"], ",", 
   FractionBox["21", "2"], ",", 
   FractionBox["25", "2"], ",", 
   FractionBox["29", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9538859830989723`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"f945c066-3613-274b-acbd-4b1a14862f8a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"dt", " ", "=", " ", 
  RowBox[{"Thread", "[", 
   RowBox[{"cq2", " ", "->", " ", "wt"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.953885996349535*^9, 3.953885999955881*^9}, {
  3.95388742831583*^9, 3.9538874289667683`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"10041734-9277-a44c-8aad-841e1677f13d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{"cq2", ",", "wt"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9538874387672577`*^9, 3.9538874401448784`*^9}, {
  3.9538875677190304`*^9, 3.9538876097011395`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"86c42451-ccec-ca4c-b991-af349b6eea92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "2.0794415416798357`", ",", "4.276666119016055`", ",", 
       "5.375278407684165`", ",", "4.564348191467836`"}], "}"}], ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.3862943611198906`", ",", "4.882801922586371`", ",", 
       "6.52795791762255`", ",", "6.068425588244111`"}], "}"}], ",", 
     FractionBox["13", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.1431008436406733`"}], ",", "4.475061500641071`", ",", 
       "6.788295838944809`", ",", "7.001609854453761`"}], "}"}], ",", 
     FractionBox["17", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.22132212891528`"}], ",", "3.454512440429877`", ",", 
       "6.453512506626416`", ",", "7.334308628132997`"}], "}"}], ",", 
     FractionBox["21", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.724442425195942`"}], ",", "1.9859862872625966`", ",", 
       "5.669459241310259`", ",", "7.162189649990985`"}], "}"}], ",", 
     FractionBox["25", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.5770588015562454`"}], ",", "0.1596729221787465`", ",", 
       "4.5237485292638`", ",", "6.586711274704491`"}], "}"}], ",", 
     FractionBox["29", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9538860035205173`*^9, 3.9538874416475086`*^9, 3.95388756949238*^9, {
   3.9538876009360065`*^9, 3.953887610333441*^9}},
 CellLabel->
  "Out[107]=",ExpressionUUID->"673a3c55-1e2c-c549-b6d8-cde8fa86039a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"cq2", ",", "wt"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.953887625430109*^9, 3.9538876739748135`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"805d3f9a-f962-0c44-b0b9-d269b49ac675"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2.0794415416798357`", ",", "4.276666119016055`", ",", 
     "5.375278407684165`", ",", "4.564348191467836`", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.3862943611198906`", ",", "4.882801922586371`", ",", 
     "6.52795791762255`", ",", "6.068425588244111`", ",", 
     FractionBox["13", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1431008436406733`"}], ",", "4.475061500641071`", ",", 
     "6.788295838944809`", ",", "7.001609854453761`", ",", 
     FractionBox["17", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.22132212891528`"}], ",", "3.454512440429877`", ",", 
     "6.453512506626416`", ",", "7.334308628132997`", ",", 
     FractionBox["21", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.724442425195942`"}], ",", "1.9859862872625966`", ",", 
     "5.669459241310259`", ",", "7.162189649990985`", ",", 
     FractionBox["25", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.5770588015562454`"}], ",", "0.1596729221787465`", ",", 
     "4.5237485292638`", ",", "6.586711274704491`", ",", 
     FractionBox["29", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9538876314342747`*^9, 3.953887674438492*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"53eb8ef2-e94d-e44f-9d5b-337d22deb8b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<c2.csv\>\"", ",", " ", "c2", ",", " ", "\"\<Table\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9538867624306583`*^9, 3.9538867795029488`*^9}, {
  3.9538871879975224`*^9, 3.9538872691134377`*^9}, {3.9538873680286674`*^9, 
  3.953887377870451*^9}, {3.953887701269348*^9, 3.953887701589161*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"f3de6dcd-2388-a94c-b675-9322e81ced9f"],

Cell[BoxData["\<\"c2.csv\"\>"], "Output",
 CellChangeTimes->{3.9538867815461025`*^9, 3.9538872721217384`*^9, 
  3.953887379953264*^9, 3.9538877045937786`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"96f97e92-3d6d-e54b-8d91-5ddaade03d8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\<c2.csv\>\"", ",", " ", "\"\<Data\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9538873261102886`*^9, 3.953887350607239*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"a5cd623b-ac7d-2745-a186-f1e3aa19f107"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"{2.07944154\"\>", ",", "4.27666`", ",", "5.37527`", 
     ",", "\<\"4.56434}\\t9/2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"{1.38629\"\>", ",", "4.8828`", ",", "6.5279`", 
     ",", "\<\"6.0684}\\t13/2\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9538873355288544`*^9, 3.953887351577215*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"c40a8e32-40f6-ff40-a109-1e115269b94a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["t1k50q70u80mfpos, Net0, 26 coeffs(r)", "Subsubsection",
 CellChangeTimes->{{3.951218360087137*^9, 3.9512183795434628`*^9}, {
   3.9516339535131207`*^9, 3.951633954260914*^9}, 3.9519171689257736`*^9, 
   3.9519401746543655`*^9, {3.9519402215523834`*^9, 3.9519402222735996`*^9}, {
   3.951980859359537*^9, 
   3.9519808622706623`*^9}},ExpressionUUID->"a56c14d4-fb60-6d40-88b1-\
bc0b077c9c55"],

Cell[BoxData[
 RowBox[{"<<", "t1k50q70u80mfpos.mx"}]], "Input",
 CellChangeTimes->{{3.951633884710581*^9, 3.951633895194227*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"2ca1e643-8753-8543-94aa-5e85aac2079e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawdata", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"t1k50q70u80mfpos", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", " ", "/@", " ", 
   RowBox[{"Keys", "[", "rawdata", "]"}]}], " ", "//", " ", 
  "Union"}]}], "Input",
 CellChangeTimes->{{3.949396979546838*^9, 3.9493969818948793`*^9}, {
   3.949397465440243*^9, 3.949397471581769*^9}, 3.949397993348729*^9, 
   3.9493980307561817`*^9, 3.951217397529335*^9, 3.9512182874302464`*^9, 
   3.9512185681553955`*^9, {3.951633911951643*^9, 3.9516339169536304`*^9}, {
   3.953885107468067*^9, 3.953885107903862*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"caab658a-0653-be44-a2f0-be645844bb96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "26", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", 
   "34", ",", "35"}], "}"}]], "Output",
 CellChangeTimes->{3.953885109821785*^9, 3.9538877941820393`*^9, 
  3.954476433282484*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"9e9c201e-a983-034d-8b97-1280a368e0eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"datadefn", "[", 
    RowBox[{"rawdata", ",", " ", "26"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"datasize", " ", "=", " ", 
  RowBox[{"Length", "[", "data", "]"}]}]}], "Input",
 CellChangeTimes->{{3.950466979697073*^9, 3.9504670032290287`*^9}, {
  3.950548241959532*^9, 3.950548243011196*^9}, {3.9511307485936775`*^9, 
  3.9511307619375916`*^9}, {3.95114093350572*^9, 3.951140935052601*^9}, {
  3.951217748577183*^9, 3.9512177525579643`*^9}, {3.951218299047146*^9, 
  3.9512183012777863`*^9}, {3.951236664634691*^9, 3.951236665823395*^9}, {
  3.9516339222235622`*^9, 3.951633923414631*^9}, {3.9538851257261753`*^9, 
  3.953885126319607*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"5729bc3f-d8a2-b643-95f5-0801f0198717"],

Cell[BoxData["1360"], "Output",
 CellChangeTimes->{3.953885128874502*^9, 3.953887795576481*^9, 
  3.9544764497078457`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"6e56fa63-a95e-b140-ac35-ea37527ad8e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", 
   RowBox[{";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.953887800241411*^9, 3.9538878057249985`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"551a7ecc-9248-1042-b566-69c430631f47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", 
      RowBox[{"-", "24"}], ",", "36", ",", "40", ",", 
      RowBox[{"-", "120"}], ",", "44", ",", "168", ",", 
      RowBox[{"-", "280"}], ",", "72", ",", 
      RowBox[{"-", "216"}], ",", "196", ",", "360", ",", 
      RowBox[{"-", "88"}], ",", 
      RowBox[{"-", "240"}], ",", 
      RowBox[{"-", "440"}], ",", "324", ",", "720", ",", 
      RowBox[{"-", "312"}], ",", "520", ",", 
      RowBox[{"-", "792"}], ",", 
      RowBox[{"-", "728"}], ",", 
      RowBox[{"-", "120"}], ",", "360", ",", "484", ",", "336", ",", "840"}], 
     "}"}], "\[Rule]", "3"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "3"]}], ",", "40", ",", 
      RowBox[{"-", "108"}], ",", 
      RowBox[{"-", 
       FractionBox["520", "3"]}], ",", "680", ",", 
      RowBox[{"-", 
       FractionBox["1100", "3"]}], ",", 
      RowBox[{"-", "1624"}], ",", 
      FractionBox["10360", "3"], ",", 
      RowBox[{"-", "984"}], ",", "3240", ",", 
      RowBox[{"-", 
       FractionBox["9604", "3"]}], ",", 
      RowBox[{"-", "6360"}], ",", 
      FractionBox["5368", "3"], ",", "5200", ",", 
      FractionBox["32120", "3"], ",", 
      RowBox[{"-", "8748"}], ",", 
      RowBox[{"-", "20400"}], ",", "9256", ",", 
      RowBox[{"-", 
       FractionBox["50440", "3"]}], ",", "26664", ",", 
      FractionBox["79352", "3"], ",", "4520", ",", 
      RowBox[{"-", "14040"}], ",", 
      RowBox[{"-", 
       FractionBox["58564", "3"]}], ",", 
      RowBox[{"-", "14000"}], ",", 
      RowBox[{"-", "38360"}]}], "}"}], "\[Rule]", "5"}]}], "}"}]], "Output",
 CellChangeTimes->{3.953887806235916*^9, 3.95447645314802*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"efedd4d7-ba16-0d44-be9f-a5c6aa8c39c1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"enc", "=", 
   RowBox[{"NetEncoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Function\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"N", "[", 
          RowBox[{"Abs", "[", "#", "]"}], "]"}], "]"}], "/.", 
        RowBox[{"Indeterminate", " ", "->", "0"}]}], " ", "&"}], " ", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Keys", "[", 
        RowBox[{"data", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.942855925789545*^9, 3.9428560552594795`*^9}, {
   3.942856092110628*^9, 3.942856092403679*^9}, {3.942856200450712*^9, 
   3.942856221974493*^9}, {3.9428562938356533`*^9, 3.9428563132171135`*^9}, {
   3.9428563516555195`*^9, 3.942856361730505*^9}, {3.94285641018964*^9, 
   3.9428564169157906`*^9}, {3.9428566343816376`*^9, 3.942856664328413*^9}, {
   3.942856765599806*^9, 3.942856770589876*^9}, {3.9428568242589626`*^9, 
   3.942856833737961*^9}, {3.942856922226433*^9, 3.942856939468569*^9}, {
   3.9428570003921947`*^9, 3.942857002608448*^9}, {3.9428570762787895`*^9, 
   3.9428570861728783`*^9}, {3.942857206896509*^9, 3.942857216184204*^9}, {
   3.942857266906107*^9, 3.942857293195463*^9}, {3.942857339484434*^9, 
   3.9428573413578777`*^9}, {3.942857775498678*^9, 3.942857805441332*^9}, 
   3.9428587382314224`*^9, {3.9428596750801353`*^9, 3.942859690599987*^9}, {
   3.9428811508902016`*^9, 3.9428811516687145`*^9}, {3.942882822162916*^9, 
   3.9428828226440506`*^9}, {3.942891467569147*^9, 3.9428914684078293`*^9}, {
   3.942893444988821*^9, 3.9428934456336803`*^9}, {3.94299122653574*^9, 
   3.942991227077423*^9}, {3.9429918280926533`*^9, 3.9429918291463585`*^9}, {
   3.943014438374504*^9, 3.9430144385362873`*^9}, {3.9430146120651627`*^9, 
   3.943014613264702*^9}, {3.9430746274453983`*^9, 3.9430746319617634`*^9}, {
   3.943086106278618*^9, 3.9430861108354454`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"97919fff-7db4-f144-b054-8964c294cf95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"enc", "[", 
  RowBox[{"Keys", "[", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{";;", "2"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.953887814435812*^9, 3.9538878455650005`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"832750dd-4e1c-8e47-a4c3-3d60f7cf0f82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.3862943611198906`", ",", "3.1780538303479458`", ",", 
     "3.58351893845611`", ",", "3.6888794541139363`", ",", 
     "4.787491742782046`", ",", "3.784189633918261`", ",", 
     "5.123963979403259`", ",", "5.634789603169249`", ",", 
     "4.276666119016055`", ",", "5.375278407684165`", ",", 
     "5.278114659230517`", ",", "5.886104031450156`", ",", 
     "4.477336814478207`", ",", "5.480638923341991`", ",", 
     "6.0867747269123065`", ",", "5.780743515792329`", ",", 
     "6.579251212010101`", ",", "5.7430031878094825`", ",", 
     "6.253828811575473`", ",", "6.674561391814426`", ",", 
     "6.590301048196686`", ",", "4.787491742782046`", ",", 
     "5.886104031450156`", ",", "6.182084906716632`", ",", 
     "5.817111159963204`", ",", "6.733401891837359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.28768207245178085`", ",", "3.6888794541139363`", ",", 
     "4.68213122712422`", ",", "5.155216522907363`", ",", 
     "6.522092798170152`", ",", "5.9044531701183525`", ",", 
     "7.392647520721623`", ",", "8.147095227145364`", ",", 
     "6.891625897052253`", ",", "8.083328608786376`", ",", 
     "8.071322668673034`", ",", "8.757783656334167`", ",", 
     "7.489598389983408`", ",", "8.556413904569519`", ",", 
     "9.278621879392588`", ",", "9.076580381796658`", ",", 
     "9.923290179832307`", ",", "9.133027268873512`", ",", 
     "9.729927501410746`", ",", "10.191069619987575`", ",", 
     "10.18303664175772`", ",", "8.416267272826277`", ",", 
     "9.549665677579801`", ",", "9.879263163645263`", ",", 
     "9.546812608597396`", ",", "10.554770528997375`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9538878293812084`*^9, 3.953887846344927*^9}, 
   3.9544764929469967`*^9, 3.954476523792965*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"bc3ce250-1442-4b41-9a8f-f379cef90855"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", " ", "/@", " ", 
   RowBox[{"Keys", "[", "data", "]"}]}], " ", "//", " ", "Union"}]], "Input",
 CellChangeTimes->{{3.9538885666693745`*^9, 3.9538885809715614`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"61f00ccc-22a4-7d46-900e-24566af91690"],

Cell[BoxData[
 RowBox[{"{", "26", "}"}]], "Output",
 CellChangeTimes->{{3.953888574903181*^9, 3.9538885815539055`*^9}, 
   3.9544764932165985`*^9, 3.954476529323805*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"2b2971f5-e585-3749-aafe-c2dac8b82630"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{";;", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9538878559382305`*^9, 3.953887862533884*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"bd404ce8-943a-e443-9310-c1e118261cc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.9538878633639717`*^9, 3.954476530632288*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"52a19757-fbf5-c443-9a98-73787fba1a73"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t1k50q70u80mfposcsv", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"enc", "[", 
        RowBox[{"Keys", "[", "data", "]"}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{"Values", "[", "data", "]"}], "]"}]}], "}"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<t1k50q70u80mfpos.csv\>\"", ",", " ", "t1k50q70u80mfposcsv"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9538878848596935`*^9, 3.953887995299036*^9}, 
   3.9538889124289455`*^9, {3.954476756356224*^9, 3.9544767613270836`*^9}, {
   3.9544768307225285`*^9, 
   3.9544768382350903`*^9}},ExpressionUUID->"8e36c6a0-2c20-8c48-8491-\
67d2ffce0f66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"t1k50q70u80mfposcsv", "[", 
   RowBox[{"[", 
    RowBox[{"40", ";;", "43"}], "]"}], "]"}], " ", "//", " ", "N"}]], "Input",
 CellChangeTimes->{{3.954476764899559*^9, 3.954476816961174*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"35b55f22-2ebb-5e4e-be82-3f9a37172873"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "217.52820266033814`"}], ",", 
     RowBox[{"-", "161.38328103498256`"}], ",", 
     RowBox[{"-", "129.63921956688935`"}], ",", 
     RowBox[{"-", "128.94607238632943`"}], ",", 
     RowBox[{"-", "105.93150659018694`"}], ",", 
     RowBox[{"-", "88.77316970094705`"}], ",", 
     RowBox[{"-", "88.08002248505016`"}], ",", 
     RowBox[{"-", "73.49429794153379`"}], ",", 
     RowBox[{"-", "88.08002250271863`"}], ",", 
     RowBox[{"-", "73.49429794153379`"}], ",", 
     RowBox[{"-", "61.85539073591307`"}], ",", 
     RowBox[{"-", "61.16224355535312`"}], ",", 
     RowBox[{"-", "73.4942984044479`"}], ",", 
     RowBox[{"-", "50.47975508833947`"}], ",", 
     RowBox[{"-", "50.47973214539132`"}], ",", 
     RowBox[{"-", "41.75023647344058`"}], ",", 
     RowBox[{"-", "41.05708929102523`"}], ",", 
     RowBox[{"-", "50.47973214539132`"}], ",", 
     RowBox[{"-", "41.05708929288064`"}], ",", 
     RowBox[{"-", "32.62824804025453`"}], ",", 
     RowBox[{"-", "32.62824804025453`"}], ",", 
     RowBox[{"-", "50.47975508833947`"}], ",", 
     RowBox[{"-", "41.05708929288065`"}], ",", 
     RowBox[{"-", "25.696580836468492`"}], ",", 
     RowBox[{"-", "25.003921960960103`"}], ",", 
     RowBox[{"-", "25.003433655908545`"}], ",", "81.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.0794415416798357`", ",", "4.276666119016055`", ",", 
     "5.375278407684165`", ",", "4.564348191467836`", ",", 
     "6.579251212010101`", ",", "6.984716320118266`", ",", 
     "6.068425588244111`", ",", "6.674561391814426`", ",", 
     "7.321188556739478`", ",", "6.522092798170152`", ",", 
     "8.567125560164447`", ",", "7.16703787691222`", ",", 
     "6.984716320118266`", ",", "7.221105098182496`", ",", 
     "8.776475789346321`", ",", "8.633374945705647`", ",", 
     "8.283999304248526`", ",", "8.80926561216931`", ",", 
     "8.591186871324563`", ",", "8.881836305004146`", ",", 
     "7.572502985020384`", ",", "9.03884005381381`", ",", 
     "7.773173680482536`", ",", "9.435721418230584`", ",", 
     "9.980448593672257`", ",", "9.554780778246572`", ",", "4.5`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "1.3862943611198906`", ",", "4.882801922586371`", ",", 
     "6.52795791762255`", ",", "6.068425588244111`", ",", "8.34283980427146`",
      ",", "8.954156966583772`", ",", "8.20849175174038`", ",", 
     "8.960339366492091`", ",", "9.734121706902389`", ",", 
     "9.047821442478408`", ",", "11.19420669873299`", ",", 
     "9.886137914201015`", ",", "9.788076701024801`", ",", 
     "10.102174463416347`", ",", "11.729648448481516`", ",", 
     "11.653799831850009`", ",", "11.367437158221623`", ",", 
     "11.951980076071948`", ",", "11.789859988875245`", ",", 
     "12.133501952695338`", ",", "10.874493716599092`", ",", 
     "12.388744141088416`", ",", "11.168800017095236`", ",", 
     "12.875070565857117`", ",", "13.461688683007948`", ",", 
     "13.076227288060306`", ",", "6.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1431008436406733`"}], ",", "4.475061500641071`", ",", 
     "6.788295838944809`", ",", "7.001609854453761`", ",", 
     "9.150802659259986`", ",", "10.043814552627406`", ",", 
     "9.523602468030733`", ",", "10.568384424403332`", ",", 
     "11.194643969018365`", ",", "10.471345471078282`", ",", 
     "12.919084706350503`", ",", "11.52513462887666`", ",", 
     "12.018615926329751`", ",", "12.245621189556426`", ",", 
     "13.741474275548473`", ",", "13.839477443864089`", ",", 
     "13.501540634539026`", ",", "14.245008158392334`", ",", 
     "14.064049902221868`", ",", "14.636373503118682`", ",", 
     "13.26322836337707`", ",", "14.8487692734301`", ",", 
     "12.828886950055104`", ",", "15.403559181820654`", ",", 
     "16.02244121190358`", ",", "15.606489856271459`", ",", "8.5`"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.95447679627787*^9, 3.9544768175784073`*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"4c532df0-1d79-2340-8804-53cecf14cbae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"traindata", ",", "valdata", ",", "testdata"}], "}"}], "=", 
   RowBox[{"datapartition", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.948968149279277*^9, 3.948968160392371*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"6b527e90-e3d4-fc40-b154-1e03c09473e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"enc", "=", 
   RowBox[{"NetEncoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Function\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"N", "[", 
          RowBox[{"Abs", "[", "#", "]"}], "]"}], "]"}], "/.", 
        RowBox[{"Indeterminate", " ", "->", "0"}]}], " ", "&"}], " ", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Keys", "[", 
        RowBox[{"data", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.942855925789545*^9, 3.9428560552594795`*^9}, {
   3.942856092110628*^9, 3.942856092403679*^9}, {3.942856200450712*^9, 
   3.942856221974493*^9}, {3.9428562938356533`*^9, 3.9428563132171135`*^9}, {
   3.9428563516555195`*^9, 3.942856361730505*^9}, {3.94285641018964*^9, 
   3.9428564169157906`*^9}, {3.9428566343816376`*^9, 3.942856664328413*^9}, {
   3.942856765599806*^9, 3.942856770589876*^9}, {3.9428568242589626`*^9, 
   3.942856833737961*^9}, {3.942856922226433*^9, 3.942856939468569*^9}, {
   3.9428570003921947`*^9, 3.942857002608448*^9}, {3.9428570762787895`*^9, 
   3.9428570861728783`*^9}, {3.942857206896509*^9, 3.942857216184204*^9}, {
   3.942857266906107*^9, 3.942857293195463*^9}, {3.942857339484434*^9, 
   3.9428573413578777`*^9}, {3.942857775498678*^9, 3.942857805441332*^9}, 
   3.9428587382314224`*^9, {3.9428596750801353`*^9, 3.942859690599987*^9}, {
   3.9428811508902016`*^9, 3.9428811516687145`*^9}, {3.942882822162916*^9, 
   3.9428828226440506`*^9}, {3.942891467569147*^9, 3.9428914684078293`*^9}, {
   3.942893444988821*^9, 3.9428934456336803`*^9}, {3.94299122653574*^9, 
   3.942991227077423*^9}, {3.9429918280926533`*^9, 3.9429918291463585`*^9}, {
   3.943014438374504*^9, 3.9430144385362873`*^9}, {3.9430146120651627`*^9, 
   3.943014613264702*^9}, {3.9430746274453983`*^9, 3.9430746319617634`*^9}, {
   3.943086106278618*^9, 3.9430861108354454`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"130b0450-7003-2b4b-9e3f-02495ebbe8c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"net0", "=", 
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "256", ",", " ", "Ramp", ",", "128", ",", " ", "Ramp", ",", " ", "64", 
        ",", "Ramp", ",", " ", "32", ",", " ", "Ramp", ",", " ", "8", ",", 
        " ", "Ramp", ",", " ", "4", ",", " ", "Ramp", ",", " ", "1"}], "}"}], 
      ",", 
      RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
      RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net1", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"512", ",", "Ramp", ",", "256", ",", "Ramp", ",", "128", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<Swish\>\"", "]"}], ",", "256", 
       ",", "Ramp", ",", "64", ",", "Ramp", ",", " ", "32", ",", " ", "Ramp", 
       ",", " ", "8", ",", " ", "Ramp", ",", " ", "4", ",", " ", "Ramp", ",", 
       " ", "1"}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net2", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"512", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", "256", 
       ",", "Ramp", ",", "128", ",", " ", 
       RowBox[{"ElementwiseLayer", "[", "\"\<Swish\>\"", "]"}], ",", "64", 
       ",", "Ramp", ",", "32", ",", " ", "Ramp", ",", " ", "8", ",", " ", 
       "Ramp", ",", " ", "4", ",", " ", "Ramp", ",", " ", "1"}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net3", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"256", ",", "Ramp", ",", "256", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", "128", 
       ",", " ", "Ramp", ",", "128", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", "64", ",",
        "Ramp", ",", " ", "32", ",", " ", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", " ", "8", 
       ",", " ", "Ramp", ",", "4", ",", " ", "Ramp", ",", " ", "1"}], "}"}], 
     ",", 
     RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.943086590563572*^9, 3.9430865912852364`*^9}, {
   3.943092215994051*^9, 3.943092219888052*^9}, 3.943274784825466*^9, {
   3.946344662853647*^9, 3.94634467496471*^9}, {3.9469606582222023`*^9, 
   3.946960665196287*^9}, {3.9469622697158012`*^9, 3.9469623043284225`*^9}, {
   3.9469729958636456`*^9, 3.9469730327002487`*^9}, {3.9476083277615395`*^9, 
   3.947608337800144*^9}, {3.9512177742901173`*^9, 3.951217776259411*^9}, {
   3.9516157996529827`*^9, 3.951615801047636*^9}, {3.9516159076423836`*^9, 
   3.951615923245056*^9}, 3.9516160267049923`*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"af0d0287-3b90-684f-934b-b914a251f688"],

Cell[BoxData[
 RowBox[{
  RowBox[{"epoch", " ", "=", " ", "12000"}], ";"}]], "Input",
 CellChangeTimes->{{3.939803449475828*^9, 3.9398034544066124`*^9}, {
   3.939805073997675*^9, 3.939805075016777*^9}, {3.9398057683030643`*^9, 
   3.939805768804888*^9}, {3.939844390129118*^9, 3.9398443918980103`*^9}, {
   3.9399198812074203`*^9, 3.9399198858230934`*^9}, {3.9399223577628784`*^9, 
   3.939922358406822*^9}, 3.942036051340982*^9, 3.942126898679775*^9, {
   3.9428590586009235`*^9, 3.942859059658777*^9}, {3.942859761719305*^9, 
   3.942859762535877*^9}, {3.942862246606962*^9, 3.9428622473317833`*^9}, {
   3.942880393658924*^9, 3.9428803945651417`*^9}, {3.9428828444192524`*^9, 
   3.9428828457644615`*^9}, {3.9428839215721703`*^9, 3.942883922658594*^9}, {
   3.942944515668728*^9, 3.942944517115345*^9}, {3.9430861233510284`*^9, 
   3.9430861253755417`*^9}, {3.9430871200220375`*^9, 
   3.9430871202132473`*^9}, {3.9430885608706455`*^9, 
   3.9430885613840103`*^9}, {3.943091819901491*^9, 3.94309182089942*^9}, {
   3.946344415193161*^9, 3.946344416825466*^9}, {3.9512177816879864`*^9, 
   3.9512177851561375`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"41594b7e-240f-ba40-a42b-263064ae440f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net0", ",", "traindata", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "valdata"}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "epoch"}], ",", " ", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"19", " ", "coeffs"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"tNet", ",", "valLosses"}], "}"}], "=", 
  RowBox[{"result", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<TrainedNet\>\"", ",", "\"\<ValidationLossList\>\""}], "}"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9430861460783806`*^9, 3.9430861464263725`*^9}, {
  3.943086794649988*^9, 3.943086795073509*^9}, {3.9469611966479473`*^9, 
  3.9469612043583927`*^9}, {3.9469767597245064`*^9, 3.9469767610234604`*^9}, {
  3.946985103018404*^9, 3.946985103601967*^9}, {3.95121779250321*^9, 
  3.9512177964281063`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"7c60a2d2-ed7d-3c4f-bdf0-8be33c5babfd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "192000"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "12000"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["7.9min"], 
                  TextCell["7.9min"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "25969"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "1020"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "204"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "12288000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["GPU"], 
                TextCell["GPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"3.6\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.03599111191720894, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.83\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.04833502135922982, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[GridBox[{
                {"", 
                 ItemBox["\<\"rounds\"\>",
                  DefaultBaseStyle->"LabeledLabel"]},
                {
                 RotationBox[
                  ItemBox["\<\"loss\"\>",
                   DefaultBaseStyle->"LabeledLabel"],
                  BoxRotation->1.5708], 
                 GraphicsBox[
                  {AbsoluteThickness[1.25], {
                    {Hue[0.083, 1., 1.], LineBox[CompressedData["
1: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
                    "]]}, {}}, {
                    {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1: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
                    "]]}, {}}},
                  AspectRatio->Full,
                  Axes->None,
                  Background->GrayLevel[1],
                  
                  BaseStyle->{
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6},
                  Frame->True,
                  FrameStyle->GrayLevel[0.5],
                  FrameTicks->None,
                  
                  GridLines->{{2500., 5000., 7500., 10000., 12500., 
                    15000.}, {{-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {2., 
                    GrayLevel[0.3001]}, {3., 
                    GrayLevel[0.3001]}}},
                  ImagePadding->1,
                  ImageSize->{302, 182.},
                  PlotRange->{{0, 12000.03125}, {-2.057, 3.757}},
                  PlotRangeClipping->True,
                  PlotRangePadding->None,
                  Prolog->{{
                    InsetBox[
                    FormBox["2500", TraditionalForm], 
                    Offset[{-2, -2}, {2500., 3.757}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["5000", TraditionalForm], 
                    Offset[{-2, -2}, {5000., 3.757}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["7500", TraditionalForm], 
                    Offset[{-2, -2}, {7500., 3.757}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["10000", TraditionalForm], 
                    Offset[{-2, -2}, {10000., 3.757}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["12500", TraditionalForm], 
                    Offset[{-2, -2}, {12500., 3.757}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["15000", TraditionalForm], 
                    Offset[{-2, -2}, {15000., 3.757}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 2.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 3.}], 
                    ImageScaled[{0, 0.}]]}}]}
               },
               
               BaseStyle->{
                FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                 GrayLevel[0.4]},
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               GridBoxSpacings->{"Columns" -> {{0.5}}}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{3.9512179827379284`*^9, 3.951941626202835*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"e9af5b1c-13fc-5f42-9615-f51890ffbbaf"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         InterpretationBox[
          RowBox[{
            TagBox["NetChain", "SummaryHead"], "[", 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                    Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                    GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"expression\"", "SummaryItem"], 
                    "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"scalar\"", "SummaryItem"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                    Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                    GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 26}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 26, "$InputDimensions" -> {26}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{8, 32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 32, "$InputDimensions" -> {32}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 8}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 4, "$InputDimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{26}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    ReplaceAll[
                    Log[
                    N[
                    Abs[#]]], Indeterminate -> 0]& ], "OutputType" -> 
                    NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT], 
                    "Pattern" -> NeuralNetworks`ValidatedParameter[None], 
                    "Batched" -> False, 
                    "Initialization" -> (Initialization :> None), "$Version" -> 
                    "14.1.2"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "14.1.2"|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", Annotation[#, {"Inputs", "Input"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"expression\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 26\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", Annotation[#, {"Outputs", "Output"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", Annotation[#, {"Outputs", "Output"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
          
          NetChain[<|
           "Type" -> "Chain", 
            "Nodes" -> <|
             "1" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
6RZB9PPLxrq0Njj+KQIbSk3gf4ZVcgg=
                   "], "Biases" -> CompressedData["
1:eJw1UmtMk1cYLm6gDRNUJlLZlIumJIjgKqPQfl8FZ9HBBIHZCQuxXJYRwRIc
iCKCOhzKdSaAjokFhsAEXPEC0u88B1CyiR3IyKobQynKZThlGA0Ukzn6JZ4f
7znve573Oc958rrGaSK+WCQQCA4sWQgR6oOBaWnqQ5E2liRRnSz5INlq4ShY
CAWPnJgVRgnRhngzP221x46wFtZfUsuaXKvY77JMUO29zqbVSDm7sC9pZpQ1
xu64oCGhFZZ2w2g34WnOTeNpbAYxT8uIl6CE2dSaCWn3ELYIa3Az0Ir6k+OY
fbkVSWv2Iym8BX/k2Sr+rpnne10FUnJVo0Hh3Ft0IPQe/La3w1BSgSuFWkw7
3mDNvfvYz+SnOWcXd2qr8yY6rgeSDf/AVBoMY4gPuZgnR36qCcMrjWhIDcK2
mlD/h7pzrIU7oGI/+/IrO/pYmUL8OpJo/YonyD6zGwfCYnj9ataVs+wzL8LZ
YVkf6n06+fr3O3PpaCPQnTgOY/oqdCZk8bjCTU7IiTJjQAG5JY/TvOb/MNAu
hPPBOrz7I8e6ZdrRYyP3GUvdMfgbnu/NOt6cDYP9DCP8eYzIs01EWnQJvp7P
2JymcmYGR2i8xIHcdXqKJlkbjpUmcKP2Q4iStChixbUkxmY9XasqQuZaB4T+
slyxWjwHbncreXu4lH/jREkPr2lWb6XY1mtHU+5LoVOOYdf2almbUMl5fN3G
3nbpl8tnjHgQaEuLPsxApocEvuGhZNDxrH5wpYo7ozNyLz42k4CTl8i+qR/w
TnwGss1PeP7IW12c97wKnaebSemJW5h/7U+LH7gRhfsesivFnlSkBvIevbqq
I9qpftJedoHVLvWAJvc5Oxm9iPVM30w1lXvRcPJfMh4tohasPM6ZUpMP66X9
U3+2z51bF2HgfWsUxDNNQ9Z0c6EYp5wiqWRCpnjj4VIbL0Z9exmvqeqvMqgu
T+rNGQ3k1eNyBjFqIl89Bec6Th+RY+AxQddjaY9nlp6fNYOK7rjyK8yFCx6F
L+Y1HB0qJj5bGvXmajFJrgSzTDQsD7pAyfpIb4gCDjHDkavYKpEbVdulcOVG
MatU63C3UYmIa2v0KodpMifN4x7dsOLnwOO9o3B3c6BeogamJK4AvorznJDm
ouP5chobXsf9llHAJIoO660r+mX1lU6kOF3Maxw4XI3gOx2k+fPF2HgqGrJ5
DdUukRLZRAt//59QyeZ29XFHJqaZm+e7GMd8QvxqB7GOq8TDHHf83jkC+SdZ
zFSZFW2+mI/JZhs6InQgH41/CvH796CM2YBg407g2kZu+Jknu+dbNWZ7Q0hY
12X8D4nD4us=
                   "]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                  "$InputSize" -> 26, "$InputDimensions" -> {26}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
              "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                  "$Dimensions" -> {256}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
              "3" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
fjWRp3F1J2n6+tfg/H0tPh2uXnls+gRerhZDIxy1MHcwkDe1pJDhs1Lol3FS
6NwYBiPPHcfaH+XMvE+apNpWkpPZTDCx+zhNT9jFirQm83nycvwRB9K5URqP
PQvFMwVGaPO8HK1mrYaKqEI+lHNBkLlnEh+27i0kXbiLb+dUwYhwO7p4ZAIv
zAmA5Ztmg4UcCluk64gDnoIy3SEMS/mLgy1AzyrL0kpvO5zGxhPf4xr8crIp
+Kpq44TVLfxO2yPUtxBhT4fPoqpX1aikpSFO35lEj4k20WCBBC96l8IMXp8h
7csdicyo9TRir3jl5MXAmec3FDPW5vpqI9A6pJIM3ImFhoXnobq9Cfp32f4z
7gjYamAPwy4YQaRaJBRv7CgP2cfh/foJcOPObJa5eSSKba/FWCcTqqiTht9G
HsPKS45U7MhLlK1dz+Nc/+DYrInc1+eY4KJ5Fjx1DqTbPPW5yK8x0FpWiW7C
4fSRxVxIfzKciy+KhSSRlslO21+Ad6a54Ij4dkh3OkNZrzWvrTrPX8Z7g9eb
tWToqBj/5Deev018i2eCNTFkUy4ZdmKQlNmdYHMyaiBnapvQv7yQaqVQjGuI
wqcXf3Gpoli07JkK2371wXSxDOJyzweKqt+hd40H9ZHpQZFaIXwPHk0/XT8D
PfmWPCluJya8+ImTrtiTnG+evKc9BOQ+nhCmGjry9udNeP1MGpje3MAnKUrR
cQ0Eb3k6Cnbdtqbh57bwNo+Z7FWQNlosWAgP3rvQ639j+IZlyVie4EFm7GjD
x70dwiVTphMdWgBx7qtwODzG9wWXMeuytvC/ZQHgM7sFZo3qB9DyxImfZ4LE
98l8u4I2HdqgxPfLDWByWAeGa0xjq2fdZ339X6F0zH3yw90dGlcEU/8ddcz/
RhR/e1Gfr7YLR9coL3pmzXIYIzYeJdu2g/Owv1j0o5+NaImCD5sSSec9O5y6
ZID92CIFyVsArhxMwmVTKjHP9y66fWoHkYAD2Jxrip9O+/KA6mhY1BgJc2e3
0JQJ5qC+/zIceb2UGVmdY9KbtbicthPGzlKlP+SUuYt5PO/YNoPnFrtzZvAY
rTdztv7dA7b9jBHVSL1KDLOtadEGHfD2dyDLu+Lhv3fafFd6K6ySvQCbHzhi
cvhbOHfnGJMdPok3e9wlCntV6GL5t9iZpcGWPxDD1lApkJTdCxK58TTPS5MP
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
Y6UOX3bLFDf7jOT/A7EARKU=
                   "], "Biases" -> CompressedData["
1:eJwBKgLV/SFib1JmAgAAAHMIAAAAUmF3QXJyYXlTBgAAAFJlYWwzMmwBAAAA
gAAAAPUPPL3Fiyy868aDP0xkDL8K2qK+FVHLvuChJ7wAAAAAfvAcv127/z7S
5/e+L0cjPk/73jvIAie8AAAAAAchAT721R294lsiPvNtArxS922+KnSrvEkG
uL4mlza82jqcvGN4V76TYRU9OCbBu55awLz4EgQ/knpdvKurcryllOe8XuYA
vEVa/r4HQZi+U792PmAeQrzmMrm7zmuFvsNvH7/Lzey9r2S/vGfFxb4kErq+
kdXgvqFJdb3OZQs7Yz4EvSP/Ib1FZdu+Sow4vpKFLD1HTcu+4hxTvidsoLvE
8qC+Mu8Evb92gbzrmTO+/Fw2Ps+I1bxV0mE9uSC9vqJOEr0rUoW+OwWQPS5c
GLzmc1S+GS6jvqECG7yufXG+qOCCvurVVD95Vk67GBTou8ttA70wBwC8UDxm
vFYs9by4wDK/+JSAu8pxK73B2iW+CPkuvM5LiL40Xic+KWOMvLwbBrxiEZa+
yXdHPlMixLugxI0+khssvLbYj77Hlcc+hOwavJivWr5GNXU+IZOOvAAAAABd
rXo9hxqsvHiSgr7GdH+8YS5uvhR/N725mhm83/zOvtiM2D0x4Nm8QIcqv8gW
ur6f55C+Pbgqvrhcq74i3dU9PjKQvtgUxL757za8JrPAPSQrv7zcASG9qSNx
vo9Z3L60axq9mSETvZ9Asz+Y7fq6Ya4L0w==
                   "]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                  "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
              "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                  "$Dimensions" -> {128}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
              "5" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
DkyoVS3slQtm44+1weXdB/C3dwe6TNnHNM1f0NmvK3Hj5irud+4x1DboxIS/
06nRmAlyPibjnyeTca3fKOiVlmMf3F+DzwIJptvsyP0VnBDGzhZhuiVLWNyb
ZIos7MHL8/ZxNWadgsNOiI1K5uzdOTUWEuAO2wOn02iKZvNe1uKXJU34uHg4
vbTayzbPLbUrKFlMT8518ntCZmLoZjMmK9XH7+MkmMf5I3DkTTI+7+uApC1/
8VP5G+H7BY5kVrKDqfd+ge1JEnD+8lO7t1EdFDVnMxxY9I1b+rEfH4RI0ePD
a8hlLUelwlCYGaXBO0aFsYLJJfxDp9fwM9SNfpw8g8Uu/jRhigadfrQSHJIv
QG6YMlvUfwptddOEm4qy2ZxaJ3Jd9Jq7svY0RJnO576s3gE3HULoh+FqWC64
xi/N92GliT85g3kv0HuJCGtNPAmqS+XQZe9IdtfcDtPWGjD/Gx5YdXsf9mRm
squBT3CuqQIcfWkBzvY+FOGUhz5ri0DwcQkM2/sS9I85wBivCPo0KYK/4x9A
VbfzaNN3NYGN20c+vCgZ+5acx7+l5qixQRqmBstQuJw+CcJNGBVMRx+L0RQ5
/ghUOZbDBJeZdHnXZxA9rAJfSjPRJ0uPejIcWPk1R/b53U7O9UIY7NO/zaUu
rIHhqw6T1eB+/DYnkXEyonjssC97Lt2PTmrT0WSUCCv8u5DbvV2WYjsC6er0
Nfjx8A/epLMJXy0UZbZ9abjzQhR46maQ26ZHWG8Xxrx7NbgLUT248Wo/hC5s
wwPfjsFFbx0M9ffHbkEk21SF/II9wfCgfziID2/AO0FncKP2AHbWdePYqheC
zqXH4N7lGphro0H6fu/5fcRRX4I4S1KLIt3ePeA/uQneRe+AjWEx7Lr+SJYS
lsDNXbUZ30mLcKezErmUbM/6Sb/0aKrLcxSsu8fp33TCO0eWsVV4Hc/YluOn
8BT+3OJ7GHbtK7e6wZMKX0mS+gYP/uOCPvjarMG8xKaAiMYv3tV5HDtgUgrO
85JAOa0dJau3wZpfecxruCwNlNVxhxL96297jyDF4SGgiO0Cy8WJ2FujywJP
5PGrZrnTz5UXKUTREIRzUmHExVgmLJ1JCcIbzN63izcWttKGB304Ju84yKrd
RMWlb7A3UQxEPorQ0gPjqF8YxbTayuFP2H+4IWIfGPjr49IcZfhU6IjLjI9z
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
XEoB5++TSP18pMBTbQT7H8U2tpc=
                   "], "Biases" -> 
                  RawArray["Real32",{
                    0.002639226848259568, -0.01046314463019371, \
-0.008516564965248108, -0.05205046385526657, -0.09257451444864273, \
-0.07356871664524078, -0.030488941818475723`, 
                    0.7952601909637451, -0.22757533192634583`, \
-0.004824287258088589, -0.0014952142955735326`, -0.009951627813279629, \
-0.11986110359430313`, -0.06788355112075806, -0.008584634400904179, \
-0.038394760340452194`, -0.01204125676304102, -0.36224672198295593`, \
-0.004085566848516464, -0.04772837460041046, -0.06855615228414536, \
-0.27763867378234863`, -0.10115127265453339`, 
                    0.05151868239045143, -0.0023512428160756826`, \
-0.008944188244640827, -0.0344330370426178, -0.2061435580253601, \
-0.024307264015078545`, 0., 
                    0.19010460376739502`, -0.002892749384045601, \
-0.22247949242591858`, -0.027988985180854797`, -0.009908939711749554, \
-0.01858694478869438, -0.1691521853208542, -0.007673083338886499, \
-0.16113683581352234`, 0., 
                    0.3100229501724243, -0.04247632995247841, \
-0.060863859951496124`, 0., -0.03793491795659065, -0.0034320044796913862`, 
                    0.008723507635295391, -0.10879559814929962`, \
-0.21005044877529144`, -0.012522272765636444`, 0.037799153476953506`, 
                    0.1789107322692871, -0.006773688830435276, \
-0.07166649401187897, -0.03716820850968361, -0.023755356669425964`, 
                    0.19086295366287231`, -0.009321230463683605, \
-0.24268034100532532`, -0.032062191516160965`, -0.02625865489244461, \
-0.2390681356191635, 1.2853479385375977`, -0.05274095758795738}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                  "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>|>, 
              "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                  "$Dimensions" -> {64}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>|>, 
              "7" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
nd3B/wMXq57b
                   "], "Biases" -> 
                  RawArray["Real32",{
                    0.5916836857795715, -0.08227744698524475, \
-0.04624202102422714, -0.015109298750758171`, -0.031425878405570984`, 
                    0.8281717300415039, -0.006381314247846603, 
                    0., -0.04706151783466339, -0.08255620300769806, \
-0.31800660490989685`, -0.3714386224746704, -0.14252671599388123`, 
                    0.6285833120346069, -0.0200977586209774, \
-0.0006522752810269594, -0.0056897979229688644`, 
                    0., -0.338899165391922, -0.007873066700994968, \
-0.06295473128557205, -0.13612262904644012`, 
                    0., -0.1258285641670227, -0.036376263946294785`, 
                    0.022686045616865158`, 
                    0., -0.1355387568473816, -0.6350224614143372, \
-0.022828608751296997`, -0.005345411133021116, -0.2960616946220398}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                  "$InputSize" -> 64, "$InputDimensions" -> {64}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
              "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                  "$Dimensions" -> {32}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
              "9" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1:eJwViXs41XccgI+Tue3UIawLFqq5RDxWFOf7OSklw2rqYWrrcZDjWu7Sc/aM
Ibchd07uzsmW22ZrqN/345brLO3oibDNdXMJY3mU1mPzz/s+7/PqeV538WGz
WKwwpf/hIoiyDQ0VRF9Q2IqrgsAPLQK35tbT3bK1kIzdvonRK9Oo/PcLeKLh
yoy+LMEHHUW432kIci7JY0jjBGWXsvlLefU2EMEBV/4rpjPJg3zwkxX5N/c2
Smsu0rXJMxCVrMuvv3we5vwX8EZPP7m1OMJTKS6BKLk03NAcol7jscg73IIm
ThUQYLxqM95ajH5Tiswx2QxdyuhitEYb4O0y4hgrDftdsiCv3NAmyFWfPuji
00xVBTxoUGMzecoLpV+Wo3t6FhQatIExRpD3n8bAheAbYCloJZaZ5vBqTAZz
ERfJDwVAwhyzcTDVAnWbJVi/5yssVFGGWb1W+Ghag9/V3g4iB0XUnY1FQ49n
zNJaCK+fewXlJ4tpgCwaPjbeRbU3rJHH1oJTv/5GVrfNk8ncT6nR/dOkPGQW
05wvw17zZGqtnoq2tk5o6Z2IwcruONh2BJpbtuNnpInkFUpwgTEh10yfEdNG
B2Cp+dLI6U3wz7KEuGopmA3mwr074ximTOnjhH1wr2EQxetZpE4UQs2cU2lM
zyJBcTE+1y2jejvDoSj/PO758SiaZEzTFbmndCG1E8S2bkTiGo1/XD8JVjn7
wdjCDy/ZxlGzOypUKyIe/uIkMR1ym/A4SBU9iGbL9yvvgkpIClSce4esWdSg
1fC2FsuSGp75J+sotFfif/dGTILc9CDztBGw9bVQFqDTYiPzgYjeZZisPobs
t5Xk5IgIshXiULDaBxP5iqAnnCdV8fIYTfVxd0EKOuVWYadnGBom7IIa00Ly
zboIOS1t9C4njoSVppNBVwkY/D4EB/70JtVZDHBfpmCOfcJD3+ZBunNKG2RK
P5ONs1YkzeMEmjV3Y9bdNqZOUMa75V9KtXcU4ED2FOln78CDZ+Qg4L0RGHpS
Ds1SNaIaNErqRh4yHcs6NM/kBRy2WKXe8j0kxnGCcOQqYREVmEOV3xKRvwYJ
DudBk6QMbWvF4H6oGOyUa3kL4Wz+uMiCbiwbo0LVOBlZdiDCbjZUONyk80Pb
iXlxBkj/maPigbM4anUfZzlrxLOtie61esMbsObSK49UUSNxk0lX6oNhTVOI
PFrGJHG/wO7XzuS1CdLUCT+yQzxOF4aPw1VFJ1SrWgGZdhFoJtrh814hrRWc
gx6JOzpKA4m8D5f+ElNKhCoeZPcRCVGa4aLONQnUN/YRr/zj0DTNghPDDHiI
jYCTPIOF6geA/3kEcpQi4evcCdoQWkp9Z1rRzT4dgpMfETt9VWjvLQJuuwmq
Gyhi/Hos/Q+yAfqr
                   "], "Biases" -> 
                  RawArray["Real32",{
                    0.0058663678355515, -0.07095301151275635, \
-0.0002635649580042809, -0.008321708999574184, -0.007575138006359339, \
-0.07321060448884964, -0.04059454798698425, -0.032566796988248825`}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {8}, "$OutputSize" -> 8, "$InputSize" -> 
                  32, "$InputDimensions" -> {32}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
              "10" -> <|
               "Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                  "$Dimensions" -> {8}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
              "11" -> <|
               "Type" -> "Linear", 
                "Arrays" -> <|
                 "Weights" -> 
                  RawArray["Real32",{{
                    0.5032113790512085, -0.22911052405834198`, \
-0.9305244088172913, -0.3210773169994354, 0.3347699046134949, 
                    0.5218914151191711, 0.3373817801475525, 
                    0.1303752362728119}, {0.601035475730896, 
                    0.18991221487522125`, -0.8635889291763306, \
-0.2836397588253021, -0.4261458218097687, 0.01691545732319355, 
                    0.05406184121966362, -0.3616480827331543}, {
                    0.440999299287796, 
                    0.32896533608436584`, -0.4823300838470459, 
                    0.5511829257011414, -0.679645299911499, \
-0.19467543065547943`, -0.5731420516967773, -0.0420554056763649}, \
{-0.10542396456003189`, 0.3152655363082886, -0.15658678114414215`, 
                    0.7565909624099731, 
                    0.9433815479278564, -0.3448716402053833, 
                    0.1380014270544052, -0.3211410641670227}}], "Biases" -> 
                  RawArray[
                    "Real32",{-0.042644061148166656`, -0.24898087978363037`, 
                    0.00823367852717638, -0.010003629140555859`}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
                  8, "$InputDimensions" -> {8}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
              "12" -> <|
               "Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                  "$Dimensions" -> {4}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
              "13" -> <|
               "Type" -> "Linear", 
                "Arrays" -> <|
                 "Weights" -> 
                  RawArray["Real32",{{
                    0.23171693086624146`, -0.5471804738044739, 
                    0.5552679300308228, -0.6151210069656372}}], "Biases" -> 
                  RawArray["Real32",{0.010361394844949245`}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
                  4, "$InputDimensions" -> {4}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"]}, 
            "Inputs" -> <|
             "Input" -> NetEncoder["Function", <|"Function" -> (ReplaceAll[
                   Log[
                    N[
                    Abs[#]]], Indeterminate -> 0]& ), "OutputType" -> 
                 NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT], 
                 "Pattern" -> NeuralNetworks`ValidatedParameter[None], 
                 "Batched" -> False, 
                 "Initialization" -> (Initialization :> None), "$Version" -> 
                 "14.1.2"|>, 
                NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT]]|>, 
            "Outputs" -> <|
             "Output" -> NetDecoder["Scalar", <|"$Version" -> "14.1.2"|>, 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>|>, <|
           "Version" -> "14.1.2", "Unstable" -> False|>], Selectable -> False,
           Editable -> False, SelectWithContents -> True], ",", 
         RowBox[{"{", 
           
           RowBox[{"259.8829638939351`", ",", "131.59048358814826`", ",", 
             "46.05897266482569`", ",", "36.45246674287517`", ",", 
             "30.681836688648236`", ",", "29.66756279952168`", ",", 
             "29.49746901834242`", ",", "27.38425850640559`", ",", 
             "25.542960092784295`", ",", "26.137756146908586`", ",", 
             "22.601684371092215`", ",", "21.128313059549935`", ",", 
             "20.433487786876046`", ",", "17.57865989350659`", ",", 
             "17.35198456413277`", ",", "14.026307304624888`", ",", 
             "12.502057984389145`", ",", "10.748792203959644`", ",", 
             "15.311098906300863`", ",", "12.020925617918905`", ",", 
             TemplateBox[{"11960"}, "OutputSizeLimit`Skeleton"], ",", 
             "0.07432268612421253`", ",", "0.06399907683646912`", ",", 
             "0.05763535924966966`", ",", "0.30929392934772565`", ",", 
             "0.15099581225887745`", ",", "0.0906195825253449`", ",", 
             "0.04731539231410102`", ",", "0.05374563681100114`", ",", 
             "0.3643284732201673`", ",", "0.12834620917869066`", ",", 
             "0.07704513658452425`", ",", "0.10149133275348611`", ",", 
             "0.07087479943305987`", ",", "0.05228065661827161`", ",", 
             "0.05208440802758274`", ",", "0.074627026610388`", ",", 
             "0.06095150337763448`", ",", "0.05769199509373435`", ",", 
             "0.045855083677113224`", ",", "0.04833502135922982`"}], "}"}]}], 
       "}"}], Short[#, 8]& ], "line" -> 178, "sessionID" -> 
   33067555674874635269, "byteCount" -> 360528, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.9512179827379284`*^9, 3.9519416262240677`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"ab5cf7fa-cc7b-a547-9311-43597e5efb62"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"testexact", " ", "=", " ", 
    RowBox[{"Values", " ", "@", " ", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"testdata", ",", " ", 
       RowBox[{"x_", " ", "/;", " ", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "==", "0"}]}]}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"testdatamod", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"testdata", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", "#", "]"}], "!=", " ", "0"}], " ", "&"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testexact", " ", "=", " ", 
     RowBox[{"Values", "[", "testdatamod", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testpred", " ", "=", " ", 
     RowBox[{"tNet", "/@", 
      RowBox[{"Keys", "[", "testdatamod", "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9521661215231304`*^9, 3.9521661335510197`*^9}, {
  3.952166196933632*^9, 3.952166216092436*^9}, {3.9521662511942883`*^9, 
  3.9521662602824726`*^9}, {3.9521663501926346`*^9, 3.952166379348604*^9}, {
  3.9521664714242153`*^9, 3.952166519737095*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"334f0f25-10f2-634c-838c-cf5395dc208c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"testexact", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{"testexact", "-", "testpred"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Absolute Error\>\""}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"AspectRatio", "->", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92857646495968*^9, 3.928576480140782*^9}, {
  3.928576579015691*^9, 3.928576581574418*^9}, {3.9285766914801493`*^9, 
  3.92857669610519*^9}, {3.928582499386018*^9, 3.9285825317435923`*^9}, {
  3.9285832298528986`*^9, 3.92858325389485*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"b8c28996-8c25-c945-bd88-d1d4753482a0"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], PointBox[CompressedData["
1:eJxVlVtIVUEUhoceeoweCqx8OBJBWFmGEJLmzkteKFOzzAraBUFQeKGkB0NG
MPDBDEJMC3GLWppWZplZluMNzUuhXRAp3FBBWZkUQUFGtf9/P6wDh8PHmlnr
n/WvmRNyNDfj2CKlVOm/7/9f76O3W95vWUEMON5jfaSOnIT4Qi3YykT8+BhY
rfS4qmWUvAbxyjKuZ77TV8kJHlvqHnk38gc3cH8QuLeHHIv1M23kdMRNKfWR
IxvJ4VhfxHw60uPh8QmwScT6rEryLuiLe0CGHstmPTcD60O7WD/MYzNyhYz8
Tn836+3A+vYScjLyL77F8yLe1PhWnN8qeMh8mzwOrOslwx/9mfo09eRUk7eC
Z/Oon/W/0j9D/2omhX69ukHoNRGd5J2of5P1LfRXHxxkfBvO+6KdcaxX4fTX
SQN3038H82I6+lk/CucN8v3agnw7OoVfqrCeHO3x/MdxcgryBd8mo3/z/RMi
v86qYRz1VYbD+D6P3anX7A/nv7uZHAfOvk//OV9h9Edb4Gv+evannPoN/NHp
fv+4vuqy8F/VPxb+6xj2J4D+6Qp/3qHPPtBH5vlP+POI/YFl7I/ifKSdleeb
vSTm2w5hPZf9GSgWfquNndLfxDah10w/pV7Uc7+/F37rj88ZR7+tVUbcVx39
iHpiwR1DYHsP9DXRT3cv4vl+/6kntVT2P4XvhYX9uo/vk8F+u5Dzb0HP0mrq
tXA/1ya8k/ObT/8c5v/D+Vd4P6wqn7k+6SIZ9UyeXx/vnbowJuZXn/TfG/TP
/GQ9Qz9m/PsLvXbPpOxviz8Pqdj/6o58DwM53M9+ZVaQsT7we0DMg8opF/1T
ycPS76hBWf8l/VPIb+busv5+j50f09yP/tihE+L/w6owwg/1oYh6spBvxRPp
x5cbrEd951vFfdYbWF9hvxouEXrczZxHm/351CX6rU+NcF7Z/ylNhp9q+XUy
8//i/XfAOoLz56CeWsJ50NTbeo76mH/B94v34wz7bSOfFfxM9EOtbyIz/zf/
/cgGx7WwPu9/PP0MsP6hYqFXvRmSenObxfzqOd5vl/cpiO+Ljbjljor7qao5
vy711A2J+XYPu9TL+g21MX8BiGlz5Q==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1:eJxVlVtIVUEUhoceeoweCqx8OBJBWFmGEJLmzkteKFOzzAraBUFQeKGkB0NG
MPDBDEJMC3GLWppWZplZluMNzUuhXRAp3FBBWZkUQUFGtf9/P6wDh8PHmlnr
n/WvmRNyNDfj2CKlVOm/7/9f76O3W95vWUEMON5jfaSOnIT4Qi3YykT8+BhY
rfS4qmWUvAbxyjKuZ77TV8kJHlvqHnk38gc3cH8QuLeHHIv1M23kdMRNKfWR
IxvJ4VhfxHw60uPh8QmwScT6rEryLuiLe0CGHstmPTcD60O7WD/MYzNyhYz8
Tn836+3A+vYScjLyL77F8yLe1PhWnN8qeMh8mzwOrOslwx/9mfo09eRUk7eC
Z/Oon/W/0j9D/2omhX69ukHoNRGd5J2of5P1LfRXHxxkfBvO+6KdcaxX4fTX
SQN3038H82I6+lk/CucN8v3agnw7OoVfqrCeHO3x/MdxcgryBd8mo3/z/RMi
v86qYRz1VYbD+D6P3anX7A/nv7uZHAfOvk//OV9h9Edb4Gv+evannPoN/NHp
fv+4vuqy8F/VPxb+6xj2J4D+6Qp/3qHPPtBH5vlP+POI/YFl7I/ifKSdleeb
vSTm2w5hPZf9GSgWfquNndLfxDah10w/pV7Uc7+/F37rj88ZR7+tVUbcVx39
iHpiwR1DYHsP9DXRT3cv4vl+/6kntVT2P4XvhYX9uo/vk8F+u5Dzb0HP0mrq
tXA/1ya8k/ObT/8c5v/D+Vd4P6wqn7k+6SIZ9UyeXx/vnbowJuZXn/TfG/TP
/GQ9Qz9m/PsLvXbPpOxviz8Pqdj/6o58DwM53M9+ZVaQsT7we0DMg8opF/1T
ycPS76hBWf8l/VPIb+busv5+j50f09yP/tihE+L/w6owwg/1oYh6spBvxRPp
x5cbrEd951vFfdYbWF9hvxouEXrczZxHm/351CX6rU+NcF7Z/ylNhp9q+XUy
8//i/XfAOoLz56CeWsJ50NTbeo76mH/B94v34wz7bSOfFfxM9EOtbyIz/zf/
/cgGx7WwPu9/PP0MsP6hYqFXvRmSenObxfzqOd5vl/cpiO+Ljbjljor7qao5
vy711A2J+XYPu9TL+g21MX8BiGlz5Q==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.9687500000000093`, 103.5}, {
              0, 0.6860198974609375}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {3.9687500000000093`, 0}, 
            "ImageSize" -> {360, 360}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> 1, "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.9687500000000093`, 103.5}, {
             0, 0.6860198974609375}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {3.9687500000000093`, 0}, 
           "ImageSize" -> {360, 360}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> 1, "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJxVlVtIVUEUhoceeoweCqx8OBJBWFmGEJLmzkteKFOzzAraBUFQeKGkB0NG
MPDBDEJMC3GLWppWZplZluMNzUuhXRAp3FBBWZkUQUFGtf9/P6wDh8PHmlnr
n/WvmRNyNDfj2CKlVOm/7/9f76O3W95vWUEMON5jfaSOnIT4Qi3YykT8+BhY
rfS4qmWUvAbxyjKuZ77TV8kJHlvqHnk38gc3cH8QuLeHHIv1M23kdMRNKfWR
IxvJ4VhfxHw60uPh8QmwScT6rEryLuiLe0CGHstmPTcD60O7WD/MYzNyhYz8
Tn836+3A+vYScjLyL77F8yLe1PhWnN8qeMh8mzwOrOslwx/9mfo09eRUk7eC
Z/Oon/W/0j9D/2omhX69ukHoNRGd5J2of5P1LfRXHxxkfBvO+6KdcaxX4fTX
SQN3038H82I6+lk/CucN8v3agnw7OoVfqrCeHO3x/MdxcgryBd8mo3/z/RMi
v86qYRz1VYbD+D6P3anX7A/nv7uZHAfOvk//OV9h9Edb4Gv+evannPoN/NHp
fv+4vuqy8F/VPxb+6xj2J4D+6Qp/3qHPPtBH5vlP+POI/YFl7I/ifKSdleeb
vSTm2w5hPZf9GSgWfquNndLfxDah10w/pV7Uc7+/F37rj88ZR7+tVUbcVx39
iHpiwR1DYHsP9DXRT3cv4vl+/6kntVT2P4XvhYX9uo/vk8F+u5Dzb0HP0mrq
tXA/1ya8k/ObT/8c5v/D+Vd4P6wqn7k+6SIZ9UyeXx/vnbowJuZXn/TfG/TP
/GQ9Qz9m/PsLvXbPpOxviz8Pqdj/6o58DwM53M9+ZVaQsT7we0DMg8opF/1T
ycPS76hBWf8l/VPIb+busv5+j50f09yP/tihE+L/w6owwg/1oYh6spBvxRPp
x5cbrEd951vFfdYbWF9hvxouEXrczZxHm/351CX6rU+NcF7Z/ylNhp9q+XUy
8//i/XfAOoLz56CeWsJ50NTbeo76mH/B94v34wz7bSOfFfxM9EOtbyIz/zf/
/cgGx7WwPu9/PP0MsP6hYqFXvRmSenObxfzqOd5vl/cpiO+Ljbjljor7qao5
vy711A2J+XYPu9TL+g21MX8BiGlz5Q==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.9687500000000093`, 103.5}, {
          0, 0.6860198974609375}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {3.9687500000000093`, 0}, "ImageSize" -> {360, 360}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 1, 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.9687500000000093`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Absolute Error\"", TraditionalForm],
  PlotRange->{{3.9687500000000093`, 103.5}, {0, 0.6860198974609375}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.92857650754961*^9, 3.928576706067368*^9, 3.9285768380190897`*^9, 
   3.928577216840497*^9, 3.9285773671466236`*^9, 3.9285789371129527`*^9, 
   3.928579031731576*^9, 3.9285795305602317`*^9, 3.9285832604105678`*^9, 
   3.92860413107821*^9, 3.9286042020534544`*^9, 3.928604381323144*^9, 
   3.928604538003304*^9, 3.9286047363466253`*^9, 3.9286048311999254`*^9, 
   3.9286049188305063`*^9, 3.9286049929411316`*^9, 3.928605066323311*^9, 
   3.928833298200966*^9, 3.928833389271408*^9, 3.928847902595287*^9, 
   3.928848098171273*^9, 3.929775056512608*^9, 3.9373035862849464`*^9, 
   3.937305828323248*^9, 3.937626892741541*^9, 3.9377497457807846`*^9, 
   3.9378015579890556`*^9, 3.937801773328327*^9, 3.9378031725284767`*^9, 
   3.9378135430903244`*^9, 3.937813663497551*^9, 3.937834364125618*^9, 
   3.937836580346855*^9, 3.9378401110394535`*^9, 3.9428590136602592`*^9, 
   3.942859504835455*^9, 3.94285993494582*^9, 3.9428602241971455`*^9, 
   3.9428610202696304`*^9, 3.942861379766073*^9, 3.942863369340626*^9, {
   3.9428702474370117`*^9, 3.9428702621434097`*^9}, 3.942871366813637*^9, 
   3.942881082546217*^9, 3.9428812535782146`*^9, 3.9428832370003624`*^9, {
   3.9428836572851143`*^9, 3.94288367035647*^9}, 3.942883906993143*^9, 
   3.942884860059902*^9, 3.942885156847172*^9, 3.9428854660000744`*^9, 
   3.9428858091534805`*^9, 3.942886833831272*^9, 3.942887350516119*^9, 
   3.942893957981739*^9, 3.942894495114355*^9, 3.9428954618913307`*^9, 
   3.9429451011304016`*^9, 3.942945724126457*^9, 3.942994396399338*^9, 
   3.943015186974367*^9, {3.943016902018955*^9, 3.943016919809738*^9}, 
   3.9430917300086155`*^9, 3.943261434226692*^9, 3.9432757183973007`*^9, 
   3.9463447834004383`*^9, 3.946961430201084*^9, 3.946964267088108*^9, 
   3.9469752040512733`*^9, 3.9512179955231686`*^9, 3.951941626781679*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"1baf1899-12e2-3042-92fc-568507513335"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"relErrors", "=", 
    RowBox[{
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{"testexact", " ", "-", " ", "testpred"}], "testexact"], "]"}], 
     "*", "100"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Relative Error\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9285767364285045`*^9, 3.92857678118857*^9}, {
  3.92858254051519*^9, 3.9285825619012604`*^9}, {3.928583264051319*^9, 
  3.9285832837728367`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"e16c3a10-1b0f-a541-bac4-3abc5dc80d0f"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], PointBox[CompressedData["
1:eJw1VQlQU1cUjRRbccSlUveOoEit1VhjC65wBGRREBJI2AIErQt1iQx2XHAJ
gguirVIFKkgFFasF0RTZrSkgCSIqqygVKK2CHRBFWZyRTn/+v+/OMH9ODuf9
u5z7vtVatWy9iUgkOsr9GZ9CvHLgH4bvHegHWMa8WbBIcpPwCKzbtylrjOw6
4bG49i7slCSuhrAFmuLONc1KGQkBT+KfMP2D+Gkom7G+7UVBMWFLiOdx0V5J
eAY2GGMCO98aV7l4Eiei82wg56Jvm5742air5UKSQHgO8rc2522VXiM8FwnW
7gkXXaoJi1HIRfiO14S/FM6NvUx4gYA/riAswf7brT0DlYWEF6LDLfLi4qs6
wl8J+cxm+XzN68+X/UnYFr8aC/gvkbAdyozx7e+EF0GhTTjjMb6f8GJsNNY/
cIfwEv68tXX/El6Kck7+wb06wssQv7fRPFOcTng5OjPixUU6Nj97jBv919jR
N38j7IAj5SXnrKrbCUOYj+GhgDWAgqunwcDmsQK6faYDp0wfEL8CfZl2t168
uU+8I/xdUwautBDWOOJVv5OJ+gJ7nxOyX+YW1Z09Q7wT7AfbYsb8w/rlDG5a
zZkNpcQ7o2dL/c7+0ibiV8LOGJPLiF8Jg8LUXB/wgngX/J3dFWmwpnloXFCl
nVvVK2H9d4UbZwCtpIh4VxjtPL3jAvFumF/UmfFmXRvxbngp86pQT6d8RO7I
uuOZ3FrD6nOHQ13jYPEwyke0iu+fSM3yW4U9kv3F9YnMH6v5fsonUr2a1fDq
Kl/TtSOXeA9MLNANF9vS/mg8hPPusf56osssqjQtl/yn8eR51dAT4tdAO37p
jcgIA/FrcH9xR6pP5CPivXh/yq/EEO+F8EPV0c6P2H55Y6ttSvUGS3ofvNF7
v7U91+UQ/b83Pnr+JLrwHtWj88axyE8vLHpQQnophhkfOTQvSFE/omr5CdeX
pJfis5Qt2soZxOukyMmvmT5yIeuvDNx6Wle2l5NehizjvqS2kl6GwZaonluG
RtLL+H22Dr5Neh+EOO02fyYlf8EHenXSHokZ7a/GB6qe5ClNWbWk9wGX3XWl
fQPpffn+b3PuJL0vtjtHu+vHvSW9L5+f+5K7pPeFKl8feFhC+yCSI7XlbebA
Luo35Px8NCdTSS9HWsfuNH037ZdOjsSoKWGF4eQ3kQJBjztOnu2m+UEh+KWf
+UWB/CNKxaijl0ivwGPufjU7W096P2G+6VQv/Pj7ctVRtg9+MKafEPsd6f34
fO2y2X3hDxNPq4enx5D/4I+Sp9vym/uSSO+PqU1LMz88RvXq/IX7eYjqEQUI
87WgeSKA79dP19k+B0BX9fmu3QebSR/A+/XHTcy/geielZv0cCebfyB2VSxM
e62MJn0gctJLDvduZv0PROnPZgdsNHmkD4KUM8AJg5b0QTguLups7yZeEwRP
9Z66lMTDpA8Cd93kzUti96cSGYPxqWGXWP5KbLwDM3ULu++UcJygPXmoK5b0
SiQvm7S94in7vgSjzOJd1lSLLNIHI95cbFtwkPU/GL3RXaVrfen7pAuGea2l
ea0hnvQh/P7gfQHpQ/jvxZz5VaQPQfJM2ai+DOafEEy9u3l2TsQV0ofik1/6
vhjuSPuAUHD2vfx86CrpQ8E/vU+TPhR7bWqibG5QP0QqxNnNbDkOuu8tVVg/
NPm9TS2dDxW/b9+E0/6oVDiQc8I/yYOwRgXrgh/a7D0pv/MqwW/TaJ46FfQR
0/QR9eTPNpVQX8Mzen8YgjZn32w0SXf4H7iZe84=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1:eJw1VQlQU1cUjRRbccSlUveOoEit1VhjC65wBGRREBJI2AIErQt1iQx2XHAJ
gguirVIFKkgFFasF0RTZrSkgCSIqqygVKK2CHRBFWZyRTn/+v+/OMH9ODuf9
u5z7vtVatWy9iUgkOsr9GZ9CvHLgH4bvHegHWMa8WbBIcpPwCKzbtylrjOw6
4bG49i7slCSuhrAFmuLONc1KGQkBT+KfMP2D+Gkom7G+7UVBMWFLiOdx0V5J
eAY2GGMCO98aV7l4Eiei82wg56Jvm5742air5UKSQHgO8rc2522VXiM8FwnW
7gkXXaoJi1HIRfiO14S/FM6NvUx4gYA/riAswf7brT0DlYWEF6LDLfLi4qs6
wl8J+cxm+XzN68+X/UnYFr8aC/gvkbAdyozx7e+EF0GhTTjjMb6f8GJsNNY/
cIfwEv68tXX/El6Kck7+wb06wssQv7fRPFOcTng5OjPixUU6Nj97jBv919jR
N38j7IAj5SXnrKrbCUOYj+GhgDWAgqunwcDmsQK6faYDp0wfEL8CfZl2t168
uU+8I/xdUwautBDWOOJVv5OJ+gJ7nxOyX+YW1Z09Q7wT7AfbYsb8w/rlDG5a
zZkNpcQ7o2dL/c7+0ibiV8LOGJPLiF8Jg8LUXB/wgngX/J3dFWmwpnloXFCl
nVvVK2H9d4UbZwCtpIh4VxjtPL3jAvFumF/UmfFmXRvxbngp86pQT6d8RO7I
uuOZ3FrD6nOHQ13jYPEwyke0iu+fSM3yW4U9kv3F9YnMH6v5fsonUr2a1fDq
Kl/TtSOXeA9MLNANF9vS/mg8hPPusf56osssqjQtl/yn8eR51dAT4tdAO37p
jcgIA/FrcH9xR6pP5CPivXh/yq/EEO+F8EPV0c6P2H55Y6ttSvUGS3ofvNF7
v7U91+UQ/b83Pnr+JLrwHtWj88axyE8vLHpQQnophhkfOTQvSFE/omr5CdeX
pJfis5Qt2soZxOukyMmvmT5yIeuvDNx6Wle2l5NehizjvqS2kl6GwZaonluG
RtLL+H22Dr5Neh+EOO02fyYlf8EHenXSHokZ7a/GB6qe5ClNWbWk9wGX3XWl
fQPpffn+b3PuJL0vtjtHu+vHvSW9L5+f+5K7pPeFKl8feFhC+yCSI7XlbebA
Luo35Px8NCdTSS9HWsfuNH037ZdOjsSoKWGF4eQ3kQJBjztOnu2m+UEh+KWf
+UWB/CNKxaijl0ivwGPufjU7W096P2G+6VQv/Pj7ctVRtg9+MKafEPsd6f34
fO2y2X3hDxNPq4enx5D/4I+Sp9vym/uSSO+PqU1LMz88RvXq/IX7eYjqEQUI
87WgeSKA79dP19k+B0BX9fmu3QebSR/A+/XHTcy/geielZv0cCebfyB2VSxM
e62MJn0gctJLDvduZv0PROnPZgdsNHmkD4KUM8AJg5b0QTguLups7yZeEwRP
9Z66lMTDpA8Cd93kzUti96cSGYPxqWGXWP5KbLwDM3ULu++UcJygPXmoK5b0
SiQvm7S94in7vgSjzOJd1lSLLNIHI95cbFtwkPU/GL3RXaVrfen7pAuGea2l
ea0hnvQh/P7gfQHpQ/jvxZz5VaQPQfJM2ai+DOafEEy9u3l2TsQV0ofik1/6
vhjuSPuAUHD2vfx86CrpQ8E/vU+TPhR7bWqibG5QP0QqxNnNbDkOuu8tVVg/
NPm9TS2dDxW/b9+E0/6oVDiQc8I/yYOwRgXrgh/a7D0pv/MqwW/TaJ46FfQR
0/QR9eTPNpVQX8Mzen8YgjZn32w0SXf4H7iZe84=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 136.}, {0, 0.8471415119786416}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 136.}, {0, 0.8471415119786416}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJw1VQlQU1cUjRRbccSlUveOoEit1VhjC65wBGRREBJI2AIErQt1iQx2XHAJ
gguirVIFKkgFFasF0RTZrSkgCSIqqygVKK2CHRBFWZyRTn/+v+/OMH9ODuf9
u5z7vtVatWy9iUgkOsr9GZ9CvHLgH4bvHegHWMa8WbBIcpPwCKzbtylrjOw6
4bG49i7slCSuhrAFmuLONc1KGQkBT+KfMP2D+Gkom7G+7UVBMWFLiOdx0V5J
eAY2GGMCO98aV7l4Eiei82wg56Jvm5742air5UKSQHgO8rc2522VXiM8FwnW
7gkXXaoJi1HIRfiO14S/FM6NvUx4gYA/riAswf7brT0DlYWEF6LDLfLi4qs6
wl8J+cxm+XzN68+X/UnYFr8aC/gvkbAdyozx7e+EF0GhTTjjMb6f8GJsNNY/
cIfwEv68tXX/El6Kck7+wb06wssQv7fRPFOcTng5OjPixUU6Nj97jBv919jR
N38j7IAj5SXnrKrbCUOYj+GhgDWAgqunwcDmsQK6faYDp0wfEL8CfZl2t168
uU+8I/xdUwautBDWOOJVv5OJ+gJ7nxOyX+YW1Z09Q7wT7AfbYsb8w/rlDG5a
zZkNpcQ7o2dL/c7+0ibiV8LOGJPLiF8Jg8LUXB/wgngX/J3dFWmwpnloXFCl
nVvVK2H9d4UbZwCtpIh4VxjtPL3jAvFumF/UmfFmXRvxbngp86pQT6d8RO7I
uuOZ3FrD6nOHQ13jYPEwyke0iu+fSM3yW4U9kv3F9YnMH6v5fsonUr2a1fDq
Kl/TtSOXeA9MLNANF9vS/mg8hPPusf56osssqjQtl/yn8eR51dAT4tdAO37p
jcgIA/FrcH9xR6pP5CPivXh/yq/EEO+F8EPV0c6P2H55Y6ttSvUGS3ofvNF7
v7U91+UQ/b83Pnr+JLrwHtWj88axyE8vLHpQQnophhkfOTQvSFE/omr5CdeX
pJfis5Qt2soZxOukyMmvmT5yIeuvDNx6Wle2l5NehizjvqS2kl6GwZaonluG
RtLL+H22Dr5Neh+EOO02fyYlf8EHenXSHokZ7a/GB6qe5ClNWbWk9wGX3XWl
fQPpffn+b3PuJL0vtjtHu+vHvSW9L5+f+5K7pPeFKl8feFhC+yCSI7XlbebA
Luo35Px8NCdTSS9HWsfuNH037ZdOjsSoKWGF4eQ3kQJBjztOnu2m+UEh+KWf
+UWB/CNKxaijl0ivwGPufjU7W096P2G+6VQv/Pj7ctVRtg9+MKafEPsd6f34
fO2y2X3hDxNPq4enx5D/4I+Sp9vym/uSSO+PqU1LMz88RvXq/IX7eYjqEQUI
87WgeSKA79dP19k+B0BX9fmu3QebSR/A+/XHTcy/geielZv0cCebfyB2VSxM
e62MJn0gctJLDvduZv0PROnPZgdsNHmkD4KUM8AJg5b0QTguLups7yZeEwRP
9Z66lMTDpA8Cd93kzUti96cSGYPxqWGXWP5KbLwDM3ULu++UcJygPXmoK5b0
SiQvm7S94in7vgSjzOJd1lSLLNIHI95cbFtwkPU/GL3RXaVrfen7pAuGea2l
ea0hnvQh/P7gfQHpQ/jvxZz5VaQPQfJM2ai+DOafEEy9u3l2TsQV0ofik1/6
vhjuSPuAUHD2vfx86CrpQ8E/vU+TPhR7bWqibG5QP0QqxNnNbDkOuu8tVVg/
NPm9TS2dDxW/b9+E0/6oVDiQc8I/yYOwRgXrgh/a7D0pv/MqwW/TaJ46FfQR
0/QR9eTPNpVQX8Mzen8YgjZn32w0SXf4H7iZe84=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0., 136.}, {0, 0.8471415119786416}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Relative Error\"", TraditionalForm],
  PlotRange->{{0., 136.}, {0, 0.8471415119786416}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.928576784139556*^9, 3.928576838065979*^9, 3.928577379000498*^9, 
   3.9285789371330376`*^9, 3.928579031761656*^9, 3.9285795340298862`*^9, 
   3.928583285169314*^9, 3.9286041311255965`*^9, 3.928604202100436*^9, 
   3.9286043813704977`*^9, 3.928604538050192*^9, 3.92860473637718*^9, 
   3.928604831231182*^9, 3.928604918877482*^9, 3.928604992988595*^9, 
   3.928605066355102*^9, 3.9288333043719215`*^9, 3.9288333942616124`*^9, 
   3.9288479061161623`*^9, 3.9288481016581464`*^9, 3.929775061776429*^9, 
   3.9373035863517437`*^9, 3.9373058283399124`*^9, 3.93762689279084*^9, 
   3.9377497459573116`*^9, 3.9378015580365486`*^9, 3.937801773359295*^9, 
   3.9378031725602016`*^9, 3.93781354319042*^9, 3.937813663553047*^9, 
   3.937834364219883*^9, 3.9378365803770733`*^9, 3.9378401111203556`*^9, 
   3.942859018099533*^9, 3.9428595089417744`*^9, 3.942859935052822*^9, 
   3.9428602267556343`*^9, 3.942861020468977*^9, 3.9428613819570255`*^9, 
   3.94286336967395*^9, {3.9428702476333885`*^9, 3.942870264561676*^9}, 
   3.94287136695825*^9, 3.9428810842241364`*^9, 3.9428812553233604`*^9, 
   3.942883241540388*^9, {3.9428836573170815`*^9, 3.942883672734522*^9}, 
   3.942883909202036*^9, 3.9428848622344894`*^9, 3.9428851583390427`*^9, 
   3.942885468363863*^9, 3.9428858109776115`*^9, 3.9428868458716087`*^9, 
   3.942887353232647*^9, 3.9428939633049183`*^9, 3.9428945002148495`*^9, 
   3.942895468620615*^9, 3.9429451027719097`*^9, 3.942945725713457*^9, 
   3.942994398370697*^9, 3.943015193360569*^9, {3.9430169020605316`*^9, 
   3.943016921454317*^9}, 3.943091731417904*^9, 3.943261436363037*^9, 
   3.943275720517372*^9, 3.9463447893410873`*^9, 3.9469614338385525`*^9, 
   3.946964269804167*^9, 3.9469752041934433`*^9, 3.9512179974231625`*^9, 
   3.9519416268240776`*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"0d613f2a-2745-354b-a333-1366a106b072"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "relErrors", "]"}]], "Input",
 CellChangeTimes->{{3.9373036125805016`*^9, 3.937303616389225*^9}, {
  3.9377481573097687`*^9, 3.937748175129925*^9}, {3.9377490010902023`*^9, 
  3.9377490045878334`*^9}, {3.937801568557888*^9, 3.9378015698943195`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"edf6a3b4-d8b9-7f45-a5c0-f91da3225321"],

Cell[BoxData["0.25719838337680784`"], "Output",
 CellChangeTimes->{
  3.9378017733743725`*^9, 3.9378031725759087`*^9, 3.937813543230444*^9, 
   3.9378136635842876`*^9, 3.937834364425062*^9, 3.9378365803871803`*^9, 
   3.937840111149908*^9, 3.942859021156927*^9, 3.94285951334807*^9, 
   3.942859935091692*^9, 3.9428602285964775`*^9, 3.9428610205043907`*^9, 
   3.942861386864538*^9, 3.942863369715353*^9, {3.9428702476643944`*^9, 
   3.94287026933585*^9}, 3.942881085868658*^9, 3.9428812568745594`*^9, 
   3.9428832429806576`*^9, {3.9428836573383884`*^9, 3.942883674330633*^9}, 
   3.942883910301256*^9, 3.9428848644844418`*^9, 3.9428851592800903`*^9, 
   3.9428854695434074`*^9, 3.9428858125935936`*^9, 3.9428868478771515`*^9, 
   3.9428873551475296`*^9, 3.9428939662242393`*^9, 3.9428945021135216`*^9, 
   3.9428954708254337`*^9, 3.9429451049735584`*^9, 3.942945733983881*^9, 
   3.9429943997098274`*^9, 3.9430151954702797`*^9, {3.943016902081629*^9, 
   3.9430169271840954`*^9}, 3.9430917324234104`*^9, 3.9432614378735123`*^9, 
   3.943275721996971*^9, 3.9463447913236885`*^9, 3.946961436302025*^9, 
   3.9469642714115887`*^9, 3.946975204254427*^9, 3.951217999418827*^9, 
   3.951941626853756*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"273f36ab-55d4-5d4d-8805-3a201b178194"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["t3m50q70u80mfpos, Net0, 31 coeffs", "Subsubsection",
 CellChangeTimes->{{3.951218360087137*^9, 3.9512183795434628`*^9}, {
   3.9512184380557003`*^9, 3.951218442389059*^9}, {3.951244975041462*^9, 
   3.9512449763466873`*^9}, {3.9516450486717033`*^9, 3.9516450495929737`*^9}, 
   3.951917378127245*^9, {3.9519395221529045`*^9, 3.9519395250095406`*^9}, {
   3.9519403399247494`*^9, 
   3.951940355718113*^9}},ExpressionUUID->"5743d58a-80d0-a242-85ed-\
7d3afe335b1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t3m50q70u80mfpos", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"theta3", "[", 
      RowBox[{"m", ",", "70", ",", "80"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "50"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{"\"\<t3m50q70u80mfpos.mx\>\"", ",", " ", "t3m50q70u80mfpos"}], 
   "]"}], ";"}]}], "Input",ExpressionUUID->"40c2fca4-fbe9-1e4c-9548-\
5448101996d5"],

Cell[BoxData[
 RowBox[{"<<", "t3m50q70u80mfpos.mx"}]], "Input",
 CellChangeTimes->{{3.951633884710581*^9, 3.951633895194227*^9}, {
   3.951637155662161*^9, 3.9516371569936028`*^9}, 3.9519174146681023`*^9, 
   3.9519403453628273`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"3eb791cc-b6c6-9e41-afec-bb15d46c37f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawdata", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"t3m50q70u80mfpos", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", " ", "/@", " ", 
   RowBox[{"Keys", "[", "rawdata", "]"}]}], " ", "//", " ", 
  "Union"}]}], "Input",
 CellChangeTimes->{{3.949396979546838*^9, 3.9493969818948793`*^9}, {
   3.949397465440243*^9, 3.949397471581769*^9}, 3.949397993348729*^9, 
   3.9493980307561817`*^9, 3.951217397529335*^9, 3.9512182874302464`*^9, 
   3.9512185681553955`*^9, 3.95124496019133*^9, 3.9516371720645676`*^9, 
   3.951917416508539*^9, 3.9519403493806133`*^9, {3.9550971753041058`*^9, 
   3.9550971759538975`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"08bad533-dc69-1946-b3ef-1316ecd94794"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "31", ",", "60", ",", "70"}], "}"}]], "Output",
 CellChangeTimes->{3.955097178686659*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"3814a4b1-d080-a443-9535-1bc2088de6d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"datadefn", "[", 
    RowBox[{"rawdata", ",", " ", "31"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"datasize", " ", "=", " ", 
  RowBox[{"Length", "[", "data", "]"}]}]}], "Input",
 CellChangeTimes->{{3.950466979697073*^9, 3.9504670032290287`*^9}, {
  3.950548241959532*^9, 3.950548243011196*^9}, {3.9511307485936775`*^9, 
  3.9511307619375916`*^9}, {3.95114093350572*^9, 3.951140935052601*^9}, {
  3.951217748577183*^9, 3.9512177525579643`*^9}, {3.951218299047146*^9, 
  3.9512183012777863`*^9}, {3.951236664634691*^9, 3.951236665823395*^9}, {
  3.951645031911249*^9, 3.9516450324473896`*^9}, {3.95193952824798*^9, 
  3.951939541019356*^9}, {3.9519403604832363`*^9, 3.95194036113249*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"22b4bc74-e50e-6441-9aef-c42b855716f0"],

Cell[BoxData["1960"], "Output",
 CellChangeTimes->{3.951939546513899*^9, 3.9519455715118217`*^9, 
  3.9550971860079784`*^9, 3.955097995648182*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"375e4424-50d5-534f-aedf-ccf021b43534"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"traindata", ",", "valdata", ",", "testdata"}], "}"}], "=", 
   RowBox[{"datapartition", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.948968149279277*^9, 3.948968160392371*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"f2625fa5-d305-4749-a4a8-73ff4b2d2576"],

Cell[BoxData[
 RowBox[{
  RowBox[{"enc", "=", 
   RowBox[{"NetEncoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Function\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"N", "[", 
          RowBox[{"Abs", "[", "#", "]"}], "]"}], "]"}], "/.", 
        RowBox[{"Indeterminate", " ", "->", "0"}]}], " ", "&"}], " ", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"Keys", "[", 
        RowBox[{"data", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.942855925789545*^9, 3.9428560552594795`*^9}, {
   3.942856092110628*^9, 3.942856092403679*^9}, {3.942856200450712*^9, 
   3.942856221974493*^9}, {3.9428562938356533`*^9, 3.9428563132171135`*^9}, {
   3.9428563516555195`*^9, 3.942856361730505*^9}, {3.94285641018964*^9, 
   3.9428564169157906`*^9}, {3.9428566343816376`*^9, 3.942856664328413*^9}, {
   3.942856765599806*^9, 3.942856770589876*^9}, {3.9428568242589626`*^9, 
   3.942856833737961*^9}, {3.942856922226433*^9, 3.942856939468569*^9}, {
   3.9428570003921947`*^9, 3.942857002608448*^9}, {3.9428570762787895`*^9, 
   3.9428570861728783`*^9}, {3.942857206896509*^9, 3.942857216184204*^9}, {
   3.942857266906107*^9, 3.942857293195463*^9}, {3.942857339484434*^9, 
   3.9428573413578777`*^9}, {3.942857775498678*^9, 3.942857805441332*^9}, 
   3.9428587382314224`*^9, {3.9428596750801353`*^9, 3.942859690599987*^9}, {
   3.9428811508902016`*^9, 3.9428811516687145`*^9}, {3.942882822162916*^9, 
   3.9428828226440506`*^9}, {3.942891467569147*^9, 3.9428914684078293`*^9}, {
   3.942893444988821*^9, 3.9428934456336803`*^9}, {3.94299122653574*^9, 
   3.942991227077423*^9}, {3.9429918280926533`*^9, 3.9429918291463585`*^9}, {
   3.943014438374504*^9, 3.9430144385362873`*^9}, {3.9430146120651627`*^9, 
   3.943014613264702*^9}, {3.9430746274453983`*^9, 3.9430746319617634`*^9}, {
   3.943086106278618*^9, 3.9430861108354454`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"11f36f30-9bb1-6b48-8fe9-95d6829b07e0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"t3m50q70u80mfposcsv", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"enc", "[", 
         RowBox[{"Keys", "[", "data", "]"}], "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"Values", "[", "data", "]"}], "]"}]}], "}"}], "]"}]}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<t3m50q70u80mfpos.csv\>\"", ",", " ", "t3m50q70u80mfposcsv"}],
     "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.95509725478796*^9, 3.9550972794185715`*^9}, 
   3.9550979821482773`*^9},ExpressionUUID->"25af21d8-b5ec-f14b-9e42-\
22ddd023d4f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"net0", "=", 
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "256", ",", " ", "Ramp", ",", "128", ",", " ", "Ramp", ",", " ", "64", 
        ",", "Ramp", ",", " ", "32", ",", " ", "Ramp", ",", " ", "8", ",", 
        " ", "Ramp", ",", " ", "4", ",", " ", "Ramp", ",", " ", "1"}], "}"}], 
      ",", 
      RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
      RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net1", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"512", ",", "Ramp", ",", "256", ",", "Ramp", ",", "128", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<Swish\>\"", "]"}], ",", "256", 
       ",", "Ramp", ",", "64", ",", "Ramp", ",", " ", "32", ",", " ", "Ramp", 
       ",", " ", "8", ",", " ", "Ramp", ",", " ", "4", ",", " ", "Ramp", ",", 
       " ", "1"}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net2", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"512", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", "256", 
       ",", "Ramp", ",", "128", ",", " ", 
       RowBox[{"ElementwiseLayer", "[", "\"\<Swish\>\"", "]"}], ",", "64", 
       ",", "Ramp", ",", "32", ",", " ", "Ramp", ",", " ", "8", ",", " ", 
       "Ramp", ",", " ", "4", ",", " ", "Ramp", ",", " ", "1"}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net3", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"256", ",", "Ramp", ",", "256", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", "128", 
       ",", " ", "Ramp", ",", "128", ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", "64", ",",
        "Ramp", ",", " ", "32", ",", " ", 
       RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], ",", " ", "8", 
       ",", " ", "Ramp", ",", "4", ",", " ", "Ramp", ",", " ", "1"}], "}"}], 
     ",", 
     RowBox[{"\"\<Input\>\"", "->", "enc"}], ",", " ", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.943086590563572*^9, 3.9430865912852364`*^9}, {
   3.943092215994051*^9, 3.943092219888052*^9}, 3.943274784825466*^9, {
   3.946344662853647*^9, 3.94634467496471*^9}, {3.9469606582222023`*^9, 
   3.946960665196287*^9}, {3.9469622697158012`*^9, 3.9469623043284225`*^9}, {
   3.9469729958636456`*^9, 3.9469730327002487`*^9}, {3.9476083277615395`*^9, 
   3.947608337800144*^9}, {3.9512177742901173`*^9, 3.951217776259411*^9}, {
   3.9516157996529827`*^9, 3.951615801047636*^9}, {3.9516159076423836`*^9, 
   3.951615923245056*^9}, 3.9516160267049923`*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"b0acfd4d-54c0-3d4b-a9a8-39e373646253"],

Cell[BoxData[
 RowBox[{
  RowBox[{"epoch", " ", "=", " ", "12000"}], ";"}]], "Input",
 CellChangeTimes->{{3.939803449475828*^9, 3.9398034544066124`*^9}, {
   3.939805073997675*^9, 3.939805075016777*^9}, {3.9398057683030643`*^9, 
   3.939805768804888*^9}, {3.939844390129118*^9, 3.9398443918980103`*^9}, {
   3.9399198812074203`*^9, 3.9399198858230934`*^9}, {3.9399223577628784`*^9, 
   3.939922358406822*^9}, 3.942036051340982*^9, 3.942126898679775*^9, {
   3.9428590586009235`*^9, 3.942859059658777*^9}, {3.942859761719305*^9, 
   3.942859762535877*^9}, {3.942862246606962*^9, 3.9428622473317833`*^9}, {
   3.942880393658924*^9, 3.9428803945651417`*^9}, {3.9428828444192524`*^9, 
   3.9428828457644615`*^9}, {3.9428839215721703`*^9, 3.942883922658594*^9}, {
   3.942944515668728*^9, 3.942944517115345*^9}, {3.9430861233510284`*^9, 
   3.9430861253755417`*^9}, {3.9430871200220375`*^9, 
   3.9430871202132473`*^9}, {3.9430885608706455`*^9, 
   3.9430885613840103`*^9}, {3.943091819901491*^9, 3.94309182089942*^9}, {
   3.946344415193161*^9, 3.946344416825466*^9}, {3.9512177816879864`*^9, 
   3.9512177851561375`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"144265c2-9f5e-ff4d-997d-3e18aea85121"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net0", ",", "traindata", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "valdata"}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "epoch"}], ",", " ", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}]}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"tNet", ",", "valLosses"}], "}"}], "=", 
  RowBox[{"result", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<TrainedNet\>\"", ",", "\"\<ValidationLossList\>\""}], "}"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9430861460783806`*^9, 3.9430861464263725`*^9}, {
   3.943086794649988*^9, 3.943086795073509*^9}, {3.9469611966479473`*^9, 
   3.9469612043583927`*^9}, {3.9469767597245064`*^9, 
   3.9469767610234604`*^9}, {3.946985103018404*^9, 3.946985103601967*^9}, {
   3.95121779250321*^9, 3.9512177964281063`*^9}, 3.951218449018017*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"2eaa8919-d6e7-8043-9188-636d1b537cae"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "15814"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "687"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["44s"], 
                  TextCell["44s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "23226"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "1470"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "294"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "1012096"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["GPU"], 
                TextCell["GPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.91\"", "\[Times]", 
                    SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
                    False], 0.00491331459483715, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"5.41\"", "\[Times]", 
                    SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
                    False], 0.005411860202794513, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[GridBox[{
                {"", 
                 ItemBox["\<\"rounds\"\>",
                  DefaultBaseStyle->"LabeledLabel"]},
                {
                 RotationBox[
                  ItemBox["\<\"loss\"\>",
                   DefaultBaseStyle->"LabeledLabel"],
                  BoxRotation->1.5708], 
                 GraphicsBox[
                  {AbsoluteThickness[1.25], {
                    {Hue[0.083, 1., 1.], LineBox[CompressedData["
1:eJw1mHk41Osbxm2dirShTkSoI5GOtJd4UBERUVGy79mXsWs2SkUJldKmaKFQ
2aJepY5+1iIRomzZzW6s/b5Tb/5xuWbmO+/7PPf9ue+LkpPfIVcRISGh9cJC
QoLff368LviYC3/i6Wpam/CvOYqACYNL+yzdgf9eCmo7li5O0m/UNRILCPa4
JAdh92uFtw/exq8rQ96De5+8tUqQ9ga7QuFJFbgQeOWMdXM9+v1+dSjIb3sv
frcZqY3opbnLaMLhtTEyz9W+od+f14Jlbz6ue72gB22tsDpa93gzeEcIPxT7
2YqftxX+0ufQO/wakT7x6S37dsCF+BtUSZMf+Pm7IHPGjtcY0YrM/CIar3fs
Bqn3cm88vjbi7wN46KvXm2aVofs44z8jyi49mLPV+8SkWRk+vz5cS7oj9Dzx
LXom+eH+89MG4HwzLcBMbxSfZw9sfyws4xE6hkrCvvzV37gXtsj9PdbpMYrP
tw+sPua+TLJgI9Td5SqnaAT1IobierGD+Lz74Unz08QVvn3ondnwWzNvY7jc
oVrgy+jB5zcBhZ0ZVj7cb6i6hLuaWnwAnqVb5GV59uL7mMKi82PHL7X1o49r
flILxA4CpcGkuVW6H9/PHMb3XrSSjOtEw4bEAx+Yg93WzBmX43fwfS0gQ8+7
4JN2KfKdOaOYWGcBvDsTaiDzHc//EDC1KLocpV7EekoMgHMITEPSpGZav+F5
WIJBrcPS+UsYiDjsqdeyVtBZnjYql87E87GC3NpY7ntlJuLLL/+3DQ6DXF8C
7bMYA8/rMEgwx9tfeI4hwW04bkdA5HKmV6tlN57fEZAsHL3gU9qKZonjLUw4
Cs3zx+xT8p7ieVrDS8M2j6elHYisk7lb9Zk1eHSUnx6zHMLztYGvjyE+5eoY
EuOsG9H7YgMUPWOrvU9G8LyPwZHe5sC15mwU9/BJ+vGfx+B9mlH5gCEDz/84
ZBczrheKdSBx+00HQv6xhQmRKomC4ird3/uwhcfWnDmqGR91z0sXTyWanADV
xS3BzPRuvJ8ToFX9vMXcdgAtrtLOfhBgB+tbtU3r5UfxvuyhNdSLGijBRMT0
jr25Yg+fJJfmrBVj4f05AD9hZOCoMQOdk109Z9TOAT5Oum/sixvB+3SApZcL
apWz+tGBkN72SaYDvCXdM3C8yEK/9+sINGfN9qE8LlpIrGturCOYbt/gvsFo
CO/bEZat+mDJOc1E9Wpe56X/doIXNOX/SVUy8f6dIMS3bkrzzRBKil3vopTt
BC422+wX2XRiPTjBF14eSmjrQ4e+je7aoOMMjItmdOuVzVgfzrDUlpQhPnUT
Se/Kl9r10RkW032NZbR/YL24gGJA3QneKSZqSg0aMnRxAd28rP/SgrhYPy5g
XdHmX8PioCuMLRVW48T7Vy5We5M0jvXkCsfMQnfKmHHRr+OedYUasm+skAsT
68sVZlpKT2yOYyLZrBeBvvJuoHTyw2okw8F6c4Po6PxVGfEM1CYUbRyZ5wbJ
i2vcfKt6sf7c4JOO6JLadAa6cVxX+YyBO6hcDL032czFenSHTvlJc4l5DCR4
d8pnd3isw1i+l/0d69MDZD1OFUYJ9SLFJW8/3vH0gK1Zy2oKGSNYrx7gfz1H
x7KBgb6fJBQ47QGTTredpUpYWL+ecD9k0WrZ1d3oLrHO0gue4LFdZeNmdpPu
bz17gua7PYuOrWlCLkoSNu+VvUA78eHND/tGsb69oM7kW5zNex5SiarVbCrw
AjWO+RQjcxLr3QtMHAJ8Mgsm0I/PF+Z1GZ2EcdL/7DVOTmL9n4RQVGQKPePo
4UZiw20nIX3lsHRozDT2gzcsT3623GlsCnkJDOBL/C3fEKdWM4l55Q2p5u3y
Fm0TaL3gC0R84OK3v3+U7RtHv/3iA54FmhMpBhz0S+6pPvAWvS66Ps7H/vGB
2HjjQNVxDspNJxag6guM7Te3fJ9kYz/5wrEKl+9R7nzkP04IotQXzqzaYVh4
fAT7yw8kN8sW1txiIC2BQM38oPb8mtdVNV3Yb36gKJtwWmfhV8TOIQzz3Q/6
FVa3i74ewP7zh9W2d+fF+P9ArTSterWd/pDgHFu08NMg9qM/xHLGqus6WEgg
73yaP3TJsr9aPxzA/vQHlzPq8/eu4KL0Dk7Wtlp/KNSJk3WZ5mG/+oO+Z+I0
V3YUzUh8XvpqWQC8WpDuf1megf0bACwxXnbmWQY6saMoZo9DALwcb3RrJPT8
288BkLxpUNpxegC9crs6WPUwAMpvzqrGnPqB/R0Ag1Zu66+NfkerUsKPWLAD
gNbgk1+c2If9HgjkLuFl+uq9iEyMo1k7EHLOMN22sPux/wOh+o6Unn7SABLY
2y4uEK6bfCgOWdGPeRAIMp22z4re9CC9lfLXeuoDYU2nea7UaxbmQyCwlivY
7w9io4z9s3NOrgiCfPn4ZMpbFuZFECSv+DyWtYuNREM7A5hOQZCp2v6P689x
zI8gOMuq3UiyGUHO98q/huYEQZ8Movcq9mOeEJ9n3VoYH8ZFhLv2z3KDgE1f
aLAudQLzJRjurwoTV9vXhf4h5EDXDYZnTcY3FDZ3Y94Eg5aRPSl1LQvFEdeR
iA+GyxJqFWkvBjB/gqFsj8YeafJ31GezNyGpIRg++FTExbkwMI+CoWJH/qUa
Pg8ZnlaZWL4yBERK2I4v7w1jPoVAO6OCutp7BD14Ptf1pmsIPJsJbTqaz8a8
CgGhx/63PNlcNL+r/8Oa3BBwe3RPQ+/GD8yvECCJkTOCdzKR5yJC8PwQED2o
pDoQxsY8I0Ge6/UoihEfCeywUZ8E45seME2G2JhvJDDMGi3fXDCC1AUGPUeC
hxX/6lSfZGLekcDenHks9mAXOn/Fh6zTRIJce6lmpiQX848EdAfLbZN+HETQ
ZPitQigor9/NvLBnHPMwFET44Z7UlFZkyvrX2sQjFMjDudYeQ7cxH0Nhp7lM
QdxLNnqyigBgfigUOrvNc9flYV6GQlWfifpRHw5aJHjAVCh09CRlHG6ZwPwM
g0ODJ3SLczjoFw72hMGTlfeSn29iYZ6GQfet5wf1TdlIYAfXxDBomu95NqNs
FPM1DG4tW8mZdmtFGwULbw6DT+ZU3/2vqjFvwyBiMOEvxel+dEmEEKBSOPR/
yXtTnfqHv+GgLOe+IqqVhwTX43uFQ1PUxi+S3tOYx+Ggrp5R7zmHjywFBn0e
DuKismBwawj3jXCwKs+guG7goudnCWDMhkPyNkuNvN3jmNcR0CO3ymf6CA/J
EDg8ZxgBB8QKu0B4FvM7AqQkUnd8uchDAlwsSYqAa8VfzklXsDHPI+DsOyvJ
udZsRNDD7WprBMyQPJ8Kv2BgvkeA4snrSf5UNtoGtxoU1kRCzlENi4xVnZj3
kUB+M36/qO0HukqsP9MnEt6VTWzJW/qn/0SC/9y+xnUhHESo9ZF6USSkWJqW
uJUycB5EgjMjZ67Epwlk815/2VOhKPCdHJ7UyfuTD1HwvKF/4ZjdT/SCiIPt
xlFwm5f2aG8BF+dFFJgOB/57gzSG5AicvkqOAtWu3kVmFSM4P6JA8a6lkN87
Loo0Jxz4NQqyuetM7Vz6cZ5Eg73e7fDHpAHUHl35rlolGlRaIv/b9uRPvkTD
Ner5cvP0cbSbsMch/2jwNljn9uMdG+dNNMRccs4O3sZBN1vib7SURMPTLA9G
jOsYzp9oKGl2eKklzkIEvebbi8aARqHI/E21fTiPYkDI8WFjWO4gEly390AM
kMzk1njdmMD5FANhOzvbIy9zULmDxveTl2NgQq7xc3XZBM6rGFB17pwRLeQg
pcSFpqzOGOAaPDvXUDOB8+sUKG3mdavXDyJK6Vhx2LpTYFv5wjlfogvn2SlY
KrqpjTOnGQnw8TPwFARW6liY+P3Jt1Nw9xVV1fw6Fxkse3oxtuwUWDPezC8Y
5OO8I15XUT42r2cKNRD4nCNKBlmjHRsNEzg4/8iQzCePlkv2I+r2nZv/t5YM
nxVS3Q0tODgPyVAVXLJzsIuPNgkC5QAZVDNKzuW+5OF8JMO2pWP1KkTedbvK
3T4YQIY7u0ujpLO5OC/J4FUadWJyagQlTxMBeJkMqSWaD7aI/8lPMlypPauR
u52B9gje8IIMIYl1J0JspnCekqHb0j6j9tEEEtgtrZN4XkPQ1/eekzhfyXBY
dKbFY8EUEsSHrRgFfOfSbs1P5+O8pUDdE9H+1ZV8dJig/ap1FGC8/9HT4s3F
+UuBRL6Dg/FUGyLU2d1lSgGLZPcMcU43zmMKOBv+RbIY4qFCeu6KrEAKyAFD
NHPzLM5nChTVrWPRvk4iN+L6nlcocOObt0HFBj7Oawqck25Ps5zLRIL1rC+j
gF/gYFuWFx/nNwVSLtautxbnoEoCN2PfKLDI7uanip18nOcUYF1azPu7axwJ
4vPpHCrMeGrnKI6O4XynwqvqPUXNCSy0luS0lqRGhZT8BpUohZ8476lQWrWk
Q11hGLUsIAh2kArGY8+yEZ2N858KTLVP3BpiXmfuGiRPB1GBvUFd++12Hu4D
VLBW09OqjOGgHYQ80FUqdBZfQtrkLtwPqFCVu7vS3G0IDRDypL6kQrOjY52B
8gTuC1R4LZdMH4nkoV+47aJCrcE3p4QBPu4PVFBrqCAJE/o3FhhwLg12zx0s
sIti4T5BA3eNvPPlKwfRZArvdo06DeQ1K01JrX/6BQ3yAswuxyM+eqROAMOc
BpotX+sONHJx36BB2ommcKk4Fjr+pnmBZQgNjt6LiC8JH8T9gwavVq6wyDXo
RxICwF2jQWRqi3vgNT7uIzQYkjCm27RPoTLCnl9e0WCEOatXuGAa9xMasLbd
4tSunEbeAiB306D4Y5VZzoMp3FdoMKn1NVaeMYEE47CfR4eiq/uPZavycH+h
w0LmcHXrITaqfUYEiAYdXBcvUkrZNor7DB3a63sCNFzYiEhz8z4LOshuLTm7
WIqL+w0djhz3PaD/hYU0BIFHogMKL6JafGbjvkOHvRbftxg84qGOUNsy7+t0
YHXZdhYpzuD+Q4f3m6+GVhqPIgGe/i2nQ84THpf/zxjuQ3SgljRZDSsMIl0i
btk9dLDwOnRP1K4G9yM6nM1WCb51px6NEXIpnB8LT6x7Ug5mTeC+FAva99iS
9QkTiEinlPANsWCTnbuDnjmL+1MsTGmp5Al7zCJzQQGyjIUa5Qq/mDyh8t99
KhYkaoTNjMqEyn/9syosFmQV/aetIkXK/w/+rcGE
                    "]]}, {}}, {
                    {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1: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

                    "]]}, {}}},
                  AspectRatio->Full,
                  Axes->None,
                  Background->GrayLevel[1],
                  
                  BaseStyle->{
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6},
                  Frame->True,
                  FrameStyle->GrayLevel[0.5],
                  FrameTicks->None,
                  GridLines->{{200., 400., 600., 800., 1000.}, {{-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {2., 
                    GrayLevel[0.3001]}}},
                  ImagePadding->1,
                  ImageSize->{302, 182.},
                  
                  PlotRange->{{0, 687.0217391304348}, {-2.6470000000000002`, 
                    2.1470000000000002`}},
                  PlotRangeClipping->True,
                  PlotRangePadding->None,
                  Prolog->{{
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    Offset[{-2, -2}, {200., 2.1470000000000002`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["400", TraditionalForm], 
                    Offset[{-2, -2}, {400., 2.1470000000000002`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["600", TraditionalForm], 
                    Offset[{-2, -2}, {600., 2.1470000000000002`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["800", TraditionalForm], 
                    Offset[{-2, -2}, {800., 2.1470000000000002`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{-2, -2}, {1000., 2.1470000000000002`}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 2.}], 
                    ImageScaled[{0, 0.}]]}}]}
               },
               
               BaseStyle->{
                FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                 GrayLevel[0.4]},
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               GridBoxSpacings->{"Columns" -> {{0.5}}}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{3.9512179827379284`*^9, 3.951218809151697*^9, 
  3.951648507605051*^9, 3.9519462352203827`*^9, 3.955098083935728*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"1daadcef-315f-f041-af17-c40360cfee96"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"testexact", " ", "=", " ", 
    RowBox[{"Values", " ", "@", " ", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"testdata", ",", " ", 
       RowBox[{"x_", " ", "/;", " ", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "==", "0"}]}]}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"testdatamod", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"testdata", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", "#", "]"}], "!=", " ", "0"}], " ", "&"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testexact", " ", "=", " ", 
     RowBox[{"Values", "[", "testdatamod", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testpred", " ", "=", " ", 
     RowBox[{"tNet", "/@", 
      RowBox[{"Keys", "[", "testdatamod", "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9521661215231304`*^9, 3.9521661335510197`*^9}, {
  3.952166196933632*^9, 3.952166216092436*^9}, {3.9521662511942883`*^9, 
  3.9521662602824726`*^9}, {3.9521663501926346`*^9, 3.952166379348604*^9}, {
  3.9521664714242153`*^9, 3.952166519737095*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"d136389c-dacf-1e42-af5e-4cbf7837ae47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"testexact", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{"testexact", "-", "testpred"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Absolute Error\>\""}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"AspectRatio", "->", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92857646495968*^9, 3.928576480140782*^9}, {
  3.928576579015691*^9, 3.928576581574418*^9}, {3.9285766914801493`*^9, 
  3.92857669610519*^9}, {3.928582499386018*^9, 3.9285825317435923`*^9}, {
  3.9285832298528986`*^9, 3.92858325389485*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"ea300982-20b4-774b-8d67-3085ca002439"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], PointBox[CompressedData["
1:eJxdln9ollUUxy8h9EJm/uEfw1a9oyX9ImqzuX6+z0zL9cu1zEq0HqxZVGC2
ylJj15mutVl7Z65tuXz241VLZ86yvbVqT1HRP4Zg1IhBTxJEUERGIkSgPudz
wuNgGx/ufc4953t+3Fu2fGV9w1nOuS9P/p76Lz8zglN/J5viXIr+lpSj3V/B
t6bssnm4NuWk9iC8MGX/7DhcmXIwY0w4DmT92G7W68Re9K6wu1f4m9fhmSlX
zxxlf7XYOxwJR+xvGsmd7n9wdgv77xA+ynq8SM4/H/Y54fPUvwVib3o9LN+7
7uXC4T2y/+ABzquS9T86YPHPj6s+sj++6HO4PuVw32H2X5Zydske1q+W74/0
CQcB+qyEa8TecBGeK/G1fQTfJvzmB8JZ9K1ey3mlws88As8Se/nt8DVy/sQ7
8E0pJ19/jH93if1B9PJ3y/4h9IhvF/tlncKJxOtKPsHelRLvsvfhCrE3tQBf
L/trX4bLhL9dwXmy31/VA7N/spn4pV7dlJdg/BnqMPEm36v/1PMPXTD7S1/h
e6kXV8SfWPR3x58y9eEP7DT14aJNnHdpynXzR028cesuzsP+RCN8o+gRU9/+
ZlmvW2fyH/xH/rOcl/kURu8X8DeCB3awTr8UtR4uF3sF8ufnyvqsfnie8Br6
0Ut9uZ4B0/8uzqEH9pd2m353q4ZgqR/fNwxTP5V7rX4lG6kftbfd6Okayb8j
X6v7TP+4ZB88O+WkkvoN6O9fiD+L/j/RL07mlfvtNVP//uc+q09Vv41/CvH6
O4XLXzT94bLrzXx0hxqIn/6cHsLYK+RtP527w+jl/t2KXuR3s85Pidd3dpn5
lDRofFI//tf3YPrlb+rRMe9qdZ15vkDjXSzr3Z1m3rhFrTD5XDhI/ZFP97Ct
z+63sH+tcNUa+Abhi7W/sf/0G1avil4Ye8uYV8F9wuu1PuekHNcwX2Pyc0ne
6televJ9Br1D4o2W4B/18/xGU3/+r4K9n2ZzfiDn+d8HzDz2q8atPp8VrD7T
0DeLP19QfxG8WOub+bVB5wn+Nbfa++sY9ZBQ76PokRDfBTrv0Tuz1dzP/jq9
z2U++aFec/+4kjPqYeIJ/L1fWO/z7APC4ducJ/evm9T5gr156j/+rtti8zsN
jplP4aDtnxH8S6iXGr2vsT/QDqN3RusNPr6Bdfw/pO8h7pvVml/038+8DdC7
p9/GE7TZ/m/UeSjx+HDM5muYeZdwfp73SoJ+e7Rfpd6y2/Q+JT9btL8473HN
l8xfV95EftD3IZ1f84XP4b4MqM8fVV/0+f8+Yj7XPQZrv7SZ/MSj+23/Pdlj
7gN3BfUZYm8Xeob4V7rJxlMg/7yv3IXa79THn9yfvJ98NGL60Y31mn50mRZb
nx0tJn9+r75Xmb/tnTafR6kXfS9U428s37ulRaOHr6DfEvx/lHrX99JzkY2/
vN3273evcj56NfP+0PfEim34w/3xz7Cdz0e4b/X94DZTD5w/Ve8TmcfB2p1G
j7jIez94UOzN+TB3AsCe2ec=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1:eJxdln9ollUUxy8h9EJm/uEfw1a9oyX9ImqzuX6+z0zL9cu1zEq0HqxZVGC2
ylJj15mutVl7Z65tuXz241VLZ86yvbVqT1HRP4Zg1IhBTxJEUERGIkSgPudz
wuNgGx/ufc4953t+3Fu2fGV9w1nOuS9P/p76Lz8zglN/J5viXIr+lpSj3V/B
t6bssnm4NuWk9iC8MGX/7DhcmXIwY0w4DmT92G7W68Re9K6wu1f4m9fhmSlX
zxxlf7XYOxwJR+xvGsmd7n9wdgv77xA+ynq8SM4/H/Y54fPUvwVib3o9LN+7
7uXC4T2y/+ABzquS9T86YPHPj6s+sj++6HO4PuVw32H2X5Zydske1q+W74/0
CQcB+qyEa8TecBGeK/G1fQTfJvzmB8JZ9K1ey3mlws88As8Se/nt8DVy/sQ7
8E0pJ19/jH93if1B9PJ3y/4h9IhvF/tlncKJxOtKPsHelRLvsvfhCrE3tQBf
L/trX4bLhL9dwXmy31/VA7N/spn4pV7dlJdg/BnqMPEm36v/1PMPXTD7S1/h
e6kXV8SfWPR3x58y9eEP7DT14aJNnHdpynXzR028cesuzsP+RCN8o+gRU9/+
ZlmvW2fyH/xH/rOcl/kURu8X8DeCB3awTr8UtR4uF3sF8ufnyvqsfnie8Br6
0Ut9uZ4B0/8uzqEH9pd2m353q4ZgqR/fNwxTP5V7rX4lG6kftbfd6Okayb8j
X6v7TP+4ZB88O+WkkvoN6O9fiD+L/j/RL07mlfvtNVP//uc+q09Vv41/CvH6
O4XLXzT94bLrzXx0hxqIn/6cHsLYK+RtP527w+jl/t2KXuR3s85Pidd3dpn5
lDRofFI//tf3YPrlb+rRMe9qdZ15vkDjXSzr3Z1m3rhFrTD5XDhI/ZFP97Ct
z+63sH+tcNUa+Abhi7W/sf/0G1avil4Ye8uYV8F9wuu1PuekHNcwX2Pyc0ne
6televJ9Br1D4o2W4B/18/xGU3/+r4K9n2ZzfiDn+d8HzDz2q8atPp8VrD7T
0DeLP19QfxG8WOub+bVB5wn+Nbfa++sY9ZBQ76PokRDfBTrv0Tuz1dzP/jq9
z2U++aFec/+4kjPqYeIJ/L1fWO/z7APC4ducJ/evm9T5gr156j/+rtti8zsN
jplP4aDtnxH8S6iXGr2vsT/QDqN3RusNPr6Bdfw/pO8h7pvVml/038+8DdC7
p9/GE7TZ/m/UeSjx+HDM5muYeZdwfp73SoJ+e7Rfpd6y2/Q+JT9btL8473HN
l8xfV95EftD3IZ1f84XP4b4MqM8fVV/0+f8+Yj7XPQZrv7SZ/MSj+23/Pdlj
7gN3BfUZYm8Xeob4V7rJxlMg/7yv3IXa79THn9yfvJ98NGL60Y31mn50mRZb
nx0tJn9+r75Xmb/tnTafR6kXfS9U428s37ulRaOHr6DfEvx/lHrX99JzkY2/
vN3273evcj56NfP+0PfEim34w/3xz7Cdz0e4b/X94DZTD5w/Ve8TmcfB2p1G
j7jIez94UOzN+TB3AsCe2ec=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.0000000000000067`, 101.}, {
              0, 0.30764007568359375`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {3.0000000000000067`, 0}, 
            "ImageSize" -> {360, 360}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> 1, "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.0000000000000067`, 101.}, {
             0, 0.30764007568359375`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {3.0000000000000067`, 0}, 
           "ImageSize" -> {360, 360}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> 1, "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJxdln9ollUUxy8h9EJm/uEfw1a9oyX9ImqzuX6+z0zL9cu1zEq0HqxZVGC2
ylJj15mutVl7Z65tuXz241VLZ86yvbVqT1HRP4Zg1IhBTxJEUERGIkSgPudz
wuNgGx/ufc4953t+3Fu2fGV9w1nOuS9P/p76Lz8zglN/J5viXIr+lpSj3V/B
t6bssnm4NuWk9iC8MGX/7DhcmXIwY0w4DmT92G7W68Re9K6wu1f4m9fhmSlX
zxxlf7XYOxwJR+xvGsmd7n9wdgv77xA+ynq8SM4/H/Y54fPUvwVib3o9LN+7
7uXC4T2y/+ABzquS9T86YPHPj6s+sj++6HO4PuVw32H2X5Zydske1q+W74/0
CQcB+qyEa8TecBGeK/G1fQTfJvzmB8JZ9K1ey3mlws88As8Se/nt8DVy/sQ7
8E0pJ19/jH93if1B9PJ3y/4h9IhvF/tlncKJxOtKPsHelRLvsvfhCrE3tQBf
L/trX4bLhL9dwXmy31/VA7N/spn4pV7dlJdg/BnqMPEm36v/1PMPXTD7S1/h
e6kXV8SfWPR3x58y9eEP7DT14aJNnHdpynXzR028cesuzsP+RCN8o+gRU9/+
ZlmvW2fyH/xH/rOcl/kURu8X8DeCB3awTr8UtR4uF3sF8ufnyvqsfnie8Br6
0Ut9uZ4B0/8uzqEH9pd2m353q4ZgqR/fNwxTP5V7rX4lG6kftbfd6Okayb8j
X6v7TP+4ZB88O+WkkvoN6O9fiD+L/j/RL07mlfvtNVP//uc+q09Vv41/CvH6
O4XLXzT94bLrzXx0hxqIn/6cHsLYK+RtP527w+jl/t2KXuR3s85Pidd3dpn5
lDRofFI//tf3YPrlb+rRMe9qdZ15vkDjXSzr3Z1m3rhFrTD5XDhI/ZFP97Ct
z+63sH+tcNUa+Abhi7W/sf/0G1avil4Ye8uYV8F9wuu1PuekHNcwX2Pyc0ne
6televJ9Br1D4o2W4B/18/xGU3/+r4K9n2ZzfiDn+d8HzDz2q8atPp8VrD7T
0DeLP19QfxG8WOub+bVB5wn+Nbfa++sY9ZBQ76PokRDfBTrv0Tuz1dzP/jq9
z2U++aFec/+4kjPqYeIJ/L1fWO/z7APC4ducJ/evm9T5gr156j/+rtti8zsN
jplP4aDtnxH8S6iXGr2vsT/QDqN3RusNPr6Bdfw/pO8h7pvVml/038+8DdC7
p9/GE7TZ/m/UeSjx+HDM5muYeZdwfp73SoJ+e7Rfpd6y2/Q+JT9btL8473HN
l8xfV95EftD3IZ1f84XP4b4MqM8fVV/0+f8+Yj7XPQZrv7SZ/MSj+23/Pdlj
7gN3BfUZYm8Xeob4V7rJxlMg/7yv3IXa79THn9yfvJ98NGL60Y31mn50mRZb
nx0tJn9+r75Xmb/tnTafR6kXfS9U428s37ulRaOHr6DfEvx/lHrX99JzkY2/
vN3273evcj56NfP+0PfEim34w/3xz7Cdz0e4b/X94DZTD5w/Ve8TmcfB2p1G
j7jIez94UOzN+TB3AsCe2ec=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.0000000000000067`, 101.}, {
          0, 0.30764007568359375`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {3.0000000000000067`, 0}, "ImageSize" -> {360, 360}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 1, 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.0000000000000067`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Absolute Error\"", TraditionalForm],
  PlotRange->{{3.0000000000000067`, 101.}, {0, 0.30764007568359375`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.92857650754961*^9, 3.928576706067368*^9, 3.9285768380190897`*^9, 
   3.928577216840497*^9, 3.9285773671466236`*^9, 3.9285789371129527`*^9, 
   3.928579031731576*^9, 3.9285795305602317`*^9, 3.9285832604105678`*^9, 
   3.92860413107821*^9, 3.9286042020534544`*^9, 3.928604381323144*^9, 
   3.928604538003304*^9, 3.9286047363466253`*^9, 3.9286048311999254`*^9, 
   3.9286049188305063`*^9, 3.9286049929411316`*^9, 3.928605066323311*^9, 
   3.928833298200966*^9, 3.928833389271408*^9, 3.928847902595287*^9, 
   3.928848098171273*^9, 3.929775056512608*^9, 3.9373035862849464`*^9, 
   3.937305828323248*^9, 3.937626892741541*^9, 3.9377497457807846`*^9, 
   3.9378015579890556`*^9, 3.937801773328327*^9, 3.9378031725284767`*^9, 
   3.9378135430903244`*^9, 3.937813663497551*^9, 3.937834364125618*^9, 
   3.937836580346855*^9, 3.9378401110394535`*^9, 3.9428590136602592`*^9, 
   3.942859504835455*^9, 3.94285993494582*^9, 3.9428602241971455`*^9, 
   3.9428610202696304`*^9, 3.942861379766073*^9, 3.942863369340626*^9, {
   3.9428702474370117`*^9, 3.9428702621434097`*^9}, 3.942871366813637*^9, 
   3.942881082546217*^9, 3.9428812535782146`*^9, 3.9428832370003624`*^9, {
   3.9428836572851143`*^9, 3.94288367035647*^9}, 3.942883906993143*^9, 
   3.942884860059902*^9, 3.942885156847172*^9, 3.9428854660000744`*^9, 
   3.9428858091534805`*^9, 3.942886833831272*^9, 3.942887350516119*^9, 
   3.942893957981739*^9, 3.942894495114355*^9, 3.9428954618913307`*^9, 
   3.9429451011304016`*^9, 3.942945724126457*^9, 3.942994396399338*^9, 
   3.943015186974367*^9, {3.943016902018955*^9, 3.943016919809738*^9}, 
   3.9430917300086155`*^9, 3.943261434226692*^9, 3.9432757183973007`*^9, 
   3.9463447834004383`*^9, 3.946961430201084*^9, 3.946964267088108*^9, 
   3.9469752040512733`*^9, 3.9512179955231686`*^9, 3.951219080638935*^9, 
   3.951648508063671*^9, 3.951946235996723*^9, 3.9550980952227287`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"f200b1fb-9d2d-d243-ab86-a850ad250e3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"relErrors", "=", 
    RowBox[{
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{"testexact", " ", "-", " ", "testpred"}], "testexact"], "]"}], 
     "*", "100"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Relative Error\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9285767364285045`*^9, 3.92857678118857*^9}, {
  3.92858254051519*^9, 3.9285825619012604`*^9}, {3.928583264051319*^9, 
  3.9285832837728367`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"c7f053e0-eaac-5b48-9e1a-a971e599d8a0"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], PointBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 196.}, {0, 0.4320315558019969}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 196.}, {0, 0.4320315558019969}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0., 196.}, {0, 0.4320315558019969}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Relative Error\"", TraditionalForm],
  PlotRange->{{0., 196.}, {0, 0.4320315558019969}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.928576784139556*^9, 3.928576838065979*^9, 3.928577379000498*^9, 
   3.9285789371330376`*^9, 3.928579031761656*^9, 3.9285795340298862`*^9, 
   3.928583285169314*^9, 3.9286041311255965`*^9, 3.928604202100436*^9, 
   3.9286043813704977`*^9, 3.928604538050192*^9, 3.92860473637718*^9, 
   3.928604831231182*^9, 3.928604918877482*^9, 3.928604992988595*^9, 
   3.928605066355102*^9, 3.9288333043719215`*^9, 3.9288333942616124`*^9, 
   3.9288479061161623`*^9, 3.9288481016581464`*^9, 3.929775061776429*^9, 
   3.9373035863517437`*^9, 3.9373058283399124`*^9, 3.93762689279084*^9, 
   3.9377497459573116`*^9, 3.9378015580365486`*^9, 3.937801773359295*^9, 
   3.9378031725602016`*^9, 3.93781354319042*^9, 3.937813663553047*^9, 
   3.937834364219883*^9, 3.9378365803770733`*^9, 3.9378401111203556`*^9, 
   3.942859018099533*^9, 3.9428595089417744`*^9, 3.942859935052822*^9, 
   3.9428602267556343`*^9, 3.942861020468977*^9, 3.9428613819570255`*^9, 
   3.94286336967395*^9, {3.9428702476333885`*^9, 3.942870264561676*^9}, 
   3.94287136695825*^9, 3.9428810842241364`*^9, 3.9428812553233604`*^9, 
   3.942883241540388*^9, {3.9428836573170815`*^9, 3.942883672734522*^9}, 
   3.942883909202036*^9, 3.9428848622344894`*^9, 3.9428851583390427`*^9, 
   3.942885468363863*^9, 3.9428858109776115`*^9, 3.9428868458716087`*^9, 
   3.942887353232647*^9, 3.9428939633049183`*^9, 3.9428945002148495`*^9, 
   3.942895468620615*^9, 3.9429451027719097`*^9, 3.942945725713457*^9, 
   3.942994398370697*^9, 3.943015193360569*^9, {3.9430169020605316`*^9, 
   3.943016921454317*^9}, 3.943091731417904*^9, 3.943261436363037*^9, 
   3.943275720517372*^9, 3.9463447893410873`*^9, 3.9469614338385525`*^9, 
   3.946964269804167*^9, 3.9469752041934433`*^9, 3.9512179974231625`*^9, 
   3.951219081959015*^9, 3.9516485080948963`*^9, 3.9519462360517178`*^9, 
   3.9550980964311028`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"59523060-9ad5-8d4d-996a-384a999f9666"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "relErrors", "]"}]], "Input",
 CellChangeTimes->{{3.9373036125805016`*^9, 3.937303616389225*^9}, {
  3.9377481573097687`*^9, 3.937748175129925*^9}, {3.9377490010902023`*^9, 
  3.9377490045878334`*^9}, {3.937801568557888*^9, 3.9378015698943195`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"d658f940-6b53-1d47-a128-f9641229efc7"],

Cell[BoxData["0.12907243348916755`"], "Output",
 CellChangeTimes->{
  3.9378017733743725`*^9, 3.9378031725759087`*^9, 3.937813543230444*^9, 
   3.9378136635842876`*^9, 3.937834364425062*^9, 3.9378365803871803`*^9, 
   3.937840111149908*^9, 3.942859021156927*^9, 3.94285951334807*^9, 
   3.942859935091692*^9, 3.9428602285964775`*^9, 3.9428610205043907`*^9, 
   3.942861386864538*^9, 3.942863369715353*^9, {3.9428702476643944`*^9, 
   3.94287026933585*^9}, 3.942881085868658*^9, 3.9428812568745594`*^9, 
   3.9428832429806576`*^9, {3.9428836573383884`*^9, 3.942883674330633*^9}, 
   3.942883910301256*^9, 3.9428848644844418`*^9, 3.9428851592800903`*^9, 
   3.9428854695434074`*^9, 3.9428858125935936`*^9, 3.9428868478771515`*^9, 
   3.9428873551475296`*^9, 3.9428939662242393`*^9, 3.9428945021135216`*^9, 
   3.9428954708254337`*^9, 3.9429451049735584`*^9, 3.942945733983881*^9, 
   3.9429943997098274`*^9, 3.9430151954702797`*^9, {3.943016902081629*^9, 
   3.9430169271840954`*^9}, 3.9430917324234104`*^9, 3.9432614378735123`*^9, 
   3.943275721996971*^9, 3.9463447913236885`*^9, 3.946961436302025*^9, 
   3.9469642714115887`*^9, 3.946975204254427*^9, 3.951217999418827*^9, 
   3.951219083125223*^9, 3.951648508121937*^9, 3.9519462360834084`*^9, 
   3.9550980977223625`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"d1f2f2a0-9418-cb46-a5b3-e86df94e8c07"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"plist", "=", 
     RowBox[{"powersneg", "[", "5", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plist", "=", 
    RowBox[{"klmnneg", "[", 
     RowBox[{"5", ",", " ", "400"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.950260789125361*^9, 3.9502608062245817`*^9}, {
   3.95026446243025*^9, 3.9502644836202984`*^9}, {3.95026526247209*^9, 
   3.9502652626648617`*^9}, {3.950270472193863*^9, 3.950270483537754*^9}, {
   3.951469131353243*^9, 3.951469133110237*^9}, {3.951469204180584*^9, 
   3.951469204689268*^9}, {3.951470695100054*^9, 3.951470712084093*^9}, 
   3.9524361677034893`*^9, 3.953030641035774*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"c9029374-6fd0-5648-ba14-3ca0a8a6ba4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allprodgenby\[CapitalDelta]neg", "[", 
   RowBox[{"50", ",", "70", ",", "plist", ",", 
    RowBox[{"plist", "[", 
     RowBox[{"[", 
      RowBox[{"56", ";;", "60"}], "]"}], "]"}], ",", "0"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9530306087319145`*^9, 3.953030693445713*^9}, {
  3.953030746056204*^9, 3.953030767688801*^9}, {3.953031227310631*^9, 
  3.9530312298179684`*^9}, {3.954321878212393*^9, 3.9543218811086235`*^9}, {
  3.954400979834873*^9, 3.954400983947111*^9}, {3.9544747942385273`*^9, 
  3.954474797591383*^9}, {3.954690383301571*^9, 3.954690385277443*^9}, {
  3.954735342623493*^9, 3.954735346654684*^9}, {3.9548255698290424`*^9, 
  3.9548255772376823`*^9}, {3.954878942636484*^9, 3.954878943191061*^9}, {
  3.9549487749634705`*^9, 3.9549487917657204`*^9}, {3.955028707681593*^9, 
  3.9550287133195896`*^9}, {3.9550827007313232`*^9, 3.9550827054809704`*^9}, {
  3.9551140258320065`*^9, 3.955114027249298*^9}, {3.9551348861135178`*^9, 
  3.9551348903424816`*^9}, {3.9552678540094624`*^9, 3.955267854489891*^9}, {
  3.955268090057966*^9, 3.9552680934777126`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"64f6232f-ecb7-f246-b2b0-79b843aef581"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawdata1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<jacobiby\[CapitalDelta]-klmn-neg2.txt\>\"", ",", " ", 
     RowBox[{"Path", "->", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9530307812163754`*^9, 3.953030786540367*^9}, 
   3.9552680993934536`*^9},ExpressionUUID->"e6943c60-58ef-f84c-b114-\
757b764ebd2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"python",
WindowSize->{1141.2, 568.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"473d0a3d-65b6-8a40-bb15-9cc4b6fe45ff"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 176, 2, 28, "Input",ExpressionUUID->"8d81fb64-086a-c644-8f24-58b9cb674e7b"],
Cell[733, 24, 271, 5, 28, "Input",ExpressionUUID->"2bc32d49-b277-4849-83e4-0d8dd66c602f"],
Cell[CellGroupData[{
Cell[1029, 33, 257, 4, 66, "Section",ExpressionUUID->"13b0e49d-5a8b-3841-8ab4-460a47d57674"],
Cell[CellGroupData[{
Cell[1311, 41, 157, 3, 53, "Subsection",ExpressionUUID->"884784d7-3154-6649-a998-52e06430da1f"],
Cell[1471, 46, 2248, 53, 114, "Input",ExpressionUUID->"56bc5f35-822a-1443-bdf7-08b1db7be599"]
}, Closed]],
Cell[CellGroupData[{
Cell[3756, 104, 162, 3, 37, "Subsection",ExpressionUUID->"a188418c-4586-5048-ac7f-416fa1e61463"],
Cell[3921, 109, 482, 14, 47, "Input",ExpressionUUID->"162e3268-8616-1842-a684-4c1b606b023f"],
Cell[4406, 125, 1475, 42, 43, "Input",ExpressionUUID->"cab97af6-e388-b044-833c-cd2c90839f4a"],
Cell[5884, 169, 456, 10, 31, "Text",ExpressionUUID->"fe6c242a-5deb-c54c-bc81-7f7efe5055e2"],
Cell[6343, 181, 1905, 54, 91, "Input",ExpressionUUID->"bb185398-59f3-904b-9ac3-9fed69d0cb71"],
Cell[8251, 237, 2062, 58, 91, "Input",ExpressionUUID->"54a3c9df-6296-aa4e-9df1-c989331a2393"],
Cell[10316, 297, 2164, 58, 91, "Input",ExpressionUUID->"0a8f230b-a46c-a24a-bdee-ef955f27d921"],
Cell[12483, 357, 2431, 68, 132, "Input",ExpressionUUID->"0083c6a8-f8d8-e64e-9761-8efde37d7487"],
Cell[14917, 427, 2334, 63, 168, "Input",ExpressionUUID->"76872e97-ff8b-b941-8d00-3049d2f49b2d"],
Cell[17254, 492, 2702, 73, 243, "Input",ExpressionUUID->"1bb7ae88-0bd5-dd47-8749-f9619f91b344"],
Cell[19959, 567, 1078, 26, 92, "Input",ExpressionUUID->"404f1e80-a3be-914a-8ae9-445ac0a110f1"],
Cell[21040, 595, 1085, 26, 92, "Input",ExpressionUUID->"206b7d21-914f-b644-954c-d2bca2aa787b"],
Cell[22128, 623, 871, 20, 29, "Input",ExpressionUUID->"8ac8c9ea-decf-c347-9ad4-d92fcd56f0ff"],
Cell[23002, 645, 1338, 35, 72, "Input",ExpressionUUID->"c47562ac-776c-7241-baf0-e570b7dbc41e"],
Cell[24343, 682, 1387, 36, 72, "Input",ExpressionUUID->"17f9b2e0-a5a7-a04f-85ac-19f2954ffa64"],
Cell[25733, 720, 1070, 25, 29, "Input",ExpressionUUID->"0aa0a0d9-2ea9-234f-81b1-ea6aee23b693"],
Cell[26806, 747, 2039, 58, 72, "Input",ExpressionUUID->"96b2106e-8100-3642-b2b5-7178d4fbff97"],
Cell[28848, 807, 2085, 58, 72, "Input",ExpressionUUID->"b5bddd77-b10a-4d49-9321-247107e14b52"]
}, Closed]],
Cell[CellGroupData[{
Cell[30970, 870, 155, 3, 37, "Subsection",ExpressionUUID->"fcd5c7ca-14ba-f741-bd0d-c6a13a2d7390"],
Cell[31128, 875, 1821, 48, 142, "Input",ExpressionUUID->"05e2f716-18ae-384d-b97d-fa20e298e612"],
Cell[32952, 925, 3963, 103, 201, "Input",ExpressionUUID->"1aeb3000-cbc0-254e-a02b-0aaee11b6a5a"],
Cell[36918, 1030, 1473, 35, 85, "Input",ExpressionUUID->"a6134fa5-0d59-bf4d-8487-cbbae0b2711b"],
Cell[38394, 1067, 5213, 129, 312, "Input",ExpressionUUID->"da0e2599-8c32-dc48-b466-895a3be6aa6b"],
Cell[43610, 1198, 4594, 120, 289, "Input",ExpressionUUID->"f56be949-4ab6-e940-be1a-021e6fd7c034"],
Cell[48207, 1320, 1854, 36, 85, "Input",ExpressionUUID->"3b2a6535-13b1-7b4f-b627-221f91a6d89b"],
Cell[50064, 1358, 1772, 38, 85, "Input",ExpressionUUID->"3f27a38f-8145-9f43-bc7b-f5fbc6b9918c"],
Cell[51839, 1398, 4369, 114, 201, "Input",ExpressionUUID->"d8ae0cec-8afd-3346-8196-98b42694e70f"],
Cell[56211, 1514, 6950, 188, 349, "Input",ExpressionUUID->"701c6982-da5e-3f4a-9868-671deb3692f3"],
Cell[63164, 1704, 3401, 92, 85, "Input",ExpressionUUID->"5aeddf89-d703-d74e-a0c2-8a6d75eb1904"],
Cell[66568, 1798, 2078, 57, 85, "Input",ExpressionUUID->"c8ea1bf9-40d9-ec4d-b288-88568851e367"],
Cell[68649, 1857, 4739, 106, 465, "Input",ExpressionUUID->"31931e85-8e07-454e-9aa3-e2b94d96c524"],
Cell[73391, 1965, 3293, 80, 427, "Input",ExpressionUUID->"9faf1b2c-ba4d-7044-9f30-4164af86b047"],
Cell[76687, 2047, 3622, 87, 427, "Input",ExpressionUUID->"0704c786-c2f8-cf4c-95ab-5e0c5adece8d"],
Cell[80312, 2136, 461, 12, 28, "Input",ExpressionUUID->"795f8357-ed07-ae44-9532-3467a5e4c6dc"],
Cell[80776, 2150, 3194, 83, 199, "Input",ExpressionUUID->"957a677c-b5ca-894d-aa15-862dbe916d6b"]
}, Closed]],
Cell[CellGroupData[{
Cell[84007, 2238, 152, 3, 37, "Subsection",ExpressionUUID->"0140148b-e15d-274e-a1eb-58f36519772f"],
Cell[84162, 2243, 363, 9, 28, "Input",ExpressionUUID->"515750f8-5bd4-8541-a333-ac16a2804f83"],
Cell[84528, 2254, 692, 18, 28, "Input",ExpressionUUID->"20d6567b-bd67-9947-b710-f5e5f53eb97e"],
Cell[85223, 2274, 2262, 58, 222, "Input",ExpressionUUID->"cda74111-6e07-1241-97f8-5b57d2824122"],
Cell[87488, 2334, 521, 9, 27, "Input",ExpressionUUID->"690e6e21-28cf-af49-bd72-04d259612fa1"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[88058, 2349, 401, 11, 56, "Chapter",ExpressionUUID->"16300796-8a22-9841-b313-7dc667339d7d"],
Cell[CellGroupData[{
Cell[88484, 2364, 452, 13, 66, "Section",ExpressionUUID->"ca2ae413-5b58-2441-95ed-18a9f3e31203"],
Cell[CellGroupData[{
Cell[88961, 2381, 291, 7, 53, "Subsection",ExpressionUUID->"6d9a8874-77b5-0e4b-8524-377969c6758e"],
Cell[89255, 2390, 3963, 103, 201, "Input",ExpressionUUID->"79257af3-070e-8542-8fbf-1712f2d41251"],
Cell[CellGroupData[{
Cell[93243, 2497, 1374, 41, 52, "Input",ExpressionUUID->"1bb56200-ccfa-8d44-a715-1ae0f876b84a"],
Cell[94620, 2540, 5478, 159, 140, "Output",ExpressionUUID->"feba88c6-d2f2-404c-8540-8d6e69c441b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100135, 2704, 541, 15, 28, "Input",ExpressionUUID->"c044921a-0219-d14c-a62d-27677cf072ee"],
Cell[100679, 2721, 1394, 44, 82, "Output",ExpressionUUID->"c8d1b90c-c1a9-be4c-83b6-5714beae948b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102110, 2770, 486, 12, 28, "Input",ExpressionUUID->"9597e02a-adb8-454f-a6ad-e2a90fa24bc7"],
Cell[102599, 2784, 1289, 30, 51, "Output",ExpressionUUID->"2a59677e-339d-d045-912c-429468420e10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103925, 2819, 355, 7, 43, "Input",ExpressionUUID->"c0cdca5f-ce6e-e647-a1f0-2f2f17fa0c7e"],
Cell[104283, 2828, 373, 10, 46, "Output",ExpressionUUID->"f945c066-3613-274b-acbd-4b1a14862f8a"]
}, Open  ]],
Cell[104671, 2841, 326, 6, 28, "Input",ExpressionUUID->"10041734-9277-a44c-8aad-841e1677f13d"],
Cell[CellGroupData[{
Cell[105022, 2851, 318, 7, 28, "Input",ExpressionUUID->"86c42451-ccec-ca4c-b991-af349b6eea92"],
Cell[105343, 2860, 1785, 49, 82, "Output",ExpressionUUID->"673a3c55-1e2c-c549-b6d8-cde8fa86039a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107165, 2914, 427, 11, 28, "Input",ExpressionUUID->"805d3f9a-f962-0c44-b0b9-d269b49ac675"],
Cell[107595, 2927, 1427, 35, 82, "Output",ExpressionUUID->"53eb8ef2-e94d-e44f-9d5b-337d22deb8b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109059, 2967, 434, 8, 28, "Input",ExpressionUUID->"f3de6dcd-2388-a94c-b675-9322e81ced9f"],
Cell[109496, 2977, 241, 4, 32, "Output",ExpressionUUID->"96f97e92-3d6d-e54b-8d91-5ddaade03d8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109774, 2986, 262, 5, 28, "Input",ExpressionUUID->"a5cd623b-ac7d-2745-a186-f1e3aa19f107"],
Cell[110039, 2993, 475, 11, 32, "Output",ExpressionUUID->"c40a8e32-40f6-ff40-a109-1e115269b94a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110551, 3009, 396, 6, 43, "Subsubsection",ExpressionUUID->"a56c14d4-fb60-6d40-88b1-bc0b077c9c55"],
Cell[110950, 3017, 208, 3, 28, "Input",ExpressionUUID->"2ca1e643-8753-8543-94aa-5e85aac2079e"],
Cell[CellGroupData[{
Cell[111183, 3024, 717, 15, 47, "Input",ExpressionUUID->"caab658a-0653-be44-a2f0-be645844bb96"],
Cell[111903, 3041, 328, 7, 32, "Output",ExpressionUUID->"9e9c201e-a983-034d-8b97-1280a368e0eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112268, 3053, 805, 15, 47, "Input",ExpressionUUID->"5729bc3f-d8a2-b643-95f5-0801f0198717"],
Cell[113076, 3070, 201, 3, 32, "Output",ExpressionUUID->"6e56fa63-a95e-b140-ac35-ea37527ad8e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113314, 3078, 247, 5, 28, "Input",ExpressionUUID->"551a7ecc-9248-1042-b566-69c430631f47"],
Cell[113564, 3085, 1814, 47, 111, "Output",ExpressionUUID->"efedd4d7-ba16-0d44-be9f-a5c6aa8c39c1"]
}, Open  ]],
Cell[115393, 3135, 2026, 36, 28, "Input",ExpressionUUID->"97919fff-7db4-f144-b054-8964c294cf95"],
Cell[CellGroupData[{
Cell[117444, 3175, 313, 7, 28, "Input",ExpressionUUID->"832750dd-4e1c-8e47-a4c3-3d60f7cf0f82"],
Cell[117760, 3184, 1898, 36, 89, "Output",ExpressionUUID->"bc3ce250-1442-4b41-9a8f-f379cef90855"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119695, 3225, 287, 5, 28, "Input",ExpressionUUID->"61f00ccc-22a4-7d46-900e-24566af91690"],
Cell[119985, 3232, 248, 4, 32, "Output",ExpressionUUID->"2b2971f5-e585-3749-aafe-c2dac8b82630"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120270, 3241, 282, 6, 28, "Input",ExpressionUUID->"bd404ce8-943a-e443-9310-c1e118261cc2"],
Cell[120555, 3249, 218, 4, 32, "Output",ExpressionUUID->"52a19757-fbf5-c443-9a98-73787fba1a73"]
}, Open  ]],
Cell[120788, 3256, 885, 23, 47, "Input",ExpressionUUID->"8e36c6a0-2c20-8c48-8491-67d2ffce0f66"],
Cell[CellGroupData[{
Cell[121698, 3283, 303, 6, 28, "Input",ExpressionUUID->"35b55f22-2ebb-5e4e-be82-3f9a37172873"],
Cell[122004, 3291, 4047, 79, 165, "Output",ExpressionUUID->"4c532df0-1d79-2340-8804-53cecf14cbae"]
}, Open  ]],
Cell[126066, 3373, 340, 8, 28, "Input",ExpressionUUID->"6b527e90-e3d4-fc40-b154-1e03c09473e5"],
Cell[126409, 3383, 2030, 37, 28, "Input",ExpressionUUID->"130b0450-7003-2b4b-9e3f-02495ebbe8c6"],
Cell[128442, 3422, 3155, 67, 142, "Input",ExpressionUUID->"af0d0287-3b90-684f-934b-b914a251f688"],
Cell[131600, 3491, 1201, 19, 28, "Input",ExpressionUUID->"41594b7e-240f-ba40-a42b-263064ae440f"],
Cell[CellGroupData[{
Cell[132826, 3514, 1048, 23, 47, "Input",ExpressionUUID->"7c60a2d2-ed7d-3c4f-bdf0-8be33c5babfd"],
Cell[133877, 3539, 25204, 532, 447, "Output",ExpressionUUID->"e9af5b1c-13fc-5f42-9615-f51890ffbbaf"],
Cell[159084, 4073, 310719, 5238, 138, "Output",ExpressionUUID->"ab5cf7fa-cc7b-a547-9311-43597e5efb62"]
}, Open  ]],
Cell[469818, 9314, 1313, 34, 85, "Input",ExpressionUUID->"334f0f25-10f2-634c-838c-cf5395dc208c"],
Cell[CellGroupData[{
Cell[471156, 9352, 746, 16, 28, "Input",ExpressionUUID->"b8c28996-8c25-c945-bd88-d1d4753482a0"],
Cell[471905, 9370, 13328, 281, 387, "Output",ExpressionUUID->"1baf1899-12e2-3042-92fc-568507513335"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485270, 9656, 573, 14, 43, "Input",ExpressionUUID->"e16c3a10-1b0f-a541-bac4-3abc5dc80d0f"],
Cell[485846, 9672, 15259, 310, 257, "Output",ExpressionUUID->"0d613f2a-2745-354b-a333-1366a106b072"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501142, 9987, 368, 6, 28, "Input",ExpressionUUID->"edf6a3b4-d8b9-7f45-a5c0-f91da3225321"],
Cell[501513, 9995, 1283, 19, 32, "Output",ExpressionUUID->"273f36ab-55d4-5d4d-8805-3a201b178194"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502845, 10020, 469, 7, 43, "Subsubsection",ExpressionUUID->"5743d58a-80d0-a242-85ed-7d3afe335b1e"],
Cell[503317, 10029, 493, 14, 47, "Input",ExpressionUUID->"40c2fca4-fbe9-1e4c-9548-5448101996d5"],
Cell[503813, 10045, 312, 5, 28, "Input",ExpressionUUID->"3eb791cc-b6c6-9e41-afec-bb15d46c37f7"],
Cell[CellGroupData[{
Cell[504150, 10054, 768, 16, 47, "Input",ExpressionUUID->"08bad533-dc69-1946-b3ef-1316ecd94794"],
Cell[504921, 10072, 217, 4, 32, "Output",ExpressionUUID->"3814a4b1-d080-a443-9535-1bc2088de6d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505175, 10081, 849, 15, 47, "Input",ExpressionUUID->"22b4bc74-e50e-6441-9aef-c42b855716f0"],
Cell[506027, 10098, 225, 3, 32, "Output",ExpressionUUID->"375e4424-50d5-534f-aedf-ccf021b43534"]
}, Open  ]],
Cell[506267, 10104, 336, 7, 28, "Input",ExpressionUUID->"f2625fa5-d305-4749-a4a8-73ff4b2d2576"],
Cell[506606, 10113, 2026, 36, 28, "Input",ExpressionUUID->"11f36f30-9bb1-6b48-8fe9-95d6829b07e0"],
Cell[508635, 10151, 805, 21, 47, "Input",ExpressionUUID->"25af21d8-b5ec-f14b-9e42-22ddd023d4f1"],
Cell[509443, 10174, 3151, 66, 142, "Input",ExpressionUUID->"b0acfd4d-54c0-3d4b-a9a8-39e373646253"],
Cell[512597, 10242, 1197, 18, 28, "Input",ExpressionUUID->"144265c2-9f5e-ff4d-997d-3e18aea85121"],
Cell[CellGroupData[{
Cell[513819, 10264, 1008, 21, 47, "Input",ExpressionUUID->"2eaa8919-d6e7-8043-9188-636d1b537cae"],
Cell[514830, 10287, 25162, 529, 429, "Output",ExpressionUUID->"1daadcef-315f-f041-af17-c40360cfee96"]
}, Open  ]],
Cell[540007, 10819, 1309, 33, 85, "Input",ExpressionUUID->"d136389c-dacf-1e42-af5e-4cbf7837ae47"],
Cell[CellGroupData[{
Cell[541341, 10856, 742, 15, 28, "Input",ExpressionUUID->"ea300982-20b4-774b-8d67-3085ca002439"],
Cell[542086, 10873, 14657, 302, 382, "Output",ExpressionUUID->"f200b1fb-9d2d-d243-ab86-a850ad250e3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556780, 11180, 569, 13, 43, "Input",ExpressionUUID->"c7f053e0-eaac-5b48-9e1a-a971e599d8a0"],
Cell[557352, 11195, 17927, 352, 252, "Output",ExpressionUUID->"59523060-9ad5-8d4d-996a-384a999f9666"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575316, 11552, 364, 5, 28, "Input",ExpressionUUID->"d658f940-6b53-1d47-a128-f9641229efc7"],
Cell[575683, 11559, 1353, 19, 32, "Output",ExpressionUUID->"d1f2f2a0-9418-cb46-a5b3-e86df94e8c07"]
}, Open  ]],
Cell[577051, 11581, 788, 17, 47, "Input",ExpressionUUID->"c9029374-6fd0-5648-ba14-3ca0a8a6ba4a"],
Cell[577842, 11600, 1200, 20, 80, "Input",ExpressionUUID->"64f6232f-ecb7-f246-b2b0-79b843aef581"],
Cell[579045, 11622, 408, 9, 28, "Input",ExpressionUUID->"e6943c60-58ef-f84c-b114-757b764ebd2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

